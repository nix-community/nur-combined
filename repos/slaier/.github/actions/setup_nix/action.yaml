name: "Setup NIX"
description: "Install NIX and Cachix"
inputs:
  channel:
    description: 'Nixpkgs channel'
    required: true
    default: 'nixos-unstable'
  cachix_token:
    description: 'cachix auth token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 1024
        swap-size-mb: 1024
        remove-dotnet: "true"
        remove-android: "true"
        remove-haskell: "true"
        remove-codeql: "true"
        remove-docker-images: "true"
        build-mount-path: "/nix"

    - name: Setup nix workspace
      shell: bash
      run: |
        echo "::group::Create btrfs filesystem"
        sudo umount /nix
        sudo mkfs.btrfs -K -f /dev/mapper/buildvg-buildlv
        sudo mkdir -p /mnt/vglv
        sudo mount /dev/mapper/buildvg-buildlv /mnt/vglv
        sudo btrfs subvolume create /mnt/vglv/nix
        sudo btrfs subvolume create /mnt/vglv/tmp
        echo "::endgroup::"
        echo "::group::Mount /nix"
        sudo mount /dev/mapper/buildvg-buildlv -odefaults,subvol=/nix,compress=zstd,noatime /nix
        echo "::endgroup::"
        echo "::group::Mount /tmp"
        sudo mount /dev/mapper/buildvg-buildlv -odefaults,subvol=/tmp /tmp
        sudo chmod 777 /tmp
        echo "TMPDIR=/tmp" >> "$GITHUB_ENV"
        echo "::endgroup::"

    - uses: cachix/install-nix-action@v31.5.2
      with:
        nix_path: nixpkgs=channel:${{ inputs.channel }}

    - uses: cachix/cachix-action@v15
      with:
        name: slaier
        authToken: ${{ inputs.cachix_token }}
        extraPullNames: nix-community
