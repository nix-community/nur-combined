{
  fetchFromGitHub,
  lib,
  python3,
  rustPlatform,
  fetchPypi,
  version ? "1.2.0",
  hash ? "sha256-tn3aynOEd8DD0ymidMMfMSflpJL6mvJxp+2TPr2IVcw=",
}:
let
  python = (
    python3.override {
      self = python;
      packageOverrides = pyfinal: pyprev: {
        seleniumbase = pyfinal.buildPythonPackage rec {
          pname = "seleniumbase";
          version = "4.38.2";
          src = fetchPypi {
            inherit pname version;
            hash = "sha256-wbME0U/AQrMl0FAUgz9+JXH3MpBiM6qjUckkC6jpze4=";
          };
          build-system = with pyfinal; [
            setuptools
            wheel
          ];
          dependencies = with pyfinal; [
            selenium
            colorama
            fasteners
            requests
            cssselect
            mycdp
            websockets
            sbvirtualdisplay
          ];
          meta = {
            description = "Python APIs for web automation, testing, and bypassing bot-detection.";
            homepage = "https://seleniumbase.io";
            license = lib.licenses.mit;
          };
        };
        sbvirtualdisplay = pyfinal.buildPythonPackage rec {
          pname = "sbvirtualdisplay";
          version = "1.4.0";
          pyproject = true;
          src = fetchPypi {
            inherit pname version;
            hash = "sha256-KaNltQnNe/3k91hgO3t1cDkJsRzfQkWryPgo7TVmDZs=";
          };
          build-system = with pyfinal; [
            setuptools
            wheel
          ];
          meta = {
            description = "A customized pyvirtualdisplay for use with SeleniumBase automation.";
            homepage = "https://github.com/mdmintz/sbVirtualDisplay";
            license = lib.licenses.bsd2;
          };
        };
        mycdp = pyfinal.buildPythonPackage rec {
          pname = "mycdp";
          version = "1.2.0";
          pyproject = true;
          src = fetchPypi {
            inherit pname version;
            hash = "sha256-BgP9jjRUFHxPVJ7aoT9SlPV+y0gWQMA/gI7VSKA/eW8=";
          };
          build-system = with pyfinal; [
            setuptools
            wheel
          ];
          meta = {
            description = "Autogenerated CDP utilities that enable Python to control Chrome directly, without external automation drivers.";
            homepage = "https://github.com/mdmintz/MyCDP";
            license = lib.licenses.mit;
          };
        };
        fastapi = pyprev.fastapi.overridePythonAttrs (old: rec {
          version = "0.115.12";
          src = fetchPypi {
            pname = "fastapi";
            inherit version;
            hash = "sha256-HiwqJkaQX56D0y8Eo/hq/0ooZmnGyVDKlbX9aMJgJoE=";
          };
          # TODO: standard optional dependencies
          dependencies = with pyfinal; [
            pydantic
            starlette
          ];
        });
        pyscreeze = pyprev.pyscreeze.overridePythonAttrs (old: rec {
          version = "0.1.28";
          src = fetchPypi {
            pname = "PyScreeze";
            inherit version;
            hash = "sha256-RChgDtGbMM0/S12Ddn0Zj8HbrnQ57s+b15VEXACbZ64=";
          };
          doCheck = false;
        });
        pyautogui = pyprev.pyautogui.overridePythonAttrs (old: rec {
          version = "0.9.54";
          src = fetchPypi {
            pname = "PyAutoGUI";
            inherit version;
            hash = "sha256-3R0p6P0RiUHLGT9031flxv+OklO5nHsE85z8afOuBLI=";
          };
          # patch isn't applying successfully, unneeded if pyscreeze >= 0.1.28
          patches = [ ];
          propagatedBuildInputs = with pyfinal; [
            pyscreeze
            mouseinfo
            pygetwindow
            pymsgbox
            xlib
            tkinter
            pyperclip
            pytweening
          ];
        });
        uvicorn = pyprev.uvicorn.overridePythonAttrs (old: rec {
          version = "0.34.2";
          src = fetchPypi {
            pname = "uvicorn";
            inherit version;
            hash = "sha256-DpKYKPYYY1OoC1jqcZhh0mKddmKTttGbrwhrox1PMyg=";
          };
          # TODO: standard optional dependencies
        });
        pydantic-core = pyprev.pydantic-core.overridePythonAttrs (old: rec {
          version = "2.33.2";
          src = fetchPypi {
            pname = "pydantic_core";
            inherit version;
            hash = "sha256-fLi8NgXCkXbhsQU1DS5kdBQtfBvR2TJ8SpvbRr+Cesw=";
          };
          cargoDeps = rustPlatform.fetchCargoVendor {
            pname = "pydantic-core";
            inherit version src;
            hash = "sha256-MY6Gxoz5Q7nCptR+zvdABh2agfbpqOtfTtor4pmkb9c=";
          };
        });
        pydantic = pyprev.pydantic.overridePythonAttrs (old: rec {
          version = "2.11.4";
          src = fetchPypi {
            pname = "pydantic";
            inherit version;
            hash = "sha256-MnONGdY6ImpS7tdmRamO4HwfQQ7kHZO0r7+oXtgRHC0=";
          };
          dependencies = with pyfinal; [
            pydantic-core
            annotated-types
            typing-extensions
            typing-inspection
          ];
        });
      };
    }
  );
  runtime = python.withPackages (
    ps: with ps; [
      seleniumbase
      fastapi
      uvicorn
      pyautogui
      pydantic
      httpx
    ]
  );
in
python.pkgs.buildPythonApplication {
  pname = "byparr";
  src = fetchFromGitHub {
    owner = "ThePhaseless";
    repo = "Byparr";
    rev = "refs/tags/v${version}";
    inherit hash;
  };
  inherit version;
  dependencies = with python.pkgs; [
    seleniumbase
    fastapi
    uvicorn
    pyautogui
    pydantic
  ];
  pyproject = true;
  build-system = with python.pkgs; [
    setuptools
  ];
  postPatch = ''
    # copy main.py to src/ and fix imports
    cp main.py src/
    substituteInPlace src/*.py --replace 'from src.' 'from '
    substituteInPlace src/*.py --replace 'from src import ' 'import '
  '';
  postFixup = ''
    mkdir -p $out/bin
    makeWrapper ${runtime}/bin/python $out/bin/byparr \
      --add-flags $out/lib/python${runtime.pythonVersion}/site-packages/main.py
  '';
  meta = {
    description = "FlareSolverr drop-in replacement with FastAPI and nodriver";
    homepage = "https://github.com/ThePhaseless/Byparr";
    license = lib.licenses.gpl3;
    platforms = lib.platforms.linux;
  };
}
