{
  "nixpkgs": {
    // For flake.
    "expr": "import (builtins.getFlake \"/home/elen/Src/nixos\").inputs.nixpkgs { }"

    // This expression will be interpreted as "nixpkgs" toplevel
    // Nixd provides package, lib completion/information from it.
    ///
    // Resource Usage: Entries are lazily evaluated, entire nixpkgs takes 200~300MB for just "names".
    ///                Package documentation, versions, are evaluated by-need.
    // "expr": "import <nixpkgs> { }"
  },
  "formatting": {
    // Which command you would like to do formatting
    "command": ["nixfmt"]
  },
  // Tell the language server your desired option set, for completion
  // This is lazily evaluated.
  "options": {
    // Map of eval information
    // If this is omitted, default search path (<nixpkgs>) will be used.
    "nixos": {
      // This name "nixos" could be arbitrary.
      // The expression to eval, interpret it as option declarations.
      "expr": "(builtins.getFlake \"/home/elen/Src/nixos\").nixosConfigurations.hastur.options"
    }

    // By default there is no home-manager options completion, thus you can add this entry.
  },
  // Control the diagnostic system
  "diagnostic": {
    "suppress": ["sema-unused-def-lambda-witharg-formal"]
  }
}
