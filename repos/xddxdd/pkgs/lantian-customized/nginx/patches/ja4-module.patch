diff --git a/src/ngx_http_ssl_ja4_module.c b/src/ngx_http_ssl_ja4_module.c
index 4df4461..f2de361 100644
--- a/src/ngx_http_ssl_ja4_module.c
+++ b/src/ngx_http_ssl_ja4_module.c
@@ -104,6 +104,12 @@ int ngx_ssl_ja4(ngx_connection_t *c, ngx_pool_t *pool, ngx_ssl_ja4_t *ja4)
     // (This is a placeholder and might need to be replaced depending on how you determine the protocol in your environment.)
     ja4->transport = 't'; // default is TCP.
 
+#if (NGX_QUIC)
+    if (c->quic) {
+        ja4->transport = 'q';
+    }
+#endif
+
     // TODO: verify this
     // 2. Determine if SNI is present or not:
     const char *sni_name = SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);
@@ -482,10 +488,7 @@ void ngx_ssl_ja4_fp(ngx_pool_t *pool, ngx_ssl_ja4_t *ja4, ngx_str_t *out)
     size_t cur = 0;
 
     // q for QUIC or t for TCP
-    // Assuming is_quic is a boolean.
-    // out->data[cur++] = (ja4->is_quic) ? 'q' : 't';
-    // TODO: placeholder
-    out->data[cur++] = 't';
+    out->data[cur++] = ja4->transport;
 
     // 2 character TLS version
     memcpy(out->data + cur, ja4->version, 2);
@@ -638,7 +641,7 @@ void ngx_ssl_ja4_fp_string(ngx_pool_t *pool, ngx_ssl_ja4_t *ja4, ngx_str_t *out)
     size_t cur = 0;
 
     // t for TCP
-    out->data[cur++] = 't';
+    out->data[cur++] = ja4->transport;
 
     // 2 character TLS version
     if (ja4->version == NULL)
@@ -800,10 +803,7 @@ void ngx_ssl_ja4one_fp(ngx_pool_t *pool, ngx_ssl_ja4_t *ja4, ngx_str_t *out)
     size_t cur = 0;
 
     // q for QUIC or t for TCP
-    // Assuming is_quic is a boolean.
-    // out->data[cur++] = (ja4->is_quic) ? 'q' : 't';
-    // TODO: placeholder
-    out->data[cur++] = 't';
+    out->data[cur++] = ja4->transport;
 
     // 2 character TLS version
     memcpy(out->data + cur, ja4->version, 2);
