diff --git a/modules/gallery.py b/modules/gallery.py
index c275051..d2a7b36 100644
--- a/modules/gallery.py
+++ b/modules/gallery.py
@@ -38,7 +38,9 @@ class GalleryManager:
         img_dir = self._get_img_dir()
         # Use a generator to find image files, avoiding the creation of a full list
         def image_files_gen(directory):
-            for file in os.listdir(directory):
+            filelist = list(map(lambda file: os.path.join(directory, file), os.listdir(directory)))
+            filelist.sort(key=os.path.getctime, reverse=True)
+            for file in filelist:
                 if file.endswith(('.jpg', '.png')):
                     yield file
 
@@ -50,8 +52,7 @@ class GalleryManager:
         imgs = []
         for i, file_name in enumerate(image_files_gen(img_dir)):
             if start_index <= i < end_index:
-                image_path = os.path.join(img_dir, file_name)
-                image = Image.open(image_path)
+                image = Image.open(file_name)
                 imgs.append(image)
             elif i >= end_index:
                 break
@@ -145,7 +146,7 @@ class GalleryManager:
                     yield file_path
 
         # Sort files only when necessary and only the files we need
-        file_paths = sorted(image_file_gen(img_dir), key=os.path.getctime)
+        file_paths = sorted(image_file_gen(img_dir), key=os.path.getctime, reverse=True)
 
         # Initialize parameters
         pprompt = ""
@@ -257,7 +258,7 @@ class GalleryManager:
                           for file in files
                           if os.path.isfile(os.path.join(img_dir, file)) and
                           file.lower().endswith(('.png', '.jpg'))]
-            file_paths.sort(key=os.path.getctime)
+            file_paths.sort(key=os.path.getctime, reverse=True)
             if total_imgs == 0:
                 self.sel_img = None
             if self.img_index == total_imgs:
@@ -275,9 +276,9 @@ class GalleryManager:
 
             imgs, _, _ = self.reload_gallery(None, self.page_num)
             img_info = self.img_info(self.sel_img)
-            pprompt_out, nprompt_out, exif = img_info[:3]
+            pprompt_out, nprompt_out, width, height, steps, sampler, seed, path, exif = img_info[:9]
             return [imgs, self.page_num, gr.update(self.sel_img),
-                    pprompt_out, nprompt_out, exif]
+                    pprompt_out, nprompt_out, height, width, steps, sampler, seed, path, exif]
         except FileNotFoundError as e:
             print(f"Error deleting image: {e}")
             return "An error occurred while deleting."
diff --git a/sdcpp_webui.py b/sdcpp_webui.py
index 9816174..bc92957 100644
--- a/sdcpp_webui.py
+++ b/sdcpp_webui.py
@@ -44,7 +44,7 @@ def cpy_2_txt2img(pprompt_info, nprompt_info, width_info, height_info, steps_inf
 
 
 def cpy_2_img2img(pprompt_info, nprompt_info, width_info, height_info, steps_info, sampler_info, seed_info, path_info):
-    return gr.Tabs(selected="img2img"), pprompt_info, nprompt_info, width_info, height_info, steps_info, sampler_info, seed_info, path_info
+    return gr.Tabs(selected="img2img"), path_info
 
 
 def sdcpp_launch(
@@ -93,7 +93,7 @@ def sdcpp_launch(
         cpy_2_img2img_btn.click(
             cpy_2_img2img,
             inputs=[pprompt_info, nprompt_info, width_info, height_info, steps_info, sampler_info, seed_info, path_info],
-            outputs=[tabs, pprompt_img2img, nprompt_img2img, width_img2img, height_img2img, steps_img2img, sampling_img2img, seed_img2img, img_inp]
+            outputs=[tabs, img_inp]
         )
 
     # Pass the arguments to sdcpp.launch with argument unpacking
