name: "Build and populate cache"
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches:
      - main
      - master
    paths:
      - '**.nix'
      - '**.sh'
      - '.github/workflows/build.yml'
      - '**.patch'
      - '**.json'
      - '**.lock'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - macos-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Free Disk Space (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm' }}
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Checkout repository
      uses: actions/checkout@v5

    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/flake-checker-action@main

    - name: Setup cachix
      uses: cachix/cachix-action@v16
      with:
        name: cryolitia
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: nix-community, cuda-maintainers

    - name: Build x86_64 nix packages
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: nix run nixpkgs#nix-build-uncached -- -build-flags '-L --keep-going' ./nix/ci.nix

    - name: Build darwin nix packages
      if: ${{ matrix.os == 'macos-latest'}}
      run: nix run nixpkgs#nix-build-uncached -- -build-flags '-L --keep-going' ./nix/ci_darwin.nix

    - name: Build aarch64-linux nix packages
      if: ${{ matrix.os == 'ubuntu-24.04-arm'}}
      run: nix run nixpkgs#nix-build-uncached -- -build-flags '-L --keep-going' ./nix/ci_aarch64.nix
  
  trigger:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - uses: DeterminateSystems/nix-installer-action@main
    - name: Print flake metadata
      run: nix flake metadata --accept-flake-config

    - name: Trigger NUR update
      run: curl -XPOST "https://nur-update.nix-community.org/update?repo=Cryolitia"
