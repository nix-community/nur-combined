name: "Build and populate cache"

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "25 4 * * 6" # Every Saturday at 04:25 UTC
  workflow_dispatch:

env:
  cachixName: fym998-nur
  nurRepo: fym998

jobs:
  evaluate:
    runs-on: ubuntu-latest
    outputs:
      eval_result: ${{ steps.eval.outputs.eval_result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: ./.github/actions/install-nix
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show flake metadata
        run: nix flake metadata --json

      - name: Evaluate
        id: eval
        run: |
          echo 'eval_result<<EOF' >> $GITHUB_OUTPUT
          nix run nixpkgs#nix-eval-jobs -- --flake .#ciPackages --force-recurse | tee -a $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  check-eval-change:
    runs-on: ubuntu-latest
    needs: evaluate
    outputs:
      changed: ${{ steps.compare.outputs.changed }}
    steps:
      - name: Restore previous eval result
        id: cache_restore
        uses: actions/cache/restore@v4
        with:
          path: eval_result.json
          key: eval_result-${{ github.sha }}
          restore-keys: |
            eval_result-

      - name: Compare evaluation results
        id: compare
        run: |
          CURRENT_RESULT="${{ needs.evaluate.outputs.eval_result }}"

          if [ -f eval_result.json ]; then
            PREV_RESULT=$(cat eval_result.json)
          else
            PREV_RESULT=""
          fi

          echo -e "Current Result:\n $CURRENT_RESULT"
          echo -e "Previous Result:\n $PREV_RESULT"

          if [ "$CURRENT_RESULT" != "$PREV_RESULT" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "$CURRENT_RESULT" > eval_result.json
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Save new eval result
        if: steps.compare.outputs.changed == 'true'
        uses: actions/cache/save@v4
        with:
          path: eval_result.json
          key: eval_result-${{ github.sha }}

  build-and-cache-packages:
    needs: check-eval-change
    if: ${{ needs.check-eval-change.outputs.changed == 'true' }} # 仅在评估变化时运行
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: ./.github/actions/install-nix
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and cache packages
        env:
          CACHIX_AUTH_TOKEN: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        run: |
          nix run nixpkgs#nix-fast-build -- \
          --flake ".#ciPackages.$(nix eval --raw --impure --expr builtins.currentSystem)" \
          --no-nom \
          --skip-cached \
          --cachix-cache ${{ env.cachixName }}

  trigger-nur-update:
    needs: build-and-cache-packages
    runs-on: ubuntu-latest
    steps:
      - name: Trigger NUR update
        if: ${{ env.nurRepo != '<YOUR_REPO_NAME>' }}
        run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ env.nurRepo }}"
