name: "Build and populate cache"
on:
  push:
    branches: [main]
  schedule:
    - cron: '05 7 * * *'
  workflow_dispatch:

jobs:
  update:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v34
        with:
          nix_conf: experimental-features = nix-command flakes

      - name: Update packages
        run: |
          find ./pkgs -name "info.json" -type f | while read -r info_file; do
            ./.github/update.sh "$info_file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore: update packages"
            git push
          else
            echo "No changes to commit."
          fi

  tests:
    needs: update
    strategy:
      matrix:
        nixPath:
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-unstable.tar.gz
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixos-25.05.tar.gz

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v34
        with:
          nix_conf: experimental-features = nix-command flakes

      - name: Set NIX_PATH
        run: echo "NIX_PATH=${{ matrix.nixPath }}" >> $GITHUB_ENV

      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Setup cachix
        uses: cachix/cachix-action@v16
        with:
          name: forkprince
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD

      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs

  nur:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Trigger NUR update
        run: curl -XPOST "https://nur-update.nix-community.org/update?repo=forkprince"