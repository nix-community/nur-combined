diff '--color=auto' -u -r keymap_drawer-0.22.1/keymap_drawer/dts.py keymap_drawer-0.22.1-patched/keymap_drawer/dts.py
--- keymap_drawer-0.22.1/keymap_drawer/dts.py	1970-01-01 08:00:01.000000000 +0800
+++ keymap_drawer-0.22.1-patched/keymap_drawer/dts.py	2025-09-01 20:32:17.811286515 +0800
@@ -14,6 +14,7 @@
 from itertools import chain
 
 import tree_sitter_devicetree as ts
+from tree_sitter import QueryCursor
 from pcpp.preprocessor import Action, OutputDirective, Preprocessor  # type: ignore
 from tree_sitter import Language, Node, Parser, Tree
 
@@ -147,7 +148,7 @@
     @staticmethod
     def _find_root_ts_nodes(tree: Tree) -> list[Node]:
         return sorted(
-            TS_LANG.query(
+            QueryCursor(TS_LANG.query(
                 """
                 (document
                   (node
@@ -156,7 +157,7 @@
                   ) @rootnode
                 )
                 """
-            )
+            ))
             .captures(tree.root_node)
             .get("rootnode", []),
             key=lambda node: node.start_byte,
@@ -165,7 +166,7 @@
     @staticmethod
     def _find_override_ts_nodes(tree: Tree) -> list[Node]:
         return sorted(
-            TS_LANG.query(
+            QueryCursor(TS_LANG.query(
                 """
                 (document
                   (node
@@ -175,7 +176,7 @@
                   ) @overridenode
                 )
                 """
-            )
+            ))
             .captures(tree.root_node)
             .get("overridenode", []),
             key=lambda node: node.start_byte,
@@ -184,14 +185,14 @@
     @staticmethod
     def _find_chosen_ts_nodes(tree: Tree) -> list[Node]:
         return sorted(
-            TS_LANG.query(
+            QueryCursor(TS_LANG.query(
                 """
                 (node
                   name: (identifier) @nodename
                   (#eq? @nodename "chosen")
                 ) @chosennode
                 """
-            )
+            ))
             .set_max_start_depth(2)
             .captures(tree.root_node)
             .get("chosennode", []),
@@ -233,7 +234,7 @@
             ) @node
             """
         )
-        nodes = chain.from_iterable(query.captures(node).get("node", []) for node in self.root_nodes)
+        nodes = chain.from_iterable(QueryCursor(query).captures(node).get("node", []) for node in self.root_nodes)
         return sorted(
             (DTNode(node, self.ts_buffer, self.override_nodes) for node in nodes), key=lambda x: x.node.start_byte
         )
