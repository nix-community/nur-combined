
# This file was @generated by crate2nix 0.14.1 with the command:
#   "generate" "-f" "/home/colin/ref/repos/schmiddi-on-mobile/flare/Cargo.toml"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrateForPkgs ? pkgs: pkgs.buildRustCrate
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Elements to add to the `-C target-feature=` argument passed to `rustc`
  # (separated by `,`, prefixed with `+`).
  # Used for conditional compilation based on CPU feature detection.
, targetFeatures ? []
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = rec {
    packageId = "flare";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = internal.buildRustCrateWithFeatures {
      inherit packageId;
    };

    # Debug support which might change between releases.
    # File a bug if you depend on any for non-debug work!
    debug = internal.debugCrate { inherit packageId; };
  };
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "flare" = rec {
      packageId = "flare";
      build = internal.buildRustCrateWithFeatures {
        packageId = "flare";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  # A derivation that joins the outputs of all workspace members together.
  allWorkspaceMembers = pkgs.symlinkJoin {
      name = "all-workspace-members";
      paths =
        let members = builtins.attrValues workspaceMembers;
        in builtins.map (m: m.build) members;
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "addr2line" = rec {
        crateName = "addr2line";
        version = "0.22.0";
        edition = "2018";
        sha256 = "0y66f1sa27i9kvmlh76ynk60rxfrmkba9ja8x527h32wdb206ibf";
        dependencies = [
          {
            name = "gimli";
            packageId = "gimli";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
        ];
        features = {
          "alloc" = [ "dep:alloc" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "cpp_demangle" = [ "dep:cpp_demangle" ];
          "default" = [ "rustc-demangle" "cpp_demangle" "std-object" "fallible-iterator" "smallvec" "memmap2" ];
          "fallible-iterator" = [ "dep:fallible-iterator" ];
          "memmap2" = [ "dep:memmap2" ];
          "object" = [ "dep:object" ];
          "rustc-demangle" = [ "dep:rustc-demangle" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "gimli/rustc-dep-of-std" ];
          "smallvec" = [ "dep:smallvec" ];
          "std" = [ "gimli/std" ];
          "std-object" = [ "std" "object" "object/std" "object/compression" "gimli/endian-reader" ];
        };
      };
      "adler" = rec {
        crateName = "adler";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1zim79cvzd5yrkzl3nyfx0avijwgk9fqv3yrscdy1cc79ih02qpj";
        authors = [
          "Jonas Schievink <jonasschievink@gmail.com>"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "aead" = rec {
        crateName = "aead";
        version = "0.5.2";
        edition = "2021";
        sha256 = "1c32aviraqag7926xcb9sybdm36v5vh9gnxpn4pxdwjc50zl28ni";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-common";
            packageId = "crypto-common";
          }
          {
            name = "generic-array";
            packageId = "generic-array";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arrayvec" = [ "dep:arrayvec" ];
          "blobby" = [ "dep:blobby" ];
          "bytes" = [ "dep:bytes" ];
          "default" = [ "rand_core" ];
          "dev" = [ "blobby" ];
          "getrandom" = [ "crypto-common/getrandom" "rand_core" ];
          "heapless" = [ "dep:heapless" ];
          "rand_core" = [ "crypto-common/rand_core" ];
          "std" = [ "alloc" "crypto-common/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "rand_core" "std" ];
      };
      "aes" = rec {
        crateName = "aes";
        version = "0.8.4";
        edition = "2021";
        sha256 = "1853796anlwp4kqim0s6wm1srl4ib621nm0cl2h3c8klsjkgfsdi";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("aarch64" == target."arch" or null) || ("x86_64" == target."arch" or null) || ("x86" == target."arch" or null));
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."aes_armv8" or false) && ("aarch64" == target."arch" or null));
            features = [ "aarch64" ];
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."aes_armv8" or false) && ("aarch64" == target."arch" or null)));
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "zeroize" ];
      };
      "aes-gcm" = rec {
        crateName = "aes-gcm";
        version = "0.10.3";
        edition = "2021";
        sha256 = "1lgaqgg1gh9crg435509lqdhajg1m2vgma6f7fdj1qa2yyh10443";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes";
            optional = true;
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "ghash";
            packageId = "ghash";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "aes" = [ "dep:aes" ];
          "alloc" = [ "aead/alloc" ];
          "arrayvec" = [ "aead/arrayvec" ];
          "default" = [ "aes" "alloc" "getrandom" ];
          "getrandom" = [ "aead/getrandom" "rand_core" ];
          "heapless" = [ "aead/heapless" ];
          "rand_core" = [ "aead/rand_core" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" "getrandom" "rand_core" ];
      };
      "aes-gcm-siv" = rec {
        crateName = "aes-gcm-siv";
        version = "0.11.1";
        edition = "2021";
        sha256 = "039ycyz9hijvrv2hiks9a1099yprqpkk3v39shb58dx99c9q81xf";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes";
            optional = true;
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "polyval";
            packageId = "polyval";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "aes" = [ "dep:aes" ];
          "alloc" = [ "aead/alloc" ];
          "default" = [ "aes" "alloc" "getrandom" ];
          "getrandom" = [ "aead/getrandom" ];
          "heapless" = [ "aead/heapless" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" "getrandom" ];
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "1.1.3";
        edition = "2021";
        sha256 = "05mrpkvdgp5d20y2p989f187ry9diliijgwrs254fs9s1m1x6q4f";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "perf-literal" ];
          "logging" = [ "dep:log" ];
          "perf-literal" = [ "dep:memchr" ];
          "std" = [ "memchr?/std" ];
        };
        resolvedDefaultFeatures = [ "perf-literal" "std" ];
      };
      "aligned-vec" = rec {
        crateName = "aligned-vec";
        version = "0.5.0";
        edition = "2021";
        sha256 = "1lb8qjqfap028ylf8zap6rkwrnrqimc3v6h3cixycjrdx1y0vaaa";
        authors = [
          "sarah <>"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "android-tzdata" = rec {
        crateName = "android-tzdata";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1w7ynjxrfs97xg3qlcdns4kgfpwcdv824g611fq32cag4cdr96g9";
        authors = [
          "RumovZ"
        ];

      };
      "android_system_properties" = rec {
        crateName = "android_system_properties";
        version = "0.1.5";
        edition = "2018";
        sha256 = "04b3wrz12837j7mdczqd95b732gw5q7q66cv4yn4646lvccp57l1";
        authors = [
          "Nicolas Silva <nical@fastmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "anstream" = rec {
        crateName = "anstream";
        version = "0.6.14";
        edition = "2021";
        sha256 = "0nx1vnfs2lil1sl14l49i6jvp6zpjczn85wxx4xw1ycafvx7b321";
        dependencies = [
          {
            name = "anstyle";
            packageId = "anstyle";
          }
          {
            name = "anstyle-parse";
            packageId = "anstyle-parse";
          }
          {
            name = "anstyle-query";
            packageId = "anstyle-query";
            optional = true;
          }
          {
            name = "anstyle-wincon";
            packageId = "anstyle-wincon";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "colorchoice";
            packageId = "colorchoice";
          }
          {
            name = "is_terminal_polyfill";
            packageId = "is_terminal_polyfill";
          }
          {
            name = "utf8parse";
            packageId = "utf8parse";
          }
        ];
        features = {
          "auto" = [ "dep:anstyle-query" ];
          "default" = [ "auto" "wincon" ];
          "wincon" = [ "dep:anstyle-wincon" ];
        };
        resolvedDefaultFeatures = [ "auto" "wincon" ];
      };
      "anstyle" = rec {
        crateName = "anstyle";
        version = "1.0.7";
        edition = "2021";
        sha256 = "06qxmrba0xbhv07jpdvrdrhw1hjlb9icj88bqvlnissz9bqgr383";
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "anstyle-parse" = rec {
        crateName = "anstyle-parse";
        version = "0.2.4";
        edition = "2021";
        sha256 = "1m121pa4plpcb4g7xali2kv9njmgb3713q3fxf60b4jd0fli2fn0";
        dependencies = [
          {
            name = "utf8parse";
            packageId = "utf8parse";
            optional = true;
          }
        ];
        features = {
          "core" = [ "dep:arrayvec" ];
          "default" = [ "utf8" ];
          "utf8" = [ "dep:utf8parse" ];
        };
        resolvedDefaultFeatures = [ "default" "utf8" ];
      };
      "anstyle-query" = rec {
        crateName = "anstyle-query";
        version = "1.1.0";
        edition = "2021";
        sha256 = "14a3h3k541jmqm5s8hbdw8l0dcgkrryqwxgicm8x6623fvxnw65d";
        dependencies = [
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_System_Console" "Win32_Foundation" ];
          }
        ];

      };
      "anstyle-wincon" = rec {
        crateName = "anstyle-wincon";
        version = "3.0.3";
        edition = "2021";
        sha256 = "06gv2vbj4hvwb8fxqjmvabp5kx2w01cjgh86pd98y1mpzr4q98v1";
        dependencies = [
          {
            name = "anstyle";
            packageId = "anstyle";
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_System_Console" "Win32_Foundation" ];
          }
        ];

      };
      "anyhow" = rec {
        crateName = "anyhow";
        version = "1.0.86";
        edition = "2018";
        sha256 = "1nk301x8qhpdaks6a9zvcp7yakjqnczjmqndbg7vk4494d3d1ldk";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "backtrace" = [ "dep:backtrace" ];
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "arbitrary" = rec {
        crateName = "arbitrary";
        version = "1.3.2";
        edition = "2021";
        sha256 = "0471f0c4f1bgibhyhf8vnapkp158h1nkrzx0wnq97jwd9n0jcnkx";
        authors = [
          "The Rust-Fuzz Project Developers"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
          "Simonas Kazlauskas <arbitrary@kazlauskas.me>"
          "Brian L. Troutwine <brian@troutwine.us>"
          "Corey Farwell <coreyf@rwell.org>"
        ];
        features = {
          "derive" = [ "derive_arbitrary" ];
          "derive_arbitrary" = [ "dep:derive_arbitrary" ];
        };
      };
      "arg_enum_proc_macro" = rec {
        crateName = "arg_enum_proc_macro";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1sjdfd5a8j6r99cf0bpqrd6b160x9vz97y5rysycsjda358jms8a";
        procMacro = true;
        authors = [
          "Luca Barbato <lu_zero@gentoo.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "extra-traits" ];
          }
        ];

      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.8";
        edition = "2015";
        sha256 = "0yp686dig2km0c49bm8cwmx27zcbzj8vg4brc45m128hyqsiw5cx";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];

      };
      "arrayvec" = rec {
        crateName = "arrayvec";
        version = "0.7.4";
        edition = "2018";
        sha256 = "04b7n722jij0v3fnm3qk072d5ysc2q30rl9fz33zpfhzah30mlwn";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ashpd" = rec {
        crateName = "ashpd";
        version = "0.8.1";
        edition = "2021";
        sha256 = "14yh6v12bgngawzds6i252n4zzq9rnqz659p5h898yl7f9y4v26x";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "enumflags2";
            packageId = "enumflags2";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "gdk4-wayland";
            packageId = "gdk4-wayland";
            rename = "gdk4wayland";
            optional = true;
          }
          {
            name = "gdk4-x11";
            packageId = "gdk4-x11";
            rename = "gdk4x11";
            optional = true;
          }
          {
            name = "glib";
            packageId = "glib";
            optional = true;
          }
          {
            name = "gtk4";
            packageId = "gtk4";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_repr";
            packageId = "serde_repr";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "fs" "io-util" ];
          }
          {
            name = "url";
            packageId = "url";
            features = [ "serde" ];
          }
          {
            name = "zbus";
            packageId = "zbus";
            usesDefaultFeatures = false;
            features = [ "url" ];
          }
        ];
        features = {
          "async-std" = [ "zbus/async-io" "dep:async-fs" "dep:async-net" ];
          "default" = [ "async-std" ];
          "gdk4wayland" = [ "dep:gdk4wayland" ];
          "gdk4x11" = [ "dep:gdk4x11" ];
          "glib" = [ "dep:glib" ];
          "gtk4" = [ "gtk4_x11" "gtk4_wayland" ];
          "gtk4_wayland" = [ "gdk4wayland" "glib" "dep:gtk4" ];
          "gtk4_x11" = [ "gdk4x11" "glib" "dep:gtk4" ];
          "pipewire" = [ "dep:pipewire" ];
          "raw-window-handle" = [ "dep:raw-window-handle" ];
          "raw_handle" = [ "raw-window-handle" "wayland" ];
          "tokio" = [ "zbus/tokio" "dep:tokio" ];
          "tracing" = [ "dep:tracing" ];
          "wayland" = [ "wayland-client" "wayland-protocols" "wayland-backend" ];
          "wayland-backend" = [ "dep:wayland-backend" ];
          "wayland-client" = [ "dep:wayland-client" ];
          "wayland-protocols" = [ "dep:wayland-protocols" ];
        };
        resolvedDefaultFeatures = [ "gdk4wayland" "gdk4x11" "glib" "gtk4" "gtk4_wayland" "gtk4_x11" "tokio" ];
      };
      "async-broadcast" = rec {
        crateName = "async-broadcast";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0zia7z1y31awmxma9c89zmvkbj7mdkf7highkmz5z3pa4lp0xk90";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "event-listener-strategy";
            packageId = "event-listener-strategy";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];

      };
      "async-channel" = rec {
        crateName = "async-channel";
        version = "2.3.1";
        edition = "2021";
        sha256 = "0skvwxj6ysfc6d7bhczz9a2550260g62bm5gl0nmjxxyn007id49";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
            usesDefaultFeatures = false;
          }
          {
            name = "event-listener-strategy";
            packageId = "event-listener-strategy";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "concurrent-queue/std" "event-listener-strategy/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-io" = rec {
        crateName = "async-io";
        version = "2.3.3";
        edition = "2021";
        sha256 = "0r3rl4dj8sp6c8qqajg5gsn1l9hkbng2ri0vwyh5sybq067slsqd";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-lock";
            packageId = "async-lock";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
            usesDefaultFeatures = false;
          }
          {
            name = "parking";
            packageId = "parking";
          }
          {
            name = "polling";
            packageId = "polling";
          }
          {
            name = "rustix";
            packageId = "rustix";
            usesDefaultFeatures = false;
            features = [ "fs" "net" "std" ];
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" ];
          }
        ];

      };
      "async-lock" = rec {
        crateName = "async-lock";
        version = "3.4.0";
        edition = "2021";
        sha256 = "060vh45i809wcqyxzs5g69nqiqah7ydz0hpkcjys9258vqn4fvpz";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
            usesDefaultFeatures = false;
          }
          {
            name = "event-listener-strategy";
            packageId = "event-listener-strategy";
            usesDefaultFeatures = false;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "event-listener/loom" "dep:loom" ];
          "std" = [ "event-listener/std" "event-listener-strategy/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-process" = rec {
        crateName = "async-process";
        version = "2.2.3";
        edition = "2021";
        sha256 = "0ajyzx21llsavkslp3z46mqcr3fysycw07cd60mrrql4pndsgvgp";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
            target = { target, features }: ("linux" == target."os" or null);
          }
          {
            name = "async-channel";
            packageId = "async-channel";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "async-lock";
            packageId = "async-lock";
          }
          {
            name = "async-signal";
            packageId = "async-signal";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "async-task";
            packageId = "async-task";
            target = { target, features }: ("linux" == target."os" or null);
          }
          {
            name = "blocking";
            packageId = "blocking";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "rustix";
            packageId = "rustix";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."unix" or false) && (!("linux" == target."os" or null)));
            features = [ "std" "fs" "process" ];
          }
          {
            name = "rustix";
            packageId = "rustix";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "std" "fs" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_System_Threading" ];
          }
        ];
        devDependencies = [
          {
            name = "async-io";
            packageId = "async-io";
          }
        ];

      };
      "async-recursion" = rec {
        crateName = "async-recursion";
        version = "1.1.1";
        edition = "2018";
        sha256 = "04ac4zh8qz2xjc79lmfi4jlqj5f92xjvfaqvbzwkizyqd4pl4hrv";
        procMacro = true;
        authors = [
          "Robert Usher <266585+dcchut@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "full" "visit-mut" "parsing" "printing" "proc-macro" "clone-impls" ];
          }
        ];

      };
      "async-signal" = rec {
        crateName = "async-signal";
        version = "0.2.9";
        edition = "2018";
        sha256 = "0cpcn528krcmxgr11v5b1vdpzw5v4fnlz08z912ahyirfd5n7cyz";
        authors = [
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "async-lock";
            packageId = "async-lock";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "atomic-waker";
            packageId = "atomic-waker";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rustix";
            packageId = "rustix";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "process" "std" ];
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "slab";
            packageId = "slab";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_System_Console" ];
          }
        ];
        devDependencies = [
          {
            name = "async-io";
            packageId = "async-io";
          }
        ];

      };
      "async-task" = rec {
        crateName = "async-task";
        version = "4.7.1";
        edition = "2021";
        sha256 = "1pp3avr4ri2nbh7s6y9ws0397nkx1zymmcr14sq761ljarh3axcb";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "portable-atomic" = [ "dep:portable-atomic" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-trait" = rec {
        crateName = "async-trait";
        version = "0.1.81";
        edition = "2021";
        sha256 = "01w10ad3984czxrmc8ckdrabhmsv80aynfxibjnqwz1dr3f2h33f";
        procMacro = true;
        libName = "async_trait";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "full" "visit-mut" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "async-tungstenite" = rec {
        crateName = "async-tungstenite";
        version = "0.24.0";
        edition = "2018";
        sha256 = "1b5ib3128dv57xfnh3kx68r8kzzlvxbn4kmvyvqxl7bhpx5sy29n";
        authors = [
          "Sebastian Dröge <sebastian@centricular.com>"
        ];
        dependencies = [
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" "std" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "net" ];
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
            rename = "real-tokio-rustls";
            optional = true;
          }
          {
            name = "tungstenite";
            packageId = "tungstenite";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "__rustls-tls" = [ "tokio-runtime" "real-tokio-rustls" "rustls-pki-types" "tungstenite/__rustls-tls" ];
          "async-native-tls" = [ "async-std-runtime" "real-async-native-tls" "tungstenite/native-tls" ];
          "async-std" = [ "dep:async-std" ];
          "async-std-runtime" = [ "async-std" "handshake" ];
          "async-tls" = [ "real-async-tls" "handshake" ];
          "default" = [ "handshake" ];
          "gio" = [ "dep:gio" ];
          "gio-runtime" = [ "gio" "glib" "handshake" ];
          "glib" = [ "dep:glib" ];
          "handshake" = [ "tungstenite/handshake" ];
          "openssl" = [ "dep:openssl" ];
          "real-async-native-tls" = [ "dep:real-async-native-tls" ];
          "real-async-tls" = [ "dep:real-async-tls" ];
          "real-native-tls" = [ "dep:real-native-tls" ];
          "real-tokio-native-tls" = [ "dep:real-tokio-native-tls" ];
          "real-tokio-openssl" = [ "dep:real-tokio-openssl" ];
          "real-tokio-rustls" = [ "dep:real-tokio-rustls" ];
          "rustls-native-certs" = [ "dep:rustls-native-certs" ];
          "rustls-pki-types" = [ "dep:rustls-pki-types" ];
          "tokio" = [ "dep:tokio" ];
          "tokio-native-tls" = [ "tokio-runtime" "real-tokio-native-tls" "real-native-tls" "tungstenite/native-tls" ];
          "tokio-openssl" = [ "tokio-runtime" "real-tokio-openssl" "openssl" ];
          "tokio-runtime" = [ "tokio" "handshake" ];
          "tokio-rustls-manual-roots" = [ "__rustls-tls" ];
          "tokio-rustls-native-certs" = [ "__rustls-tls" "rustls-native-certs" ];
          "tokio-rustls-webpki-roots" = [ "__rustls-tls" "webpki-roots" ];
          "webpki-roots" = [ "dep:webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "__rustls-tls" "default" "handshake" "real-tokio-rustls" "rustls-native-certs" "rustls-pki-types" "tokio" "tokio-runtime" "tokio-rustls-native-certs" ];
      };
      "atomic-waker" = rec {
        crateName = "atomic-waker";
        version = "1.1.2";
        edition = "2018";
        sha256 = "1h5av1lw56m0jf0fd3bchxq8a30xv0b4wv8s4zkp4s0i7mfvs18m";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Contributors to futures-rs"
        ];
        features = {
          "portable-atomic" = [ "dep:portable-atomic" ];
        };
      };
      "autocfg" = rec {
        crateName = "autocfg";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1c3njkfzpil03k92q0mij5y1pkhhfr4j3bf0h53bgl2vs85lsjqc";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "av1-grain" = rec {
        crateName = "av1-grain";
        version = "0.2.3";
        edition = "2021";
        sha256 = "1gvqdh21bm1cfqiwyiinbqi0mg7x2lg2fwgmphma8ijxijfr0y36";
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nom";
            packageId = "nom";
            optional = true;
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            optional = true;
          }
          {
            name = "v_frame";
            packageId = "v_frame";
            optional = true;
          }
        ];
        features = {
          "default" = [ "create" "parse" "diff" "estimate" ];
          "diff" = [ "num-rational" "v_frame" ];
          "estimate" = [ "v_frame" ];
          "nom" = [ "dep:nom" ];
          "num-rational" = [ "dep:num-rational" ];
          "parse" = [ "nom" ];
          "serde" = [ "dep:serde" ];
          "serialize" = [ "serde" "arrayvec/serde" ];
          "v_frame" = [ "dep:v_frame" ];
        };
        resolvedDefaultFeatures = [ "create" "default" "diff" "estimate" "nom" "num-rational" "parse" "v_frame" ];
      };
      "avif-serialize" = rec {
        crateName = "avif-serialize";
        version = "0.8.1";
        edition = "2021";
        sha256 = "1llnwlj11wcifdlny8x8yksl3zmz8i6a35il0cd4ar335yj7av47";
        authors = [
          "Kornel Lesiński <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec";
          }
        ];

      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.73";
        edition = "2021";
        sha256 = "02iffg2pkg5nc36pgml8il7f77s138hhjw9f9l56v5zqlilk5hjw";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."windows" or false) && ("msvc" == target."env" or null) && (!("uwp" == target."vendor" or null))));
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."windows" or false) && ("msvc" == target."env" or null) && (!("uwp" == target."vendor" or null))));
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."windows" or false) && ("msvc" == target."env" or null) && (!("uwp" == target."vendor" or null))));
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."windows" or false) && ("msvc" == target."env" or null) && (!("uwp" == target."vendor" or null))));
            features = [ "read_core" "elf" "macho" "pe" "xcoff" "unaligned" "archive" ];
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "cpp_demangle" = [ "dep:cpp_demangle" ];
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/memoryapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/tlhelp32" "winapi/winbase" "winapi/winnt" "winapi/winnls" "winapi/stringapiset" ];
          "winapi" = [ "dep:winapi" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.21.7" = rec {
        crateName = "base64";
        version = "0.21.7";
        edition = "2018";
        sha256 = "0rw52yvsk75kar9wgqfwgb414kvil1gn7mqkrhn9zf1537mpsacx";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "base64 0.22.1" = rec {
        crateName = "base64";
        version = "0.22.1";
        edition = "2018";
        sha256 = "1imqzgh7bxcikp5vx3shqvw9j09g9ly0xr0jma0q66i52r7jbcvj";
        authors = [
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.3.3";
        edition = "2015";
        sha256 = "1bfw3mnwzx5g1465kiqllp5n4r10qrqy88kdlp3jfwnq2ya5xx5i";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Zoey Riordan <zoey@dos.cafe>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
        };
      };
      "bit_field" = rec {
        crateName = "bit_field";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0qav5rpm4hqc33vmf4vc4r0mh51yjx5vmd9zhih26n9yjs3730nw";
        authors = [
          "Philipp Oppermann <dev@phil-opp.com>"
        ];

      };
      "bitflags 1.3.2" = rec {
        crateName = "bitflags";
        version = "1.3.2";
        edition = "2018";
        sha256 = "12ki6w8gn1ldq7yz9y680llwk5gmrhrzszaa17g1sbrw2r2qvwxy";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bitflags 2.6.0" = rec {
        crateName = "bitflags";
        version = "2.6.0";
        edition = "2021";
        sha256 = "1pkidwzn3hnxlsl8zizh0bncgbjnw7c41cx7bby26ncbzmiznj5h";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "bytemuck" = [ "dep:bytemuck" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "bitstream-io" = rec {
        crateName = "bitstream-io";
        version = "2.3.0";
        edition = "2018";
        sha256 = "0vj4f4kg3ls3j41180a7ia65rj2p762mbzimm0bxiw22ds2x24kw";
        authors = [
          "Brian Langenberger <bjl@usa.net>"
        ];
        features = {
          "alloc" = [ "core2" ];
          "core2" = [ "dep:core2" ];
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake3" = rec {
        crateName = "blake3";
        version = "1.5.3";
        edition = "2021";
        sha256 = "0452raki4c30y1hpijvxrji4rzn4xl0gwwfvz5jy7dc1kbz9dv79";
        authors = [
          "Jack O'Connor <oconnor663@gmail.com>"
          "Samuel Neves"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "mmap" = [ "std" "dep:memmap2" ];
          "rayon" = [ "dep:rayon-core" "std" ];
          "serde" = [ "dep:serde" ];
          "traits-preview" = [ "dep:digest" ];
          "zeroize" = [ "dep:zeroize" "arrayvec/zeroize" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "block" = rec {
        crateName = "block";
        version = "0.1.6";
        edition = "2015";
        sha256 = "16k9jgll25pzsq14f244q22cdv0zb4bqacldg3kx6h89d7piz30d";
        authors = [
          "Steven Sheldon"
        ];

      };
      "block-buffer" = rec {
        crateName = "block-buffer";
        version = "0.10.4";
        edition = "2018";
        sha256 = "0w9sa2ypmrsqqvc20nhwr75wbb5cjr4kkyhpjm1z1lv2kdicfy1h";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array";
          }
        ];

      };
      "block-padding" = rec {
        crateName = "block-padding";
        version = "0.3.3";
        edition = "2021";
        sha256 = "14wdad0r1qk5gmszxqd8cky6vx8qg7c153jv981mixzrpzmlz2d8";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "blocking" = rec {
        crateName = "blocking";
        version = "1.6.1";
        edition = "2021";
        sha256 = "1si99l8zp7c4zq87y35ayjgc5c9b60jb8h0k14zfcs679z2l2gvh";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
            usesDefaultFeatures = false;
          }
          {
            name = "piper";
            packageId = "piper";
          }
        ];
        devDependencies = [
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
        ];
        features = {
          "tracing" = [ "dep:tracing" ];
        };
      };
      "blurhash" = rec {
        crateName = "blurhash";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1czdrix0m802fbi8lkc9jz0ch1j46ryxdndrlg47h4dyh5iw2594";
        authors = [
          "Ruben De Smet <ruben.de.smet@rubdos.be>"
          "Raincal <cyj94228@gmail.com>"
        ];
        dependencies = [
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
            optional = true;
          }
          {
            name = "image";
            packageId = "image 0.25.2";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "image";
            packageId = "image 0.25.2";
          }
        ];
        features = {
          "gdk-pixbuf" = [ "dep:gdk-pixbuf" ];
          "image" = [ "dep:image" ];
        };
        resolvedDefaultFeatures = [ "default" "gdk-pixbuf" "image" ];
      };
      "built" = rec {
        crateName = "built";
        version = "0.7.4";
        edition = "2021";
        sha256 = "1i4jsd31b4xj93bz5vmvby4s50lk0cjb1hskdfy15a55xn4n4vi3";
        authors = [
          "Lukas Lueg <lukas.lueg@gmail.com>"
        ];
        features = {
          "cargo-lock" = [ "dep:cargo-lock" ];
          "chrono" = [ "dep:chrono" ];
          "dependency-tree" = [ "cargo-lock/dependency-tree" ];
          "git2" = [ "dep:git2" ];
          "semver" = [ "dep:semver" ];
        };
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.16.0";
        edition = "2021";
        sha256 = "0b015qb4knwanbdlp1x48pkb4pm57b8gidbhhhxr900q2wb6fabr";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
          "allocator-api2" = [ "dep:allocator-api2" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bytemuck" = rec {
        crateName = "bytemuck";
        version = "1.16.1";
        edition = "2018";
        sha256 = "0pkjipj5jc2x78ahyx258yca9pawgf8z98cdndsyv5rc629gqdmj";
        authors = [
          "Lokathor <zefria@gmail.com>"
        ];
        features = {
          "bytemuck_derive" = [ "dep:bytemuck_derive" ];
          "derive" = [ "bytemuck_derive" ];
          "extern_crate_std" = [ "extern_crate_alloc" ];
        };
        resolvedDefaultFeatures = [ "extern_crate_alloc" ];
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.5.0";
        edition = "2021";
        sha256 = "0jzncxyf404mwqdbspihyzpkndfgda450l0893pz5xj685cg5l0z";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "byteorder-lite" = rec {
        crateName = "byteorder-lite";
        version = "0.1.0";
        edition = "2021";
        sha256 = "15alafmz4b9az56z6x7glcbcb6a8bfgyd109qc3bvx07zx4fj7wg";
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes" = rec {
        crateName = "bytes";
        version = "1.6.1";
        edition = "2018";
        sha256 = "0lnryqfiymbq5mfflfmbsqvfnw80kkh36nk5kpiscgxb9ac1cad1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cairo-rs" = rec {
        crateName = "cairo-rs";
        version = "0.19.4";
        edition = "2021";
        sha256 = "0qp5rixgipdj9d8yd5458hzfxam1rgpzcxi90vq6q0v91r6jmb5j";
        libName = "cairo";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 2.6.0";
          }
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
            rename = "ffi";
          }
          {
            name = "glib";
            packageId = "glib";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "use_glib" ];
          "freetype" = [ "ffi/freetype" "freetype-rs" ];
          "freetype-rs" = [ "dep:freetype-rs" ];
          "glib" = [ "dep:glib" ];
          "pdf" = [ "ffi/pdf" ];
          "png" = [ "ffi/png" ];
          "ps" = [ "ffi/ps" ];
          "script" = [ "ffi/script" ];
          "svg" = [ "ffi/svg" ];
          "use_glib" = [ "glib" "ffi/use_glib" ];
          "v1_16" = [ "ffi/v1_16" ];
          "v1_18" = [ "v1_16" "ffi/v1_18" ];
          "win32-surface" = [ "ffi/win32-surface" ];
          "xcb" = [ "ffi/xcb" ];
          "xlib" = [ "ffi/xlib" ];
        };
        resolvedDefaultFeatures = [ "default" "glib" "use_glib" ];
      };
      "cairo-sys-rs" = rec {
        crateName = "cairo-sys-rs";
        version = "0.19.2";
        edition = "2021";
        sha256 = "0r0yp0lph77lm4blrn6fvdmz2i3r8ibkkjg6nmwbvvv4jq8v6fzx";
        libName = "cairo_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "glib-sys" = [ "dep:glib-sys" ];
          "use_glib" = [ "glib-sys" ];
          "v1_18" = [ "v1_16" ];
          "win32-surface" = [ "windows-sys" ];
          "windows-sys" = [ "dep:windows-sys" ];
          "x11" = [ "dep:x11" ];
          "xlib" = [ "x11" ];
        };
        resolvedDefaultFeatures = [ "glib-sys" "use_glib" ];
      };
      "cbc" = rec {
        crateName = "cbc";
        version = "0.1.2";
        edition = "2021";
        sha256 = "19l9y9ccv1ffg6876hshd123f2f8v7zbkc4nkckqycxf8fajmd96";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "cipher/alloc" ];
          "block-padding" = [ "cipher/block-padding" ];
          "default" = [ "block-padding" ];
          "std" = [ "cipher/std" "alloc" ];
          "zeroize" = [ "cipher/zeroize" ];
        };
        resolvedDefaultFeatures = [ "alloc" "block-padding" "default" "std" "zeroize" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.1.6";
        edition = "2018";
        sha256 = "0kv9z4khi0f8ghwpxm52l6nq6lf6y2kn4gs6fcycxiq6k578zfia";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
        ];
        features = {
          "parallel" = [ "dep:libc" "dep:jobserver" ];
        };
        resolvedDefaultFeatures = [ "parallel" ];
      };
      "cfg-expr" = rec {
        crateName = "cfg-expr";
        version = "0.15.8";
        edition = "2021";
        sha256 = "00lgf717pmf5qd2qsxxzs815v6baqg38d6m5i6wlh235p14asryh";
        authors = [
          "Embark <opensource@embark-studios.com>"
          "Jake Shadle <jake.shadle@embark-studios.com>"
        ];
        dependencies = [
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            optional = true;
          }
        ];
        features = {
          "target-lexicon" = [ "dep:target-lexicon" ];
          "targets" = [ "target-lexicon" ];
        };
        resolvedDefaultFeatures = [ "default" "target-lexicon" "targets" ];
      };
      "cfg-if" = rec {
        crateName = "cfg-if";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1za0vb97n4brpzpv8lsbnzmq5r8f2b0cpqqr0sy8h5bn751xxwds";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "cfg_aliases" = rec {
        crateName = "cfg_aliases";
        version = "0.2.1";
        edition = "2018";
        sha256 = "092pxdc1dbgjb6qvh83gk56rkic2n2ybm4yvy76cgynmzi3zwfk1";
        authors = [
          "Zicklag <zicklag@katharostech.com>"
        ];

      };
      "chacha20" = rec {
        crateName = "chacha20";
        version = "0.9.1";
        edition = "2021";
        sha256 = "0678wipx6kghp71hpzhl2qvx80q7caz3vm8vsvd07b1fpms3yqf3";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("x86_64" == target."arch" or null) || ("x86" == target."arch" or null));
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "std" = [ "cipher/std" ];
          "zeroize" = [ "cipher/zeroize" ];
        };
        resolvedDefaultFeatures = [ "zeroize" ];
      };
      "chacha20poly1305" = rec {
        crateName = "chacha20poly1305";
        version = "0.10.1";
        edition = "2021";
        sha256 = "0dfwq9ag7x7lnd0znafpcn8h7k4nfr9gkzm0w7sc1lcj451pkk8h";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "chacha20";
            packageId = "chacha20";
            features = [ "zeroize" ];
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "poly1305";
            packageId = "poly1305";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "default" = [ "alloc" "getrandom" ];
          "getrandom" = [ "aead/getrandom" "rand_core" ];
          "heapless" = [ "aead/heapless" ];
          "rand_core" = [ "aead/rand_core" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "rand_core" "std" ];
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.38";
        edition = "2021";
        sha256 = "009l8vc5p8750vn02z30mblg4pv2qhkbfizhfwmzc6vpy5nr67x2";
        dependencies = [
          {
            name = "android-tzdata";
            packageId = "android-tzdata";
            optional = true;
            target = { target, features }: ("android" == target."os" or null);
          }
          {
            name = "iana-time-zone";
            packageId = "iana-time-zone";
            optional = true;
            target = { target, features }: (target."unix" or false);
            features = [ "fallback" ];
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            optional = true;
            target = { target, features }: (("wasm32" == target."arch" or null) && (!(("emscripten" == target."os" or null) || ("wasi" == target."os" or null))));
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            optional = true;
            target = { target, features }: (("wasm32" == target."arch" or null) && (!(("emscripten" == target."os" or null) || ("wasi" == target."os" or null))));
          }
          {
            name = "windows-targets";
            packageId = "windows-targets 0.52.6";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
        ];
        features = {
          "android-tzdata" = [ "dep:android-tzdata" ];
          "arbitrary" = [ "dep:arbitrary" ];
          "clock" = [ "winapi" "iana-time-zone" "android-tzdata" "now" ];
          "default" = [ "clock" "std" "oldtime" "wasmbind" ];
          "iana-time-zone" = [ "dep:iana-time-zone" ];
          "js-sys" = [ "dep:js-sys" ];
          "now" = [ "std" ];
          "pure-rust-locales" = [ "dep:pure-rust-locales" ];
          "rkyv" = [ "dep:rkyv" "rkyv/size_32" ];
          "rkyv-16" = [ "dep:rkyv" "rkyv?/size_16" ];
          "rkyv-32" = [ "dep:rkyv" "rkyv?/size_32" ];
          "rkyv-64" = [ "dep:rkyv" "rkyv?/size_64" ];
          "rkyv-validation" = [ "rkyv?/validation" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "alloc" ];
          "unstable-locales" = [ "pure-rust-locales" ];
          "wasm-bindgen" = [ "dep:wasm-bindgen" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
          "winapi" = [ "windows-targets" ];
          "windows-targets" = [ "dep:windows-targets" ];
        };
        resolvedDefaultFeatures = [ "alloc" "android-tzdata" "clock" "default" "iana-time-zone" "js-sys" "now" "oldtime" "serde" "std" "wasm-bindgen" "wasmbind" "winapi" "windows-targets" ];
      };
      "cipher" = rec {
        crateName = "cipher";
        version = "0.4.4";
        edition = "2021";
        sha256 = "1b9x9agg67xq5nq879z66ni4l08m6m3hqcshk37d4is4ysd3ngvp";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-common";
            packageId = "crypto-common";
          }
          {
            name = "inout";
            packageId = "inout";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "blobby" = [ "dep:blobby" ];
          "block-padding" = [ "inout/block-padding" ];
          "dev" = [ "blobby" ];
          "rand_core" = [ "crypto-common/rand_core" ];
          "std" = [ "alloc" "crypto-common/std" "inout/std" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "alloc" "block-padding" "rand_core" "std" "zeroize" ];
      };
      "color_quant" = rec {
        crateName = "color_quant";
        version = "1.1.0";
        edition = "2015";
        sha256 = "12q1n427h2bbmmm1mnglr57jaz2dj9apk0plcxw7nwqiai7qjyrx";
        authors = [
          "nwin <nwin@users.noreply.github.com>"
        ];

      };
      "colorchoice" = rec {
        crateName = "colorchoice";
        version = "1.0.1";
        edition = "2021";
        sha256 = "08h4jsrd2j5k6lp1b9v5p1f1g7cmyzm4djsvb3ydywdb4hmqashb";

      };
      "concurrent-queue" = rec {
        crateName = "concurrent-queue";
        version = "2.5.0";
        edition = "2021";
        sha256 = "0wrr3mzq2ijdkxwndhf79k952cp4zkz35ray8hvsxl96xrx1k82c";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Taiki Endo <te316e89@gmail.com>"
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "dep:loom" ];
          "portable-atomic" = [ "dep:portable-atomic" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.3.0";
        edition = "2021";
        sha256 = "1hl0y8frzlhpr58rh8rlg4bm53ax09ikj2i5fk7gpyphvhq4s57p";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        features = {
        };
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.9.4";
        edition = "2018";
        sha256 = "13zvbbj07yk3b61b8fhwfzhy35535a583irf23vlcg59j7h9bqci";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "chrono" = [ "dep:chrono" ];
          "default" = [ "link" ];
          "link" = [ "core-foundation-sys/link" ];
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "uuid" = [ "dep:uuid" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
        resolvedDefaultFeatures = [ "default" "link" ];
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.8.6";
        edition = "2018";
        sha256 = "13w6sdf06r0hn7bx2b45zxsg1mm2phz34jikm6xc5qrbr6djpsh6";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "default" = [ "link" ];
        };
        resolvedDefaultFeatures = [ "default" "link" ];
      };
      "cpufeatures" = rec {
        crateName = "cpufeatures";
        version = "0.2.12";
        edition = "2018";
        sha256 = "012m7rrak4girqlii3jnqwrr73gv1i980q4wra5yyyhvzwk5xzjk";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "aarch64-linux-android");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (("aarch64" == target."arch" or null) && ("linux" == target."os" or null));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (("aarch64" == target."arch" or null) && ("apple" == target."vendor" or null));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (("loongarch64" == target."arch" or null) && ("linux" == target."os" or null));
          }
        ];

      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.4.2";
        edition = "2015";
        sha256 = "1czp7vif73b8xslr3c9yxysmh9ws2r8824qda7j47ffs9pcnjxx9";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.8.5";
        edition = "2021";
        sha256 = "03bp38ljx4wj6vvy4fbhx41q8f585zyqix6pncz1mkz93z08qgv1";
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-epoch/std" "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.9.18";
        edition = "2021";
        sha256 = "03j2np8llwf376m3fxqx859mgp9f83hj1w34153c7a9c7i5ar0jv";
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "loom-crate" "crossbeam-utils/loom" ];
          "loom-crate" = [ "dep:loom-crate" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "alloc" "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "crossbeam-utils" = rec {
        crateName = "crossbeam-utils";
        version = "0.8.20";
        edition = "2021";
        sha256 = "100fksq5mm1n7zj242cclkw6yf7a4a8ix3lvpfkhxvdhbda9kv12";
        features = {
          "default" = [ "std" ];
          "loom" = [ "dep:loom" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crunchy" = rec {
        crateName = "crunchy";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1dx9mypwd5mpfbbajm78xcrg5lirqk7934ik980mmaffg3hdm0bs";
        authors = [
          "Vurich <jackefransham@hotmail.co.uk>"
        ];
        features = {
          "default" = [ "limit_128" ];
        };
        resolvedDefaultFeatures = [ "default" "limit_128" ];
      };
      "crypto-common" = rec {
        crateName = "crypto-common";
        version = "0.1.6";
        edition = "2018";
        sha256 = "1cvby95a6xg7kxdz5ln3rl9xh66nz66w46mm3g56ri1z5x815yqv";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array";
            features = [ "more_lengths" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core";
            optional = true;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "getrandom" = [ "rand_core/getrandom" ];
          "rand_core" = [ "dep:rand_core" ];
        };
        resolvedDefaultFeatures = [ "getrandom" "rand_core" "std" ];
      };
      "ctr" = rec {
        crateName = "ctr";
        version = "0.9.2";
        edition = "2021";
        sha256 = "0d88b73waamgpfjdml78icxz45d95q7vi2aqa604b0visqdfws83";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "cipher/alloc" ];
          "block-padding" = [ "cipher/block-padding" ];
          "std" = [ "cipher/std" "alloc" ];
          "zeroize" = [ "cipher/zeroize" ];
        };
        resolvedDefaultFeatures = [ "zeroize" ];
      };
      "curve25519-dalek" = rec {
        crateName = "curve25519-dalek";
        version = "4.1.3";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/curve25519-dalek";
          rev = "7c6d34756355a3566a704da84dce7b1c039a6572";
          sha256 = "1013mg8xna6jjgq9kvpy0dlbhh5zv1wll9kw1fyplrhw91w7py3c";
        };
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ("x86_64" == target."arch" or null);
          }
          {
            name = "curve25519-dalek-derive";
            packageId = "curve25519-dalek-derive";
            target = { target, features }: ((!("fiat" == target."curve25519_dalek_backend" or null)) && (!("serial" == target."curve25519_dalek_backend" or null)) && ("x86_64" == target."arch" or null));
          }
          {
            name = "digest";
            packageId = "digest";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "fiat-crypto";
            packageId = "fiat-crypto";
            usesDefaultFeatures = false;
            target = { target, features }: ("fiat" == target."curve25519_dalek_backend" or null);
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];
        features = {
          "alloc" = [ "zeroize?/alloc" ];
          "default" = [ "alloc" "precomputed-tables" "zeroize" "lizard" ];
          "digest" = [ "dep:digest" ];
          "ff" = [ "dep:ff" ];
          "group" = [ "dep:group" "rand_core" ];
          "group-bits" = [ "group" "ff/bits" ];
          "lizard" = [ "digest" ];
          "rand_core" = [ "dep:rand_core" ];
          "serde" = [ "dep:serde" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "digest" "lizard" "precomputed-tables" "serde" "zeroize" ];
      };
      "curve25519-dalek-derive" = rec {
        crateName = "curve25519-dalek-derive";
        version = "0.1.1";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/curve25519-dalek";
          rev = "7c6d34756355a3566a704da84dce7b1c039a6572";
          sha256 = "1013mg8xna6jjgq9kvpy0dlbhh5zv1wll9kw1fyplrhw91w7py3c";
        };
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];

      };
      "data-encoding" = rec {
        crateName = "data-encoding";
        version = "2.6.0";
        edition = "2018";
        sha256 = "1qnn68n4vragxaxlkqcb1r28d3hhj43wch67lm4rpxlw89wnjmp8";
        authors = [
          "Julien Cretin <git@ia0.eu>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "derivative" = rec {
        crateName = "derivative";
        version = "2.2.0";
        edition = "2015";
        sha256 = "02vpb81wisk2zh1d5f44szzxamzinqgq2k8ydrfjj2wwkrgdvhzw";
        procMacro = true;
        authors = [
          "mcarton <cartonmartin+git@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 1.0.109";
            features = [ "visit" "extra-traits" ];
          }
        ];
        features = {
        };
      };
      "derive-where" = rec {
        crateName = "derive-where";
        version = "1.2.7";
        edition = "2021";
        sha256 = "09cx25r1zb8xrsgd9cj9j5zmg30n7lnvcmspqymyn9d887673mk2";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
            features = [ "proc-macro" ];
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "extra-traits" "full" "parsing" "printing" ];
          }
        ];
        features = {
          "zeroize-on-drop" = [ "zeroize" ];
        };
      };
      "digest" = rec {
        crateName = "digest";
        version = "0.10.7";
        edition = "2018";
        sha256 = "14p2n6ih29x81akj097lvz7wi9b6b9hvls0lwrv7b6xwyy0s5ncy";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer";
            optional = true;
          }
          {
            name = "crypto-common";
            packageId = "crypto-common";
          }
          {
            name = "subtle";
            packageId = "subtle";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "blobby" = [ "dep:blobby" ];
          "block-buffer" = [ "dep:block-buffer" ];
          "const-oid" = [ "dep:const-oid" ];
          "core-api" = [ "block-buffer" ];
          "default" = [ "core-api" ];
          "dev" = [ "blobby" ];
          "mac" = [ "subtle" ];
          "oid" = [ "const-oid" ];
          "rand_core" = [ "crypto-common/rand_core" ];
          "std" = [ "alloc" "crypto-common/std" ];
          "subtle" = [ "dep:subtle" ];
        };
        resolvedDefaultFeatures = [ "alloc" "block-buffer" "core-api" "default" "mac" "std" "subtle" ];
      };
      "displaydoc" = rec {
        crateName = "displaydoc";
        version = "0.2.5";
        edition = "2021";
        sha256 = "1q0alair462j21iiqwrr21iabkfnb13d6x5w95lkdg21q2xrqdlp";
        procMacro = true;
        authors = [
          "Jane Lusby <jlusby@yaah.dev>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "dunce" = rec {
        crateName = "dunce";
        version = "1.0.4";
        edition = "2021";
        sha256 = "0fqcbwfclldbknmawi69l6zyncaiqzxkpbybcb2cc7jmlxnqrkjn";
        authors = [
          "Kornel <kornel@geekhood.net>"
        ];

      };
      "either" = rec {
        crateName = "either";
        version = "1.13.0";
        edition = "2018";
        sha256 = "1w2c1mybrd7vljyxk77y9f4w9dyjrmp3yp82mk7bcm8848fazcb0";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "endi" = rec {
        crateName = "endi";
        version = "1.1.0";
        edition = "2021";
        sha256 = "1gxp388g2zzbncp3rdn60wxkr49xbhhx94nl9p4a6c41w4ma7n53";
        authors = [
          "Zeeshan Ali Khan <zeenix@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "enumflags2" = rec {
        crateName = "enumflags2";
        version = "0.7.10";
        edition = "2018";
        sha256 = "0g8kmhaqxq44v76wh971biljrgaqbjc8fbyw2d1z3wsnb5zxncnj";
        authors = [
          "maik klein <maikklein@googlemail.com>"
          "Maja Kądziołka <maya@compilercrim.es>"
        ];
        dependencies = [
          {
            name = "enumflags2_derive";
            packageId = "enumflags2_derive";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "serde" ];
      };
      "enumflags2_derive" = rec {
        crateName = "enumflags2_derive";
        version = "0.7.10";
        edition = "2018";
        sha256 = "1s29iqx3gj5l5s19a22lpn0nljhp5l9smqac99126n2qhfhlh3fy";
        procMacro = true;
        authors = [
          "maik klein <maikklein@googlemail.com>"
          "Maja Kądziołka <maya@compilercrim.es>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "parsing" "printing" "derive" "proc-macro" ];
          }
        ];

      };
      "env_filter" = rec {
        crateName = "env_filter";
        version = "0.1.0";
        edition = "2021";
        sha256 = "1spp4jx0fissi0bg00d8nn4vnjwf6y3hr7d0vmcq65gb214al2d0";
        dependencies = [
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "perf" ];
          }
        ];
        features = {
          "default" = [ "regex" ];
          "regex" = [ "dep:regex" ];
        };
        resolvedDefaultFeatures = [ "regex" ];
      };
      "env_logger" = rec {
        crateName = "env_logger";
        version = "0.11.3";
        edition = "2021";
        sha256 = "1fa34dr082zfih5pw821d13kr6lcg18x6z08pa09d0aip8wmicrq";
        dependencies = [
          {
            name = "anstream";
            packageId = "anstream";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "wincon" ];
          }
          {
            name = "anstyle";
            packageId = "anstyle";
            optional = true;
          }
          {
            name = "env_filter";
            packageId = "env_filter";
            usesDefaultFeatures = false;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
        ];
        features = {
          "auto-color" = [ "color" "anstream/auto" ];
          "color" = [ "dep:anstream" "dep:anstyle" ];
          "default" = [ "auto-color" "humantime" "regex" ];
          "humantime" = [ "dep:humantime" ];
          "regex" = [ "env_filter/regex" ];
          "unstable-kv" = [ "log/kv" ];
        };
        resolvedDefaultFeatures = [ "auto-color" "color" "default" "humantime" "regex" ];
      };
      "equivalent" = rec {
        crateName = "equivalent";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1malmx5f4lkfvqasz319lq6gb3ddg19yzf9s8cykfsgzdmyq0hsl";

      };
      "err-derive" = rec {
        crateName = "err-derive";
        version = "0.3.1";
        edition = "2018";
        sha256 = "17ma9inqvjwklbzsh899cwkqw7113zi7qhqwii4r1vgkimy8hjn3";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 1.0.109";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        buildDependencies = [
          {
            name = "rustversion";
            packageId = "rustversion";
          }
        ];
        features = {
          "default" = [ "std" ];
          "skeptic" = [ "dep:skeptic" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "errno" = rec {
        crateName = "errno";
        version = "0.3.9";
        edition = "2018";
        sha256 = "1fi0m0493maq1jygcf1bya9cymz2pc1mqxj26bdv7yjd37v5qk2k";
        authors = [
          "Chris Wong <lambda.fairy@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ("hermit" == target."os" or null);
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ("wasi" == target."os" or null);
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_System_Diagnostics_Debug" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "libc/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "event-listener" = rec {
        crateName = "event-listener";
        version = "5.3.1";
        edition = "2021";
        sha256 = "1fkm6q4hjn61wl52xyqyyxai0x9w0ngrzi0wf1qsf8vhsadvwck0";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
            usesDefaultFeatures = false;
          }
          {
            name = "parking";
            packageId = "parking";
            optional = true;
            target = { target, features }: (!(builtins.elem "wasm" target."family"));
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "concurrent-queue/loom" "parking?/loom" "dep:loom" ];
          "parking" = [ "dep:parking" ];
          "portable-atomic" = [ "portable-atomic-util" "portable_atomic_crate" "concurrent-queue/portable-atomic" ];
          "portable-atomic-util" = [ "dep:portable-atomic-util" ];
          "portable_atomic_crate" = [ "dep:portable_atomic_crate" ];
          "std" = [ "concurrent-queue/std" "parking" ];
        };
        resolvedDefaultFeatures = [ "default" "parking" "std" ];
      };
      "event-listener-strategy" = rec {
        crateName = "event-listener-strategy";
        version = "0.5.2";
        edition = "2021";
        sha256 = "18f5ri227khkayhv3ndv7yl4rnasgwksl2jhwgafcxzr7324s88g";
        authors = [
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
            usesDefaultFeatures = false;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "event-listener/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "exr" = rec {
        crateName = "exr";
        version = "1.72.0";
        edition = "2018";
        sha256 = "195iviimjnp1mdkqrq8hjrfkr0qavpp1p8pq5qvaksa30pv96zc8";
        authors = [
          "johannesvollmer <johannes596@t-online.de>"
        ];
        dependencies = [
          {
            name = "bit_field";
            packageId = "bit_field";
          }
          {
            name = "flume";
            packageId = "flume";
            usesDefaultFeatures = false;
          }
          {
            name = "half";
            packageId = "half";
          }
          {
            name = "lebe";
            packageId = "lebe";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "zune-inflate";
            packageId = "zune-inflate";
            usesDefaultFeatures = false;
            features = [ "zlib" ];
          }
        ];

      };
      "fastrand" = rec {
        crateName = "fastrand";
        version = "2.1.0";
        edition = "2018";
        sha256 = "06p5d0rxq7by260m4ym9ial0bwgi0v42lrvhl6nm2g7h0h2m3h4z";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "getrandom" = [ "dep:getrandom" ];
          "js" = [ "std" "getrandom" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "fdeflate" = rec {
        crateName = "fdeflate";
        version = "0.3.4";
        edition = "2021";
        sha256 = "0ig65nz4wcqaa3y109sh7yv155ldfyph6bs2ifmz1vad1vizx6sg";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "simd-adler32";
            packageId = "simd-adler32";
          }
        ];

      };
      "fiat-crypto" = rec {
        crateName = "fiat-crypto";
        version = "0.2.9";
        edition = "2018";
        sha256 = "07c1vknddv3ak7w89n85ik0g34nzzpms6yb845vrjnv9m4csbpi8";
        authors = [
          "Fiat Crypto library authors <jgross@mit.edu>"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "field-offset" = rec {
        crateName = "field-offset";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0zq5sssaa2ckmcmxxbly8qgz3sxpb8g1lwv90sdh1z74qif2gqiq";
        authors = [
          "Diggory Blake <diggsey@googlemail.com>"
        ];
        dependencies = [
          {
            name = "memoffset";
            packageId = "memoffset";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version";
          }
        ];

      };
      "fixedbitset" = rec {
        crateName = "fixedbitset";
        version = "0.4.2";
        edition = "2015";
        sha256 = "101v41amgv5n9h4hcghvrbfk5vrncx1jwm35rn5szv4rk55i7rqc";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
        };
      };
      "flare" = rec {
        crateName = "flare";
        version = "0.15.0";
        edition = "2021";
        crateBin = [
          {
            name = "flare";
            path = "src/main.rs";
            requiredFeatures = [ ];
          }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../../../../../../../../../../home/colin/ref/repos/schmiddi-on-mobile/flare; };
        authors = [
          "Julian Schmidhuber <mobile@schmidhuberj.de>"
        ];
        dependencies = [
          {
            name = "ashpd";
            packageId = "ashpd";
            usesDefaultFeatures = false;
            features = [ "gtk4" "tokio" ];
          }
          {
            name = "blurhash";
            packageId = "blurhash";
            features = [ "image" "gdk-pixbuf" ];
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "env_logger";
            packageId = "env_logger";
          }
          {
            name = "err-derive";
            packageId = "err-derive";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "gettext-rs";
            packageId = "gettext-rs";
            features = [ "gettext-system" ];
          }
          {
            name = "gtk4";
            packageId = "gtk4";
            rename = "gtk";
            features = [ "v4_12" ];
          }
          {
            name = "image";
            packageId = "image 0.24.9";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libadwaita";
            packageId = "libadwaita";
            rename = "adw";
            features = [ "v1_5" ];
          }
          {
            name = "libsignal-service";
            packageId = "libsignal-service";
          }
          {
            name = "libspelling";
            packageId = "libspelling";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "oo7";
            packageId = "oo7";
            usesDefaultFeatures = false;
            features = [ "native_crypto" "tokio" ];
          }
          {
            name = "phonenumber";
            packageId = "phonenumber";
            optional = true;
          }
          {
            name = "presage";
            packageId = "presage";
          }
          {
            name = "presage-store-sled";
            packageId = "presage-store-sled";
          }
          {
            name = "qrcode-generator";
            packageId = "qrcode-generator";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "sourceview5";
            packageId = "sourceview5";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt" "macros" "rt-multi-thread" "time" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            features = [ "log-always" ];
          }
          {
            name = "url";
            packageId = "url";
          }
          {
            name = "zbus";
            packageId = "zbus";
            usesDefaultFeatures = false;
            features = [ "tokio" ];
          }
        ];
        features = {
          "screenshot" = [ "dep:phonenumber" ];
          "screenshot-setup" = [ "screenshot" ];
        };
        resolvedDefaultFeatures = [ "default" "libspelling" "screenshot" "screenshot-setup" ];
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.30";
        edition = "2018";
        sha256 = "1bjx56n0wq5w7vsjn7b5rbmqiw0vc3mfzz1rl7i2jy0wzmy44m2z";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "with-alloc" ];
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
            target = { target, features }: (("wasm32" == target."arch" or null) && (!("emscripten" == target."os" or null)));
            features = [ "with-alloc" ];
          }
        ];
        features = {
          "any_zlib" = [ "any_impl" ];
          "cloudflare-zlib-sys" = [ "dep:cloudflare-zlib-sys" ];
          "cloudflare_zlib" = [ "any_zlib" "cloudflare-zlib-sys" ];
          "default" = [ "rust_backend" ];
          "libz-ng-sys" = [ "dep:libz-ng-sys" ];
          "libz-rs-sys" = [ "dep:libz-rs-sys" ];
          "libz-sys" = [ "dep:libz-sys" ];
          "miniz-sys" = [ "rust_backend" ];
          "miniz_oxide" = [ "dep:miniz_oxide" ];
          "rust_backend" = [ "miniz_oxide" "any_impl" ];
          "zlib" = [ "any_zlib" "libz-sys" ];
          "zlib-default" = [ "any_zlib" "libz-sys/default" ];
          "zlib-ng" = [ "any_zlib" "libz-ng-sys" ];
          "zlib-ng-compat" = [ "zlib" "libz-sys/zlib-ng" ];
          "zlib-rs" = [ "any_zlib" "libz-rs-sys" ];
        };
        resolvedDefaultFeatures = [ "any_impl" "default" "miniz_oxide" "rust_backend" ];
      };
      "flume" = rec {
        crateName = "flume";
        version = "0.11.0";
        edition = "2018";
        sha256 = "10girdbqn77wi802pdh55lwbmymy437k7kklnvj12aaiwaflbb2m";
        authors = [
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
        ];
        dependencies = [
          {
            name = "spin";
            packageId = "spin";
            rename = "spin1";
            features = [ "mutex" ];
          }
        ];
        features = {
          "async" = [ "futures-sink" "futures-core" ];
          "default" = [ "async" "select" "eventual-fairness" ];
          "eventual-fairness" = [ "select" "nanorand" ];
          "futures-core" = [ "dep:futures-core" ];
          "futures-sink" = [ "dep:futures-sink" ];
          "nanorand" = [ "dep:nanorand" ];
        };
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "1hc2mcqha06aibcaza94vbi81j6pr9a1bbxrxjfhc91zin8yr7iz";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "form_urlencoded" = rec {
        crateName = "form_urlencoded";
        version = "1.2.1";
        edition = "2018";
        sha256 = "0milh8x7nl4f450s3ddhg57a3flcv6yq8hlkyk6fyr3mcb128dp1";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "percent-encoding/alloc" ];
          "default" = [ "std" ];
          "std" = [ "alloc" "percent-encoding/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "fs2" = rec {
        crateName = "fs2";
        version = "0.4.3";
        edition = "2015";
        sha256 = "04v2hwk7035c088f19mfl5b1lz84gnvv2hv6m935n0hmirszqr4m";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "processthreadsapi" "winerror" "fileapi" "winbase" "std" ];
          }
        ];

      };
      "fs_extra" = rec {
        crateName = "fs_extra";
        version = "1.3.0";
        edition = "2018";
        sha256 = "075i25z70j2mz9r7i9p9r521y8xdj81q7skslyb7zhqnnw33fw22";
        authors = [
          "Denis Kurilenko <webdesus@gmail.com>"
        ];

      };
      "futures" = rec {
        crateName = "futures";
        version = "0.3.30";
        edition = "2018";
        sha256 = "1c04g14bccmprwsvx2j9m2blhwrynq7vhl151lsvcv4gi0b6jp34";
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "futures-executor" = [ "dep:futures-executor" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
          "write-all-vectored" = [ "futures-util/write-all-vectored" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "default" "executor" "futures-executor" "std" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.30";
        edition = "2018";
        sha256 = "0y6b7xxqdjm9hlcjpakcg41qfl7lihf6gavk8fyqijsxhvbzgj7a";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "default" = [ "std" ];
          "futures-sink" = [ "dep:futures-sink" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink" "sink" "std" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.30";
        edition = "2018";
        sha256 = "07aslayrn3lbggj54kci0ishmd1pr367fp7iks7adia1p05miinz";
        features = {
          "default" = [ "std" ];
          "portable-atomic" = [ "dep:portable-atomic" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.30";
        edition = "2018";
        sha256 = "07dh08gs9vfll2h36kq32q9xd86xm6lyl9xikmmwlkqnmrrgqxm5";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "num_cpus" = [ "dep:num_cpus" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.30";
        edition = "2018";
        sha256 = "1hgh25isvsr4ybibywhr4dpys8mjnscw4wfxxwca70cn1gi26im4";
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "futures-lite" = rec {
        crateName = "futures-lite";
        version = "2.3.0";
        edition = "2021";
        sha256 = "19gk4my8zhfym6gwnpdjiyv2hw8cc098skkbkhryjdaf0yspwljj";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Contributors to futures-rs"
        ];
        dependencies = [
          {
            name = "fastrand";
            packageId = "fastrand";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "parking";
            packageId = "parking";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];
        features = {
          "default" = [ "race" "std" ];
          "fastrand" = [ "dep:fastrand" ];
          "futures-io" = [ "dep:futures-io" ];
          "memchr" = [ "dep:memchr" ];
          "parking" = [ "dep:parking" ];
          "race" = [ "fastrand" ];
          "std" = [ "alloc" "fastrand/std" "futures-io" "parking" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "fastrand" "futures-io" "parking" "race" "std" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.30";
        edition = "2018";
        sha256 = "1b49qh9d402y8nka4q6wvvj0c88qq91wbr192mdn5h54nzs0qxc7";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];

      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.30";
        edition = "2018";
        sha256 = "1dag8xyyaya8n8mh8smx7x6w2dpmafg2din145v973a3hw7f1f4z";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.30";
        edition = "2018";
        sha256 = "013h1724454hj8qczp8vvs10qfiqrxr937qsrv6rhii68ahlzn1q";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.30";
        edition = "2018";
        sha256 = "0j0xqhcir1zf2dcbpd421kgw6wvsk0rpxflylcysn1rlp3g02r1x";
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "futures-channel" = [ "dep:futures-channel" ];
          "futures-io" = [ "dep:futures-io" ];
          "futures-macro" = [ "dep:futures-macro" ];
          "futures-sink" = [ "dep:futures-sink" ];
          "futures_01" = [ "dep:futures_01" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "memchr" = [ "dep:memchr" ];
          "portable-atomic" = [ "futures-core/portable-atomic" ];
          "sink" = [ "futures-sink" ];
          "slab" = [ "dep:slab" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "tokio-io" = [ "dep:tokio-io" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
          "write-all-vectored" = [ "io" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "channel" "default" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std" ];
      };
      "fxhash" = rec {
        crateName = "fxhash";
        version = "0.2.1";
        edition = "2015";
        sha256 = "037mb9ichariqi45xm6mz0b11pa92gj38ba0409z3iz239sns6y3";
        libPath = "lib.rs";
        authors = [
          "cbreeden <github@u.breeden.cc>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];

      };
      "gdk-pixbuf" = rec {
        crateName = "gdk-pixbuf";
        version = "0.19.8";
        edition = "2021";
        sha256 = "16c6kznkh3vi82843ays8awdm37fwjd1fblv6g3h64824shsnkk2";
        libName = "gdk_pixbuf";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
            rename = "ffi";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "v2_40" = [ "ffi/v2_40" ];
          "v2_42" = [ "v2_40" "ffi/v2_42" ];
        };
      };
      "gdk-pixbuf-sys" = rec {
        crateName = "gdk-pixbuf-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "0y93g24mdgskvyhva46xv3qyb1cvj5xpi0yqnh7cb31wz2j0byjf";
        libName = "gdk_pixbuf_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v2_42" = [ "v2_40" ];
        };
      };
      "gdk4" = rec {
        crateName = "gdk4";
        version = "0.8.2";
        edition = "2021";
        sha256 = "01qak43mrlszsy9cfsmqk1ql4228m2rylbg514g3fsidsjfmq9nv";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-rs";
            packageId = "cairo-rs";
            features = [ "use_glib" ];
          }
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
            rename = "ffi";
          }
          {
            name = "gio";
            packageId = "gio";
            features = [ "v2_66" ];
          }
          {
            name = "glib";
            packageId = "glib";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
            features = [ "v1_46" ];
          }
        ];
        features = {
          "gl" = [ "dep:gl" ];
          "v4_10" = [ "ffi/v4_10" "v4_8" ];
          "v4_12" = [ "ffi/v4_12" "v4_10" ];
          "v4_14" = [ "ffi/v4_14" "v4_12" ];
          "v4_16" = [ "ffi/v4_16" "v4_14" ];
          "v4_2" = [ "ffi/v4_2" ];
          "v4_4" = [ "ffi/v4_4" "v4_2" ];
          "v4_6" = [ "ffi/v4_6" "v4_4" ];
          "v4_8" = [ "ffi/v4_8" "v4_6" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_12" "v4_2" "v4_4" "v4_6" "v4_8" ];
      };
      "gdk4-sys" = rec {
        crateName = "gdk4-sys";
        version = "0.8.2";
        edition = "2021";
        sha256 = "1pb6vklx9ik7jx9cmrw2vywlx9ssqhll8q77ky8p8w56x2s8yhf9";
        libName = "gdk4_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
            features = [ "v2_66" ];
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            features = [ "v2_66" ];
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
            features = [ "v1_46" ];
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v4_10" = [ "v4_8" ];
          "v4_12" = [ "v4_10" ];
          "v4_14" = [ "v4_12" ];
          "v4_16" = [ "v4_14" ];
          "v4_4" = [ "v4_2" ];
          "v4_6" = [ "v4_4" ];
          "v4_8" = [ "v4_6" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_12" "v4_2" "v4_4" "v4_6" "v4_8" ];
      };
      "gdk4-wayland" = rec {
        crateName = "gdk4-wayland";
        version = "0.8.2";
        edition = "2021";
        sha256 = "0w8kkdgwj0s5r92r4ml1k8dwn6gyrvmnpvvbxhzlwmscpvna087n";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "gdk4-wayland-sys";
            packageId = "gdk4-wayland-sys";
            rename = "ffi";
          }
          {
            name = "gio";
            packageId = "gio";
            features = [ "v2_66" ];
          }
          {
            name = "glib";
            packageId = "glib";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "egl" = [ "khronos-egl" ];
          "khronos-egl" = [ "dep:khronos-egl" ];
          "v4_10" = [ "ffi/v4_10" "v4_4" "gdk/v4_10" ];
          "v4_12" = [ "ffi/v4_12" "v4_10" "gdk/v4_12" ];
          "v4_16" = [ "ffi/v4_16" "v4_12" "gdk/v4_16" ];
          "v4_4" = [ "ffi/v4_4" "gdk/v4_4" ];
          "wayland-backend" = [ "dep:wayland-backend" ];
          "wayland-client" = [ "dep:wayland-client" ];
          "wayland_crate" = [ "wayland-client" "wayland-backend" ];
        };
      };
      "gdk4-wayland-sys" = rec {
        crateName = "gdk4-wayland-sys";
        version = "0.8.2";
        edition = "2021";
        sha256 = "00qqwqkwd3jzha64cpb4kf8g1ixxpbp289kix2q88wcigj9d6pvs";
        libName = "gdk4_wayland_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v4_10" = [ "v4_4" ];
          "v4_12" = [ "v4_10" ];
          "v4_16" = [ "v4_12" ];
        };
      };
      "gdk4-x11" = rec {
        crateName = "gdk4-x11";
        version = "0.8.2";
        edition = "2021";
        sha256 = "1axpg2jdyn5sfnmvdk2dlyi9d5n4jsaf3byx4x5w21vhabis6vgc";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "gdk4-x11-sys";
            packageId = "gdk4-x11-sys";
            rename = "ffi";
          }
          {
            name = "gio";
            packageId = "gio";
            features = [ "v2_66" ];
          }
          {
            name = "glib";
            packageId = "glib";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "egl" = [ "khronos-egl" ];
          "khronos-egl" = [ "dep:khronos-egl" ];
          "v4_10" = [ "ffi/v4_10" "v4_4" "gdk/v4_10" ];
          "v4_16" = [ "ffi/v4_16" "v4_10" "gdk/v4_16" ];
          "v4_4" = [ "ffi/v4_4" "gdk/v4_4" ];
          "x11" = [ "dep:x11" ];
          "xlib" = [ "x11" ];
        };
      };
      "gdk4-x11-sys" = rec {
        crateName = "gdk4-x11-sys";
        version = "0.8.2";
        edition = "2021";
        sha256 = "0gg2197l3wlgmxiffpqnszck8f2wxk5kr560fbxv5dvpxj3ykd0b";
        libName = "gdk4_x11_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            features = [ "v2_66" ];
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v4_10" = [ "v4_4" ];
          "v4_16" = [ "v4_10" ];
        };
      };
      "generic-array" = rec {
        crateName = "generic-array";
        version = "0.14.7";
        edition = "2015";
        sha256 = "16lyyrzrljfq424c3n8kfwkqihlimmsg5nhshbbp48np3yjrqr45";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "serde" = [ "dep:serde" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "more_lengths" ];
      };
      "getrandom" = rec {
        crateName = "getrandom";
        version = "0.2.15";
        edition = "2018";
        sha256 = "1mzlnrb3dgyd1fb84gvw10pyr8wdqdl4ry4sr64i1s8an66pqmn4";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi";
            usesDefaultFeatures = false;
            target = { target, features }: ("wasi" == target."os" or null);
          }
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "js" = [ "wasm-bindgen" "js-sys" ];
          "js-sys" = [ "dep:js-sys" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "libc/rustc-dep-of-std" "wasi/rustc-dep-of-std" ];
          "wasm-bindgen" = [ "dep:wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "gettext-rs" = rec {
        crateName = "gettext-rs";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0r7kahqcjrkm83d3gzzkn83fnw2bnqj2ank5z6hsm66izalai7p4";
        libName = "gettextrs";
        authors = [
          "Konstantin Salikhov <koka58@yandex.ru>"
          "Alexander Batischev <eual.jp@gmail.com>"
        ];
        dependencies = [
          {
            name = "gettext-sys";
            packageId = "gettext-sys";
          }
          {
            name = "locale_config";
            packageId = "locale_config";
          }
        ];
        features = {
          "gettext-system" = [ "gettext-sys/gettext-system" ];
        };
        resolvedDefaultFeatures = [ "gettext-system" ];
      };
      "gettext-sys" = rec {
        crateName = "gettext-sys";
        version = "0.21.3";
        edition = "2015";
        links = "gettext";
        sha256 = "17c3qdbirxsf9csqzp4z4jaqck2n72z4nw3nh9vhd8jn1zhf4g66";
        libPath = "lib.rs";
        authors = [
          "Brian Olsen <brian@maven-group.org>"
          "Alexander Batischev <eual.jp@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "temp-dir";
            packageId = "temp-dir";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "gettext-system" ];
      };
      "ghash" = rec {
        crateName = "ghash";
        version = "0.5.1";
        edition = "2021";
        sha256 = "1wbg4vdgzwhkpkclz1g6bs4r5x984w5gnlsj4q5wnafb5hva9n7h";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "opaque-debug";
            packageId = "opaque-debug";
          }
          {
            name = "polyval";
            packageId = "polyval";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "polyval/std" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "zeroize" ];
      };
      "gif" = rec {
        crateName = "gif";
        version = "0.13.1";
        edition = "2021";
        sha256 = "1whrkvdg26gp1r7f95c6800y6ijqw5y0z8rgj6xihpi136dxdciz";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "color_quant";
            packageId = "color_quant";
            optional = true;
          }
          {
            name = "weezl";
            packageId = "weezl";
          }
        ];
        features = {
          "color_quant" = [ "dep:color_quant" ];
          "default" = [ "raii_no_panic" "std" "color_quant" ];
        };
        resolvedDefaultFeatures = [ "color_quant" "default" "raii_no_panic" "std" ];
      };
      "gimli" = rec {
        crateName = "gimli";
        version = "0.29.0";
        edition = "2018";
        sha256 = "1zgzprnjaawmg6zyic4f2q2hc39kdhn116qnkqpgvsasgc3x9v20";
        features = {
          "default" = [ "read-all" "write" ];
          "endian-reader" = [ "read" "dep:stable_deref_trait" ];
          "fallible-iterator" = [ "dep:fallible-iterator" ];
          "read" = [ "read-core" ];
          "read-all" = [ "read" "std" "fallible-iterator" "endian-reader" ];
          "rustc-dep-of-std" = [ "dep:core" "dep:alloc" "dep:compiler_builtins" ];
          "std" = [ "fallible-iterator?/std" "stable_deref_trait?/std" ];
          "write" = [ "dep:indexmap" ];
        };
        resolvedDefaultFeatures = [ "read" "read-core" ];
      };
      "gio" = rec {
        crateName = "gio";
        version = "0.19.8";
        edition = "2021";
        sha256 = "1znz5ngfvv3gbndf6lzz3hs27hlb8ysls4axlfccrzvkscbz2jac";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
            rename = "ffi";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            features = [ "io" ];
          }
        ];
        features = {
          "v2_58" = [ "ffi/v2_58" "glib/v2_58" ];
          "v2_60" = [ "v2_58" "ffi/v2_60" "glib/v2_60" ];
          "v2_62" = [ "v2_60" "ffi/v2_62" "glib/v2_62" ];
          "v2_64" = [ "v2_62" "ffi/v2_64" "glib/v2_64" ];
          "v2_66" = [ "v2_64" "ffi/v2_66" "glib/v2_66" ];
          "v2_68" = [ "v2_66" "ffi/v2_68" "glib/v2_68" ];
          "v2_70" = [ "v2_68" "ffi/v2_70" "glib/v2_70" ];
          "v2_72" = [ "v2_70" "ffi/v2_72" "glib/v2_72" ];
          "v2_74" = [ "v2_72" "ffi/v2_74" "glib/v2_74" ];
          "v2_76" = [ "v2_74" "ffi/v2_76" "glib/v2_76" ];
          "v2_78" = [ "v2_76" "ffi/v2_78" "glib/v2_78" ];
          "v2_80" = [ "v2_78" "ffi/v2_80" "glib/v2_80" ];
        };
        resolvedDefaultFeatures = [ "v2_58" "v2_60" "v2_62" "v2_64" "v2_66" ];
      };
      "gio-sys" = rec {
        crateName = "gio-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "1vylsskpipfwl7mvffp1s0227d0k5amyhd32dfnp3mhl8yx47mrc";
        libName = "gio_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Networking_WinSock" ];
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v2_60" = [ "v2_58" ];
          "v2_62" = [ "v2_60" ];
          "v2_64" = [ "v2_62" ];
          "v2_66" = [ "v2_64" ];
          "v2_68" = [ "v2_66" ];
          "v2_70" = [ "v2_68" ];
          "v2_72" = [ "v2_70" ];
          "v2_74" = [ "v2_72" ];
          "v2_76" = [ "v2_74" ];
          "v2_78" = [ "v2_76" ];
          "v2_80" = [ "v2_78" ];
        };
        resolvedDefaultFeatures = [ "v2_58" "v2_60" "v2_62" "v2_64" "v2_66" ];
      };
      "glib" = rec {
        crateName = "glib";
        version = "0.19.9";
        edition = "2021";
        sha256 = "0i2ak1scmzfmfxbm2dr146jl4y9mafxf1ald05jr8iimy5wh4r9r";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 2.6.0";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
            rename = "gio_ffi";
            optional = true;
          }
          {
            name = "glib-macros";
            packageId = "glib-macros";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            rename = "ffi";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
            rename = "gobject_ffi";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
            features = [ "union" "const_generics" "const_new" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "gio" ];
          "gio" = [ "gio_ffi" ];
          "gio_ffi" = [ "dep:gio_ffi" ];
          "log" = [ "rs-log" ];
          "log_macros" = [ "log" ];
          "rs-log" = [ "dep:rs-log" ];
          "unstable-clone-syntax" = [ "glib-macros/unstable-clone-syntax" ];
          "v2_58" = [ "ffi/v2_58" "gobject_ffi/v2_58" ];
          "v2_60" = [ "v2_58" "ffi/v2_60" ];
          "v2_62" = [ "v2_60" "ffi/v2_62" "gobject_ffi/v2_62" ];
          "v2_64" = [ "v2_62" "ffi/v2_64" ];
          "v2_66" = [ "v2_64" "ffi/v2_66" "gobject_ffi/v2_66" ];
          "v2_68" = [ "v2_66" "ffi/v2_68" "gobject_ffi/v2_68" ];
          "v2_70" = [ "v2_68" "ffi/v2_70" "gobject_ffi/v2_70" ];
          "v2_72" = [ "v2_70" "ffi/v2_72" "gobject_ffi/v2_72" ];
          "v2_74" = [ "v2_72" "ffi/v2_74" "gobject_ffi/v2_74" ];
          "v2_76" = [ "v2_74" "ffi/v2_76" "gobject_ffi/v2_76" ];
          "v2_78" = [ "v2_76" "ffi/v2_78" "gobject_ffi/v2_78" ];
          "v2_80" = [ "v2_78" "ffi/v2_80" "gobject_ffi/v2_80" ];
        };
        resolvedDefaultFeatures = [ "default" "gio" "gio_ffi" "v2_58" "v2_60" "v2_62" "v2_64" "v2_66" ];
      };
      "glib-macros" = rec {
        crateName = "glib-macros";
        version = "0.19.9";
        edition = "2021";
        sha256 = "1mzsh8jkg8vldvgvr9gsaidvn2myn5cbdn8a6m8rgbhlg8kv0aa4";
        procMacro = true;
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 3.1.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
      "glib-sys" = rec {
        crateName = "glib-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "19f4q8x77vd7c1d9ikw492yskq5kpd7k04qb8xnh1c427a6w2baw";
        libName = "glib_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v2_60" = [ "v2_58" ];
          "v2_62" = [ "v2_60" ];
          "v2_64" = [ "v2_62" ];
          "v2_66" = [ "v2_64" ];
          "v2_68" = [ "v2_66" ];
          "v2_70" = [ "v2_68" ];
          "v2_72" = [ "v2_70" ];
          "v2_74" = [ "v2_72" ];
          "v2_76" = [ "v2_74" ];
          "v2_78" = [ "v2_76" ];
          "v2_80" = [ "v2_78" ];
        };
        resolvedDefaultFeatures = [ "v2_58" "v2_60" "v2_62" "v2_64" "v2_66" ];
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.1";
        edition = "2015";
        sha256 = "16zca52nglanv23q5qrwd5jinw3d3as5ylya6y1pbx47vkxvrynj";
        authors = [
          "The Rust Project Developers"
        ];

      };
      "gobject-sys" = rec {
        crateName = "gobject-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "17lb7dfbpcg8zchwlfbc08kckwf0a7d9n5ly3pyic13f5ljpws9f";
        libName = "gobject_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v2_62" = [ "v2_58" ];
          "v2_66" = [ "v2_62" ];
          "v2_68" = [ "v2_66" ];
          "v2_70" = [ "v2_68" ];
          "v2_72" = [ "v2_70" ];
          "v2_74" = [ "v2_72" ];
          "v2_76" = [ "v2_74" ];
          "v2_78" = [ "v2_74" ];
          "v2_80" = [ "v2_78" ];
        };
        resolvedDefaultFeatures = [ "v2_58" "v2_62" "v2_66" ];
      };
      "graphene-rs" = rec {
        crateName = "graphene-rs";
        version = "0.19.8";
        edition = "2021";
        sha256 = "1krblj6kbnixgkmz2b3494jmlm2xlv3qz5qm585frn943l1qdyzm";
        libName = "graphene";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "graphene-sys";
            packageId = "graphene-sys";
            rename = "ffi";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "v1_12" = [ "ffi/v1_12" ];
        };
      };
      "graphene-sys" = rec {
        crateName = "graphene-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "01dg4wgqxaqkdv0vl7hr14b6kbbm96gwdsb5a2ss9jxw8h4hwlrg";
        libName = "graphene_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
        };
      };
      "gsk4" = rec {
        crateName = "gsk4";
        version = "0.8.2";
        edition = "2021";
        sha256 = "1gi1f9s2nd5m2zfwb91vijpzr6nxbfa58inrwml497wkyr5qhqvm";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-rs";
            packageId = "cairo-rs";
            features = [ "use_glib" ];
          }
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "glib";
            packageId = "glib";
            features = [ "v2_66" ];
          }
          {
            name = "graphene-rs";
            packageId = "graphene-rs";
            rename = "graphene";
          }
          {
            name = "gsk4-sys";
            packageId = "gsk4-sys";
            rename = "ffi";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
            features = [ "v1_46" ];
          }
        ];
        features = {
          "broadway" = [ "ffi/broadway" ];
          "v4_10" = [ "ffi/v4_10" "gdk/v4_10" "v4_6" ];
          "v4_14" = [ "ffi/v4_14" "v4_10" ];
          "v4_2" = [ "ffi/v4_2" "gdk/v4_2" ];
          "v4_4" = [ "ffi/v4_4" "gdk/v4_4" "v4_2" ];
          "v4_6" = [ "ffi/v4_6" "gdk/v4_6" "v4_4" ];
          "vulkan" = [ "ffi/vulkan" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_2" "v4_4" "v4_6" ];
      };
      "gsk4-sys" = rec {
        crateName = "gsk4-sys";
        version = "0.8.2";
        edition = "2021";
        sha256 = "1p5kf912s8qs38lhzzwnm26v498wkp68mx92z38vnf3ccgr4n0i3";
        libName = "gsk4_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            features = [ "v2_66" ];
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
            features = [ "v2_66" ];
          }
          {
            name = "graphene-sys";
            packageId = "graphene-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
            features = [ "v1_46" ];
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v4_10" = [ "v4_6" ];
          "v4_14" = [ "v4_10" ];
          "v4_4" = [ "v4_2" ];
          "v4_6" = [ "v4_2" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_2" "v4_4" "v4_6" ];
      };
      "gtk4" = rec {
        crateName = "gtk4";
        version = "0.8.2";
        edition = "2021";
        sha256 = "1avinslgnsz3wywf4dfaza8w9c29krd10hxmi8si3bq8kcqi2kmh";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-rs";
            packageId = "cairo-rs";
            features = [ "use_glib" ];
          }
          {
            name = "field-offset";
            packageId = "field-offset";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "gio";
            packageId = "gio";
            features = [ "v2_66" ];
          }
          {
            name = "glib";
            packageId = "glib";
            features = [ "v2_66" ];
          }
          {
            name = "graphene-rs";
            packageId = "graphene-rs";
            rename = "graphene";
          }
          {
            name = "gsk4";
            packageId = "gsk4";
            rename = "gsk";
          }
          {
            name = "gtk4-macros";
            packageId = "gtk4-macros";
          }
          {
            name = "gtk4-sys";
            packageId = "gtk4-sys";
            rename = "ffi";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
            features = [ "v1_46" ];
          }
        ];
        features = {
          "blueprint" = [ "gtk4-macros/blueprint" ];
          "gio_v2_80" = [ "gio/v2_80" ];
          "gnome_42" = [ "v4_6" "cairo-rs/v1_16" "gdk-pixbuf/v2_42" "gio/v2_72" ];
          "gnome_43" = [ "v4_8" "cairo-rs/v1_16" "gdk-pixbuf/v2_42" "gio/v2_74" ];
          "gnome_44" = [ "v4_10" "cairo-rs/v1_16" "gdk-pixbuf/v2_42" "gio/v2_76" ];
          "gnome_45" = [ "v4_12" "cairo-rs/v1_16" "pango/v1_52" "gdk-pixbuf/v2_42" "gio/v2_78" ];
          "gnome_46" = [ "v4_14" "cairo-rs/v1_16" "pango/v1_52" "gdk-pixbuf/v2_42" "gio_v2_80" ];
          "v4_10" = [ "ffi/v4_10" "v4_8" "gdk/v4_10" "gsk/v4_10" ];
          "v4_12" = [ "ffi/v4_12" "v4_10" "gdk/v4_12" ];
          "v4_14" = [ "ffi/v4_14" "v4_12" "gdk/v4_14" "gsk/v4_14" ];
          "v4_16" = [ "ffi/v4_16" "v4_14" "gdk/v4_16" ];
          "v4_2" = [ "ffi/v4_2" "gdk/v4_2" "gsk/v4_2" ];
          "v4_4" = [ "ffi/v4_4" "v4_2" "gdk/v4_4" "gsk/v4_4" ];
          "v4_6" = [ "ffi/v4_6" "v4_4" "gdk/v4_6" "gsk/v4_6" "pango/v1_50" ];
          "v4_8" = [ "ffi/v4_8" "v4_6" "gdk/v4_8" ];
          "xml_validation" = [ "gtk4-macros/xml_validation" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_12" "v4_2" "v4_4" "v4_6" "v4_8" ];
      };
      "gtk4-macros" = rec {
        crateName = "gtk4-macros";
        version = "0.8.2";
        edition = "2021";
        sha256 = "0214a8y68kknxcnihsfxwsqvll7ss2rbiplr51cyk34dz1z5lrgc";
        procMacro = true;
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 3.1.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];
        features = {
          "quick-xml" = [ "dep:quick-xml" ];
          "xml_validation" = [ "quick-xml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "gtk4-sys" = rec {
        crateName = "gtk4-sys";
        version = "0.8.2";
        edition = "2021";
        links = "gtk-4";
        sha256 = "1dapgvbkhf0kcm2jfmj8r98wzyhwmr5iv358dvb73sl5gxmsi2lc";
        libName = "gtk4_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "cairo-sys-rs";
            packageId = "cairo-sys-rs";
          }
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
            features = [ "v2_66" ];
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
            features = [ "v2_66" ];
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
            features = [ "v2_66" ];
          }
          {
            name = "graphene-sys";
            packageId = "graphene-sys";
          }
          {
            name = "gsk4-sys";
            packageId = "gsk4-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
            features = [ "v1_46" ];
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v4_10" = [ "v4_8" ];
          "v4_12" = [ "v4_10" ];
          "v4_14" = [ "v4_12" ];
          "v4_16" = [ "v4_14" ];
          "v4_4" = [ "v4_2" ];
          "v4_6" = [ "v4_4" ];
          "v4_8" = [ "v4_6" ];
        };
        resolvedDefaultFeatures = [ "v4_10" "v4_12" "v4_2" "v4_4" "v4_6" "v4_8" ];
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.3.26";
        edition = "2018";
        sha256 = "1s7msnfv7xprzs6xzfj5sg6p8bjcdpcqcmjjbkd345cyi1x55zl1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-util" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util 0.7.11";
            features = [ "codec" "io" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" "macros" "sync" "net" ];
          }
        ];
        features = {
        };
      };
      "half" = rec {
        crateName = "half";
        version = "2.4.1";
        edition = "2021";
        sha256 = "123q4zzw1x4309961i69igzd1wb7pj04aaii3kwasrz3599qrl3d";
        authors = [
          "Kathryn Long <squeeself@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "crunchy";
            packageId = "crunchy";
            target = { target, features }: ("spirv" == target."arch" or null);
          }
        ];
        devDependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
        ];
        features = {
          "bytemuck" = [ "dep:bytemuck" ];
          "default" = [ "std" ];
          "num-traits" = [ "dep:num-traits" ];
          "rand_distr" = [ "dep:rand" "dep:rand_distr" ];
          "rkyv" = [ "dep:rkyv" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "alloc" ];
          "zerocopy" = [ "dep:zerocopy" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "hashbrown" = rec {
        crateName = "hashbrown";
        version = "0.14.5";
        edition = "2021";
        sha256 = "1wa1vy1xs3mp11bn3z9dv0jricgr6a2j0zkf1g19yz3vw4il89z5";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        features = {
          "ahash" = [ "dep:ahash" ];
          "alloc" = [ "dep:alloc" ];
          "allocator-api2" = [ "dep:allocator-api2" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "ahash" "inline-more" "allocator-api2" ];
          "equivalent" = [ "dep:equivalent" ];
          "nightly" = [ "allocator-api2?/nightly" "bumpalo/allocator_api" ];
          "rayon" = [ "dep:rayon" ];
          "rkyv" = [ "dep:rkyv" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "raw" ];
      };
      "headers" = rec {
        crateName = "headers";
        version = "0.3.9";
        edition = "2015";
        sha256 = "0w62gnwh2p1lml0zqdkrx9dp438881nhz32zrzdy61qa0a9kns06";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.21.7";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "headers-core";
            packageId = "headers-core";
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "sha1";
            packageId = "sha1";
          }
        ];
        features = {
        };
      };
      "headers-core" = rec {
        crateName = "headers-core";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0ab469xfpd411mc3dhmjhmzrhqikzyj8a17jn5bkj9zfpy0n9xp7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "http";
            packageId = "http 0.2.12";
          }
        ];

      };
      "heck" = rec {
        crateName = "heck";
        version = "0.5.0";
        edition = "2021";
        sha256 = "1sjmpsdl8czyh9ywl3qcsfsq9a307dg4ni2vnlwgnzzqhc4y0113";

      };
      "hermit-abi 0.3.9" = rec {
        crateName = "hermit-abi";
        version = "0.3.9";
        edition = "2021";
        sha256 = "092hxjbjnq5fmz66grd9plxd0sh6ssg5fhgwwwqbrzgzkjwdycfj";
        authors = [
          "Stefan Lankes"
        ];
        features = {
          "alloc" = [ "dep:alloc" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hermit-abi 0.4.0" = rec {
        crateName = "hermit-abi";
        version = "0.4.0";
        edition = "2021";
        sha256 = "1k1zwllx6nfq417hy38x4akw1ivlv68ymvnzyxs76ffgsqcskxpv";
        authors = [
          "Stefan Lankes"
        ];
        features = {
          "alloc" = [ "dep:alloc" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0w1a4davm1lgzpamwnba907aysmlrnygbqmfis2mqjx5m552a93z";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "hex-literal" = rec {
        crateName = "hex-literal";
        version = "0.4.1";
        edition = "2021";
        sha256 = "0iny5inkixsdr41pm2vkqh3fl66752z5j5c0cdxw16yl9ryjdqkg";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "hkdf" = rec {
        crateName = "hkdf";
        version = "0.12.4";
        edition = "2018";
        sha256 = "1xxxzcarz151p1b858yn5skmhyrvn8fs4ivx5km3i1kjmnr8wpvv";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "hmac";
            packageId = "hmac";
          }
        ];
        features = {
          "std" = [ "hmac/std" ];
        };
      };
      "hmac" = rec {
        crateName = "hmac";
        version = "0.12.1";
        edition = "2018";
        sha256 = "0pmbr069sfg76z7wsssfk5ddcqd9ncp79fyz6zcm6yn115yc6jbc";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "mac" ];
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "dev" ];
          }
        ];
        features = {
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "reset" ];
      };
      "html-escape" = rec {
        crateName = "html-escape";
        version = "0.2.13";
        edition = "2021";
        sha256 = "0xml3hswv0205fbm5iq7dqiwjkr6d245xkfppwi7wqjdfr4x86kd";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        dependencies = [
          {
            name = "utf8-width";
            packageId = "utf8-width";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "http 0.2.12" = rec {
        crateName = "http";
        version = "0.2.12";
        edition = "2018";
        sha256 = "1w81s4bcbmcj9bjp7mllm8jlz6b31wzvirz8bgpzbqkpwmbvn730";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];

      };
      "http 1.1.0" = rec {
        crateName = "http";
        version = "1.1.0";
        edition = "2018";
        sha256 = "0n426lmcxas6h75c2cp25m933pswlrfjz10v91vc62vib2sdvf91";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.4.6";
        edition = "2018";
        sha256 = "1lmyjfk6bqk6k9gkn1dxq770sb78pqbqshga241hr5p995bb5skw";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];

      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.9.4";
        edition = "2018";
        sha256 = "1nc2s1pziq5ncl39xm7ybdhpnw5xsm505smqirr0py2v2550pk0g";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "httpdate" = rec {
        crateName = "httpdate";
        version = "1.0.3";
        edition = "2021";
        sha256 = "1aa9rd2sac0zhjqh24c9xvir96g188zldkx0hr6dnnlx5904cfyz";
        authors = [
          "Pyfisch <pyfisch@posteo.org>"
        ];

      };
      "humantime" = rec {
        crateName = "humantime";
        version = "2.1.0";
        edition = "2018";
        sha256 = "1r55pfkkf5v0ji1x6izrjwdq9v6sc7bv99xj6srywcar37xmnfls";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];

      };
      "hyper" = rec {
        crateName = "hyper";
        version = "0.14.30";
        edition = "2018";
        sha256 = "1jayxag79yln1nzyzx652kcy1bikgwssn6c4zrrp5v7s3pbdslm1";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2";
            optional = true;
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "socket2";
            packageId = "socket2";
            optional = true;
            features = [ "all" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "fs" "macros" "io-std" "io-util" "rt" "rt-multi-thread" "sync" "time" "test-util" ];
          }
        ];
        features = {
          "ffi" = [ "libc" ];
          "full" = [ "client" "http1" "http2" "server" "stream" "runtime" ];
          "h2" = [ "dep:h2" ];
          "http2" = [ "h2" ];
          "libc" = [ "dep:libc" ];
          "runtime" = [ "tcp" "tokio/rt" "tokio/time" ];
          "socket2" = [ "dep:socket2" ];
          "tcp" = [ "socket2" "tokio/net" "tokio/rt" "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "client" "default" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp" ];
      };
      "hyper-rustls" = rec {
        crateName = "hyper-rustls";
        version = "0.25.0";
        edition = "2021";
        sha256 = "0w5h46xzgy8i88p03vmcsmmkr638faq7910ccdzcp0w46gwpi71r";
        dependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            features = [ "client" ];
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "rustls";
            packageId = "rustls";
            usesDefaultFeatures = false;
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "full" ];
          }
          {
            name = "rustls";
            packageId = "rustls";
            usesDefaultFeatures = false;
            features = [ "tls12" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "macros" "net" "rt-multi-thread" ];
          }
        ];
        features = {
          "acceptor" = [ "hyper/server" "ring" "tokio-runtime" ];
          "default" = [ "native-tokio" "http1" "tls12" "logging" "acceptor" "ring" ];
          "http1" = [ "hyper/http1" ];
          "http2" = [ "hyper/http2" ];
          "log" = [ "dep:log" ];
          "logging" = [ "log" "tokio-rustls/logging" "rustls/logging" ];
          "native-tokio" = [ "tokio-runtime" "rustls-native-certs" ];
          "ring" = [ "rustls/ring" ];
          "rustls-native-certs" = [ "dep:rustls-native-certs" ];
          "tls12" = [ "tokio-rustls/tls12" "rustls/tls12" ];
          "tokio-runtime" = [ "hyper/runtime" ];
          "webpki-roots" = [ "dep:webpki-roots" ];
          "webpki-tokio" = [ "tokio-runtime" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "acceptor" "default" "http1" "http2" "log" "logging" "native-tokio" "ring" "rustls-native-certs" "tls12" "tokio-runtime" ];
      };
      "hyper-timeout" = rec {
        crateName = "hyper-timeout";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1c8k3g8k2yh1gxvsx9p7amkimgxhl9kafwpj7jyf8ywc5r45ifdv";
        authors = [
          "Herman J. Radtke III <herman@hermanradtke.com>"
        ];
        dependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "client" ];
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-io-timeout";
            packageId = "tokio-io-timeout";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "client" "http1" "tcp" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "io-util" "macros" ];
          }
        ];

      };
      "iana-time-zone" = rec {
        crateName = "iana-time-zone";
        version = "0.1.60";
        edition = "2018";
        sha256 = "0hdid5xz3jznm04lysjm3vi93h3c523w0hcc3xba47jl3ddbpzz7";
        authors = [
          "Andrew Straw <strawman@astraw.com>"
          "René Kijewski <rene.kijewski@fu-berlin.de>"
          "Ryan Lopopolo <rjl@hyperbo.la>"
        ];
        dependencies = [
          {
            name = "android_system_properties";
            packageId = "android_system_properties";
            target = { target, features }: ("android" == target."os" or null);
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
            target = { target, features }: (("macos" == target."os" or null) || ("ios" == target."os" or null));
          }
          {
            name = "iana-time-zone-haiku";
            packageId = "iana-time-zone-haiku";
            target = { target, features }: ("haiku" == target."os" or null);
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: ("wasm32" == target."arch" or null);
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: ("wasm32" == target."arch" or null);
          }
          {
            name = "windows-core";
            packageId = "windows-core";
            target = { target, features }: ("windows" == target."os" or null);
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "fallback" ];
      };
      "iana-time-zone-haiku" = rec {
        crateName = "iana-time-zone-haiku";
        version = "0.1.2";
        edition = "2018";
        sha256 = "17r6jmj31chn7xs9698r122mapq85mfnv98bb4pg6spm0si2f67k";
        authors = [
          "René Kijewski <crates.io@k6i.de>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "idna" = rec {
        crateName = "idna";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1xhjrcjqq0l5bpzvdgylvpkgk94panxgsirzhjnnqfdgc4a9nkb3";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
            usesDefaultFeatures = false;
            features = [ "hardcoded-data" ];
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "unicode-bidi/std" "unicode-normalization/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "image 0.24.9" = rec {
        crateName = "image";
        version = "0.24.9";
        edition = "2021";
        sha256 = "17gnr6ifnpzvhjf6dwbl9hki8x6bji5mwcqp0048x1jm5yfi742n";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "bytemuck";
            packageId = "bytemuck";
            features = [ "extern_crate_alloc" ];
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "color_quant";
            packageId = "color_quant";
          }
          {
            name = "exr";
            packageId = "exr";
            optional = true;
          }
          {
            name = "gif";
            packageId = "gif";
            optional = true;
          }
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            rename = "jpeg";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
          {
            name = "qoi";
            packageId = "qoi";
            optional = true;
          }
          {
            name = "tiff";
            packageId = "tiff";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            rename = "jpeg";
            usesDefaultFeatures = false;
            features = [ "platform_independent" ];
          }
        ];
        features = {
          "avif" = [ "avif-encoder" ];
          "avif-decoder" = [ "mp4parse" "dcv-color-primitives" "dav1d" ];
          "avif-encoder" = [ "ravif" "rgb" ];
          "dav1d" = [ "dep:dav1d" ];
          "dcv-color-primitives" = [ "dep:dcv-color-primitives" ];
          "dds" = [ "dxt" ];
          "default" = [ "gif" "jpeg" "ico" "png" "pnm" "tga" "tiff" "webp" "bmp" "hdr" "dxt" "dds" "farbfeld" "jpeg_rayon" "openexr" "qoi" ];
          "exr" = [ "dep:exr" ];
          "gif" = [ "dep:gif" ];
          "ico" = [ "bmp" "png" ];
          "jpeg" = [ "dep:jpeg" ];
          "jpeg_rayon" = [ "jpeg/rayon" ];
          "libwebp" = [ "dep:libwebp" ];
          "mp4parse" = [ "dep:mp4parse" ];
          "openexr" = [ "exr" ];
          "png" = [ "dep:png" ];
          "qoi" = [ "dep:qoi" ];
          "ravif" = [ "dep:ravif" ];
          "rayon" = [ "dep:rayon" ];
          "rgb" = [ "dep:rgb" ];
          "tiff" = [ "dep:tiff" ];
          "webp-encoder" = [ "libwebp" "webp" ];
        };
        resolvedDefaultFeatures = [ "bmp" "dds" "default" "dxt" "exr" "farbfeld" "gif" "hdr" "ico" "jpeg" "jpeg_rayon" "openexr" "png" "pnm" "qoi" "tga" "tiff" "webp" ];
      };
      "image 0.25.2" = rec {
        crateName = "image";
        version = "0.25.2";
        edition = "2021";
        sha256 = "041sjvahq6zz5zhjhixmid65x31dafpcs97r26rdvf2j4654qccr";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "bytemuck";
            packageId = "bytemuck";
            features = [ "extern_crate_alloc" ];
          }
          {
            name = "byteorder-lite";
            packageId = "byteorder-lite";
          }
          {
            name = "color_quant";
            packageId = "color_quant";
            optional = true;
          }
          {
            name = "exr";
            packageId = "exr";
            optional = true;
          }
          {
            name = "gif";
            packageId = "gif";
            optional = true;
          }
          {
            name = "image-webp";
            packageId = "image-webp";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "png";
            packageId = "png";
            optional = true;
          }
          {
            name = "qoi";
            packageId = "qoi";
            optional = true;
          }
          {
            name = "ravif";
            packageId = "ravif";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "rgb";
            packageId = "rgb";
            optional = true;
          }
          {
            name = "tiff";
            packageId = "tiff";
            optional = true;
          }
          {
            name = "zune-core";
            packageId = "zune-core";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "zune-jpeg";
            packageId = "zune-jpeg";
            optional = true;
          }
        ];
        features = {
          "avif" = [ "dep:ravif" "dep:rgb" ];
          "avif-native" = [ "dep:mp4parse" "dep:dcv-color-primitives" "dep:dav1d" ];
          "color_quant" = [ "dep:color_quant" ];
          "default" = [ "rayon" "default-formats" ];
          "default-formats" = [ "avif" "bmp" "dds" "exr" "ff" "gif" "hdr" "ico" "jpeg" "png" "pnm" "qoi" "tga" "tiff" "webp" ];
          "exr" = [ "dep:exr" ];
          "gif" = [ "dep:gif" "dep:color_quant" ];
          "ico" = [ "bmp" "png" ];
          "jpeg" = [ "dep:zune-core" "dep:zune-jpeg" ];
          "nasm" = [ "ravif?/asm" ];
          "png" = [ "dep:png" ];
          "qoi" = [ "dep:qoi" ];
          "rayon" = [ "dep:rayon" ];
          "tiff" = [ "dep:tiff" ];
          "webp" = [ "dep:image-webp" ];
        };
        resolvedDefaultFeatures = [ "avif" "bmp" "dds" "default" "default-formats" "exr" "ff" "gif" "hdr" "ico" "jpeg" "png" "pnm" "qoi" "rayon" "tga" "tiff" "webp" ];
      };
      "image-webp" = rec {
        crateName = "image-webp";
        version = "0.1.3";
        edition = "2021";
        sha256 = "0179iqgvh6ybbq0r5d3ms11kka8jihhpliydkksj1vz2ps6gp6pp";
        libName = "image_webp";
        dependencies = [
          {
            name = "byteorder-lite";
            packageId = "byteorder-lite";
          }
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];

      };
      "imgref" = rec {
        crateName = "imgref";
        version = "1.10.1";
        edition = "2021";
        sha256 = "09l18s80crfn7g8ank3v44g43xns4pg7f6hpaz3sfna1bwsxmzj4";
        authors = [
          "Kornel Lesiński <kornel@geekhood.net>"
        ];
        features = {
          "default" = [ "deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "deprecated" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "2.2.6";
        edition = "2021";
        sha256 = "09hgwi2ig0wyj5rjziia76zmhgfj95k0jb4ic3iiawm4vlavg3qn";
        dependencies = [
          {
            name = "equivalent";
            packageId = "equivalent";
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            usesDefaultFeatures = false;
            features = [ "raw" ];
          }
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "borsh" = [ "dep:borsh" ];
          "default" = [ "std" ];
          "quickcheck" = [ "dep:quickcheck" ];
          "rayon" = [ "dep:rayon" ];
          "rustc-rayon" = [ "dep:rustc-rayon" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "inout" = rec {
        crateName = "inout";
        version = "0.1.3";
        edition = "2021";
        sha256 = "1xf9gf09nc7y1a261xlfqsf66yn6mb81ahlzzyyd1934sr9hbhd0";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding";
            optional = true;
          }
          {
            name = "generic-array";
            packageId = "generic-array";
          }
        ];
        features = {
          "block-padding" = [ "dep:block-padding" ];
          "std" = [ "block-padding/std" ];
        };
        resolvedDefaultFeatures = [ "block-padding" "std" ];
      };
      "instant" = rec {
        crateName = "instant";
        version = "0.1.13";
        edition = "2018";
        sha256 = "08h27kzvb5jw74mh0ajv0nv9ggwvgqm8ynjsn2sa9jsks4cjh970";
        authors = [
          "sebcrozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
        ];
        features = {
          "js-sys" = [ "dep:js-sys" ];
          "stdweb" = [ "dep:stdweb" ];
          "wasm-bindgen" = [ "js-sys" "wasm-bindgen_rs" "web-sys" ];
          "wasm-bindgen_rs" = [ "dep:wasm-bindgen_rs" ];
          "web-sys" = [ "dep:web-sys" ];
        };
      };
      "interpolate_name" = rec {
        crateName = "interpolate_name";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0q7s5mrfkx4p56dl8q9zq71y1ysdj4shh6f28qf9gly35l21jj63";
        procMacro = true;
        authors = [
          "Luca Barbato <lu_zero@gentoo.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "fold" "full" ];
          }
        ];

      };
      "is_terminal_polyfill" = rec {
        crateName = "is_terminal_polyfill";
        version = "1.70.0";
        edition = "2021";
        sha256 = "0018q5cf3rifbnzfc1w1z1xcx9c6i7xlywp2n0fw4limq1vqaizq";
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "itertools" = rec {
        crateName = "itertools";
        version = "0.12.1";
        edition = "2018";
        sha256 = "0s95jbb3ndj1lvfxyq5wanc0fm0r6hg6q4ngb92qlfdxvci10ads";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "use_std" = [ "use_alloc" "either/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_alloc" "use_std" ];
      };
      "itoa" = rec {
        crateName = "itoa";
        version = "1.0.11";
        edition = "2018";
        sha256 = "0nv9cqjwzr3q58qz84dcz63ggc54yhf1yqar1m858m1kfd4g3wa9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "no-panic" = [ "dep:no-panic" ];
        };
      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.31";
        edition = "2021";
        sha256 = "0vnyfxr5gm03j3lpnd1zswnyvqa40kbssy08pz2m35salfm9kc6j";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "jpeg-decoder" = rec {
        crateName = "jpeg-decoder";
        version = "0.3.1";
        edition = "2021";
        sha256 = "1c1k53svpdyfhibkmm0ir5w0v3qmcmca8xr8vnnmizwf6pdagm7m";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
        ];
        features = {
          "default" = [ "rayon" ];
          "rayon" = [ "dep:rayon" ];
        };
        resolvedDefaultFeatures = [ "rayon" ];
      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.69";
        edition = "2018";
        sha256 = "0v99rz97asnzapb0jsc3jjhvxpfxr7h7qd97yqyrf9i7viimbh99";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];

      };
      "lazy_static" = rec {
        crateName = "lazy_static";
        version = "1.5.0";
        edition = "2015";
        sha256 = "1zk6dqqni0193xg6iijh7i3i44sryglwgvx20spdvwk3r6sbrlmv";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "spin";
            packageId = "spin";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "once" ];
          }
        ];
        features = {
          "spin" = [ "dep:spin" ];
          "spin_no_std" = [ "spin" ];
        };
        resolvedDefaultFeatures = [ "spin" "spin_no_std" ];
      };
      "lebe" = rec {
        crateName = "lebe";
        version = "0.5.2";
        edition = "2018";
        sha256 = "1j2l6chx19qpa5gqcw434j83gyskq3g2cnffrbl3842ymlmpq203";
        authors = [
          "johannesvollmer <johannes596@t-online.de>"
        ];

      };
      "libadwaita" = rec {
        crateName = "libadwaita";
        version = "0.6.0";
        edition = "2021";
        sha256 = "1nf5hxmk1bzjj8hxavwgz04kiv3hxb52qjh9f9gfrqdr9019kd4i";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "gtk4";
            packageId = "gtk4";
            rename = "gtk";
          }
          {
            name = "libadwaita-sys";
            packageId = "libadwaita-sys";
            rename = "ffi";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
          }
        ];
        features = {
          "gtk_v4_10" = [ "gtk_v4_8" ];
          "gtk_v4_12" = [ "gtk_v4_10" ];
          "gtk_v4_4" = [ "gtk_v4_2" ];
          "gtk_v4_6" = [ "gtk_v4_4" ];
          "gtk_v4_8" = [ "gtk_v4_6" ];
          "v1_1" = [ "ffi/v1_1" ];
          "v1_2" = [ "v1_1" "ffi/v1_2" ];
          "v1_3" = [ "v1_2" "ffi/v1_3" ];
          "v1_4" = [ "v1_3" "ffi/v1_4" ];
          "v1_5" = [ "v1_4" "ffi/v1_5" ];
        };
        resolvedDefaultFeatures = [ "v1_1" "v1_2" "v1_3" "v1_4" "v1_5" ];
      };
      "libadwaita-sys" = rec {
        crateName = "libadwaita-sys";
        version = "0.6.0";
        edition = "2021";
        links = "libadwaita-1";
        sha256 = "1a513qlanw6n8dksm1br20a7iz2x1ff5cgg9v5f2dq9bx7j4i9r3";
        libName = "libadwaita_sys";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
            rename = "gdk-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "gtk4-sys";
            packageId = "gtk4-sys";
            rename = "gtk-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v1_2" = [ "v1_1" ];
          "v1_3" = [ "v1_2" ];
          "v1_4" = [ "v1_3" ];
          "v1_5" = [ "v1_4" ];
        };
        resolvedDefaultFeatures = [ "v1_1" "v1_2" "v1_3" "v1_4" "v1_5" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.155";
        edition = "2015";
        sha256 = "0z44c53z54znna8n322k5iwg80arxxpdzjj5260pxxzc9a58icwp";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "rustc-std-workspace-core" = [ "dep:rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" ];
      };
      "libfuzzer-sys" = rec {
        crateName = "libfuzzer-sys";
        version = "0.4.7";
        edition = "2018";
        sha256 = "1xz70z8q85f80wdrc0m0flck73cqdhj5ajgd7ywg50pbaxazsv59";
        authors = [
          "The rust-fuzz Project Developers"
        ];
        dependencies = [
          {
            name = "arbitrary";
            packageId = "arbitrary";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
        ];
        features = {
          "arbitrary-derive" = [ "arbitrary/derive" ];
          "default" = [ "link_libfuzzer" ];
        };
        resolvedDefaultFeatures = [ "default" "link_libfuzzer" ];
      };
      "libm" = rec {
        crateName = "libm";
        version = "0.2.8";
        edition = "2018";
        sha256 = "0n4hk1rs8pzw8hdfmwn96c4568s93kfxqgcqswr7sajd2diaihjf";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        features = {
          "musl-reference-tests" = [ "rand" ];
          "rand" = [ "dep:rand" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "libsignal-core" = rec {
        crateName = "libsignal-core";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "num_enum";
            packageId = "num_enum";
          }
          {
            name = "uuid";
            packageId = "uuid";
          }
        ];

      };
      "libsignal-protocol" = rec {
        crateName = "libsignal-protocol";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "aes";
            packageId = "aes";
            features = [ "zeroize" ];
          }
          {
            name = "aes-gcm-siv";
            packageId = "aes-gcm-siv";
          }
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "ctr";
            packageId = "ctr";
            features = [ "zeroize" ];
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            features = [ "digest" ];
          }
          {
            name = "derive-where";
            packageId = "derive-where";
          }
          {
            name = "displaydoc";
            packageId = "displaydoc";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hkdf";
            packageId = "hkdf";
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "libsignal-core";
            packageId = "libsignal-core";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_enum";
            packageId = "num_enum";
          }
          {
            name = "pqcrypto-kyber";
            packageId = "pqcrypto-kyber";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "pqcrypto-traits";
            packageId = "pqcrypto-traits";
          }
          {
            name = "prost";
            packageId = "prost";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "signal-crypto";
            packageId = "signal-crypto";
          }
          {
            name = "subtle";
            packageId = "subtle";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "uuid";
            packageId = "uuid";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
            features = [ "static_secrets" ];
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build";
          }
        ];
        features = {
          "mlkem1024" = [ "pqcrypto-ml-kem" ];
          "pqcrypto-ml-kem" = [ "dep:pqcrypto-ml-kem" ];
        };
      };
      "libsignal-service" = rec {
        crateName = "libsignal-service";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/whisperfish/libsignal-service-rs";
          rev = "1b591540b908112816be131d6baa6eafba2129cb";
          sha256 = "18467sdwpkigahb5xz55dfnd8zmjy47v6aj0q9a5pjazm2kjmi2h";
        };
        authors = [
          "Ruben De Smet <ruben.de.smet@rubdos.be>"
          "Gabriel Féron <g@leirbag.net>"
          "Michael Bryan <michaelfbryan@gmail.com>"
          "Shady Khalifa <shekohex@gmail.com>"
        ];
        dependencies = [
          {
            name = "aes";
            packageId = "aes";
          }
          {
            name = "aes-gcm";
            packageId = "aes-gcm";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "base64";
            packageId = "base64 0.21.7";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "cbc";
            packageId = "cbc";
          }
          {
            name = "chrono";
            packageId = "chrono";
            usesDefaultFeatures = false;
            features = [ "serde" "clock" ];
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "derivative";
            packageId = "derivative";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hkdf";
            packageId = "hkdf";
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
          {
            name = "libsignal-protocol";
            packageId = "libsignal-protocol";
          }
          {
            name = "phonenumber";
            packageId = "phonenumber";
          }
          {
            name = "prost";
            packageId = "prost";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tracing";
            packageId = "tracing";
            features = [ "log" ];
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures";
          }
          {
            name = "url";
            packageId = "url";
            features = [ "serde" ];
          }
          {
            name = "uuid";
            packageId = "uuid";
            features = [ "serde" ];
          }
          {
            name = "zkgroup";
            packageId = "zkgroup";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build";
          }
        ];
        features = {
        };
      };
      "libsignal-service-hyper" = rec {
        crateName = "libsignal-service-hyper";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/whisperfish/libsignal-service-rs";
          rev = "1b591540b908112816be131d6baa6eafba2129cb";
          sha256 = "18467sdwpkigahb5xz55dfnd8zmjy47v6aj0q9a5pjazm2kjmi2h";
        };
        authors = [
          "Gabriel Féron <g@leirbag.net>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "async-tungstenite";
            packageId = "async-tungstenite";
            features = [ "tokio-rustls-native-certs" ];
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "headers";
            packageId = "headers";
          }
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "client" "stream" ];
          }
          {
            name = "hyper-rustls";
            packageId = "hyper-rustls";
            features = [ "http1" "http2" ];
          }
          {
            name = "hyper-timeout";
            packageId = "hyper-timeout";
          }
          {
            name = "libsignal-service";
            packageId = "libsignal-service";
          }
          {
            name = "mpart-async";
            packageId = "mpart-async";
          }
          {
            name = "rustls-pemfile";
            packageId = "rustls-pemfile";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "macros" ];
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures";
          }
          {
            name = "url";
            packageId = "url";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" ];
          }
        ];
        features = {
          "unsend-futures" = [ "libsignal-service/unsend-futures" ];
        };
      };
      "libspelling" = rec {
        crateName = "libspelling";
        version = "0.2.0";
        edition = "2021";
        sha256 = "0bdmc13l3z9qs06ky6nmg0lgjqj04j7a76am3a2qf3dm5wrrkn1q";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "gtk4";
            packageId = "gtk4";
            rename = "gtk";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libspelling-sys";
            packageId = "libspelling-sys";
            rename = "ffi";
          }
          {
            name = "sourceview5";
            packageId = "sourceview5";
            rename = "gtk_source";
          }
        ];

      };
      "libspelling-sys" = rec {
        crateName = "libspelling-sys";
        version = "0.2.0";
        edition = "2021";
        links = "libspelling";
        sha256 = "190va804ma2nar1b74x4smha9namcbra8c7gc5npsmv39qlfvm3n";
        libName = "libspelling_sys";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "gtk4-sys";
            packageId = "gtk4-sys";
            rename = "gtk-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "sourceview5-sys";
            packageId = "sourceview5-sys";
            rename = "gtk_source";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];

      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.6";
        edition = "2015";
        sha256 = "03vpgw7x507g524nx5i1jf5dl8k3kv0fzg8v3ip6qqwbpkqww5q7";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize" = [ "dep:heapsize" ];
          "heapsize_impl" = [ "heapsize" ];
          "serde" = [ "dep:serde" ];
          "serde_impl" = [ "serde" ];
        };
      };
      "linux-raw-sys" = rec {
        crateName = "linux-raw-sys";
        version = "0.4.14";
        edition = "2021";
        sha256 = "12gsjgbhhjwywpqcrizv80vrp7p7grsz5laqq773i33wphjsxcvq";
        authors = [
          "Dan Gohman <dev@sunfishcode.online>"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "std" "general" "errno" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "no_std" ];
        };
        resolvedDefaultFeatures = [ "elf" "errno" "general" "if_ether" "ioctl" "net" "netlink" "no_std" "prctl" "xdp" ];
      };
      "locale_config" = rec {
        crateName = "locale_config";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0d399alr1i7h7yji4vydbdbzd8hp0xaykr7h4rn3yj7l2rdw7lh8";
        authors = [
          "Jan Hudec <bulb@ucw.cz>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "objc";
            packageId = "objc";
            target = { target, features }: ("macos" == target."os" or null);
          }
          {
            name = "objc-foundation";
            packageId = "objc-foundation";
            target = { target, features }: ("macos" == target."os" or null);
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "winapi";
            packageId = "winapi";
            target = { target, features }: (target."windows" or false);
            features = [ "winnls" ];
          }
        ];

      };
      "lock_api" = rec {
        crateName = "lock_api";
        version = "0.4.12";
        edition = "2021";
        sha256 = "05qvxa6g27yyva25a5ghsg85apdxkvr77yhkyhapj6r8vnf8pbq7";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "atomic_usize" ];
          "owning_ref" = [ "dep:owning_ref" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "atomic_usize" "default" ];
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.22";
        edition = "2021";
        sha256 = "093vs0wkm1rgyykk7fjbqp2lwizbixac1w52gv109p5r4jh0p9x7";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "kv_serde" = [ "kv_std" "value-bag/serde" "serde" ];
          "kv_std" = [ "std" "kv" "value-bag/error" ];
          "kv_sval" = [ "kv" "value-bag/sval" "sval" "sval_ref" ];
          "kv_unstable" = [ "kv" "value-bag" ];
          "kv_unstable_serde" = [ "kv_serde" "kv_unstable_std" ];
          "kv_unstable_std" = [ "kv_std" "kv_unstable" ];
          "kv_unstable_sval" = [ "kv_sval" "kv_unstable" ];
          "serde" = [ "dep:serde" ];
          "sval" = [ "dep:sval" ];
          "sval_ref" = [ "dep:sval_ref" ];
          "value-bag" = [ "dep:value-bag" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "loop9" = rec {
        crateName = "loop9";
        version = "0.1.5";
        edition = "2021";
        sha256 = "0qphc1c0cbbx43pwm6isnwzwbg6nsxjh7jah04n1sg5h4p0qgbhg";
        authors = [
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "imgref";
            packageId = "imgref";
          }
        ];

      };
      "lru-cache" = rec {
        crateName = "lru-cache";
        version = "0.1.2";
        edition = "2015";
        sha256 = "071viv6g2p3akwqmfb3c8vsycs5n7kr17b70l7la071jv0d4zqii";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];
        features = {
          "heapsize" = [ "dep:heapsize" ];
          "heapsize_impl" = [ "heapsize" "linked-hash-map/heapsize_impl" ];
        };
      };
      "malloc_buf" = rec {
        crateName = "malloc_buf";
        version = "0.0.6";
        edition = "2015";
        sha256 = "1jqr77j89pwszv51fmnknzvd53i1nkmcr8rjrvcxhm4dx1zr1fv2";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "maybe-rayon" = rec {
        crateName = "maybe-rayon";
        version = "0.1.1";
        edition = "2021";
        sha256 = "06cmvhj4n36459g327ng5dnj8d58qs472pv5ahlhm7ynxl6g78cf";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
        ];
        features = {
          "default" = [ "threads" ];
          "rayon" = [ "dep:rayon" ];
          "threads" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "rayon" "threads" ];
      };
      "md-5" = rec {
        crateName = "md-5";
        version = "0.10.6";
        edition = "2018";
        sha256 = "1kvq5rnpm4fzwmyv5nmnxygdhhb2369888a06gdc9pxyrzh7x7nq";
        libName = "md5";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "digest";
            packageId = "digest";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "md5-asm" ];
          "default" = [ "std" ];
          "md5-asm" = [ "dep:md5-asm" ];
          "oid" = [ "digest/oid" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.7.4";
        edition = "2021";
        sha256 = "18z32bhxrax0fnjikv475z7ii718hq457qwmaryixfxsl2qrmjkq";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "std" ];
          "logging" = [ "dep:log" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
          "std" = [ "alloc" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.9.1";
        edition = "2015";
        sha256 = "12i17wh9a9plx869g7j4whf62xw68k5zd4k0k5nh6ys5mszid028";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "mime" = rec {
        crateName = "mime";
        version = "0.3.17";
        edition = "2015";
        sha256 = "16hkibgvb9klh0w0jk5crr5xv90l3wlf77ggymzjmvl1818vnxv8";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "mime_guess" = rec {
        crateName = "mime_guess";
        version = "2.0.5";
        edition = "2015";
        sha256 = "03jmg3yx6j39mg0kayf7w4a886dl3j15y8zs119zw01ccy74zi7p";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = [
          {
            name = "mime";
            packageId = "mime";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        buildDependencies = [
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];
        features = {
          "default" = [ "rev-mappings" ];
        };
        resolvedDefaultFeatures = [ "default" "rev-mappings" ];
      };
      "minimal-lexical" = rec {
        crateName = "minimal-lexical";
        version = "0.2.1";
        edition = "2018";
        sha256 = "16ppc5g84aijpri4jzv14rvcnslvlpphbszc7zzp6vfkddf4qdb8";
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.7.4";
        edition = "2018";
        sha256 = "024wv14aa75cvik7005s5y2nfc8zfidddbd7g55g7sjgnzfl18mq";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler";
            packageId = "adler";
            usesDefaultFeatures = false;
          }
          {
            name = "simd-adler32";
            packageId = "simd-adler32";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "dep:alloc" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "with-alloc" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "adler/rustc-dep-of-std" ];
          "simd" = [ "simd-adler32" ];
          "simd-adler32" = [ "dep:simd-adler32" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "simd-adler32" "with-alloc" ];
      };
      "mio" = rec {
        crateName = "mio";
        version = "0.8.11";
        edition = "2018";
        sha256 = "034byyl0ardml5yliy1hmvx8arkmn9rv479pid794sm07ia519m4";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ("wasi" == target."os" or null);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi";
            target = { target, features }: ("wasi" == target."os" or null);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.48.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_Networking_WinSock" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_WindowsProgramming" ];
          }
        ];
        features = {
          "default" = [ "log" ];
          "log" = [ "dep:log" ];
          "os-ext" = [ "os-poll" "windows-sys/Win32_System_Pipes" "windows-sys/Win32_Security" ];
        };
        resolvedDefaultFeatures = [ "net" "os-ext" "os-poll" ];
      };
      "mpart-async" = rec {
        crateName = "mpart-async";
        version = "0.6.1";
        edition = "2021";
        sha256 = "0r0qb71nmywfywbyra9fhyxjlbsqcxdcx9bvpl0j8pflb4isp9ky";
        authors = [
          "cetra3 <cetra3@hotmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http 0.2.12";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "mime_guess";
            packageId = "mime_guess";
            optional = true;
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "fs" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util 0.6.10";
            optional = true;
            features = [ "codec" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" "macros" ];
          }
        ];
        features = {
          "default" = [ "filestream" ];
          "filestream" = [ "tokio" "tokio-util" "mime_guess" ];
          "mime_guess" = [ "dep:mime_guess" ];
          "tokio" = [ "dep:tokio" ];
          "tokio-util" = [ "dep:tokio-util" ];
        };
        resolvedDefaultFeatures = [ "default" "filestream" "mime_guess" "tokio" "tokio-util" ];
      };
      "multimap" = rec {
        crateName = "multimap";
        version = "0.10.0";
        edition = "2015";
        sha256 = "00vs2frqdhrr8iqx4y3fbq73ax5l12837fvbjrpi729d85alrz6y";
        authors = [
          "Håvar Nøvik <havar.novik@gmail.com>"
        ];
        features = {
          "default" = [ "serde_impl" ];
          "serde" = [ "dep:serde" ];
          "serde_impl" = [ "serde" ];
        };
      };
      "new_debug_unreachable" = rec {
        crateName = "new_debug_unreachable";
        version = "1.0.6";
        edition = "2021";
        sha256 = "11phpf1mjxq6khk91yzcbd3ympm78m3ivl7xg6lg2c0lf66fy3k5";
        libName = "debug_unreachable";
        authors = [
          "Matt Brubeck <mbrubeck@limpet.net>"
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];

      };
      "nix" = rec {
        crateName = "nix";
        version = "0.29.0";
        edition = "2021";
        sha256 = "0ikvn7s9r2lrfdm3mx1h7nbfjvcc6s9vxdzw7j5xfkd2qdnp9qki";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 2.6.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "memoffset";
            packageId = "memoffset";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "cfg_aliases";
            packageId = "cfg_aliases";
          }
        ];
        features = {
          "aio" = [ "pin-utils" ];
          "dir" = [ "fs" ];
          "memoffset" = [ "dep:memoffset" ];
          "mount" = [ "uio" ];
          "mqueue" = [ "fs" ];
          "net" = [ "socket" ];
          "pin-utils" = [ "dep:pin-utils" ];
          "ptrace" = [ "process" ];
          "sched" = [ "process" ];
          "signal" = [ "process" ];
          "socket" = [ "memoffset" ];
          "ucontext" = [ "signal" ];
          "user" = [ "feature" ];
          "zerocopy" = [ "fs" "uio" ];
        };
        resolvedDefaultFeatures = [ "feature" "memoffset" "socket" "uio" "user" ];
      };
      "nom" = rec {
        crateName = "nom";
        version = "7.1.3";
        edition = "2018";
        sha256 = "0jha9901wxam390jcf5pfa0qqfrgh8li787jx2ip0yk5b8y9hwyj";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "minimal-lexical";
            packageId = "minimal-lexical";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "memchr/std" "minimal-lexical/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "noop_proc_macro" = rec {
        crateName = "noop_proc_macro";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1j2v1c6ric4w9v12h34jghzmngcwmn0hll1ywly4h6lcm4rbnxh6";
        procMacro = true;
        authors = [
          "Luca Barbato <lu_zero@gentoo.org>"
        ];

      };
      "num" = rec {
        crateName = "num";
        version = "0.4.3";
        edition = "2021";
        sha256 = "08yb2fc1psig7pkzaplm495yp7c30m4pykpkwmi5bxrgid705g9m";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "alloc" = [ "dep:num-bigint" "num-rational/num-bigint" ];
          "default" = [ "std" ];
          "libm" = [ "num-complex/libm" "num-traits/libm" ];
          "num-bigint" = [ "dep:num-bigint" ];
          "rand" = [ "num-bigint/rand" "num-complex/rand" ];
          "serde" = [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
          "std" = [ "dep:num-bigint" "num-bigint/std" "num-complex/std" "num-integer/std" "num-iter/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "std" ];
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.4.6";
        edition = "2021";
        sha256 = "1f903zd33i6hkjpsgwhqwi2wffnvkxbn6rv4mkgcjcqi7xr4zr55";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "default" = [ "std" ];
          "quickcheck" = [ "dep:quickcheck" ];
          "rand" = [ "dep:rand" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-bigint-dig" = rec {
        crateName = "num-bigint-dig";
        version = "0.8.4";
        edition = "2021";
        sha256 = "0lb12df24wgxxbspz4gw1sf1kdqwvpdcpwq4fdlwg4gj41c1k16w";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            usesDefaultFeatures = false;
            features = [ "spin_no_std" ];
          }
          {
            name = "libm";
            packageId = "libm";
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "rand";
            packageId = "rand";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand";
            features = [ "small_rng" ];
          }
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "default" = [ "std" "u64_digit" ];
          "fuzz" = [ "arbitrary" "smallvec/arbitrary" ];
          "prime" = [ "rand/std_rng" ];
          "rand" = [ "dep:rand" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "num-integer/std" "num-traits/std" "smallvec/write" "rand/std" "serde/std" ];
          "zeroize" = [ "dep:zeroize" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "serde" "std" "u64_digit" "zeroize" ];
      };
      "num-complex" = rec {
        crateName = "num-complex";
        version = "0.4.6";
        edition = "2021";
        sha256 = "15cla16mnw12xzf5g041nxbjjm9m85hdgadd5dl5d0b30w9qmy3k";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "bytecheck" = [ "dep:bytecheck" ];
          "bytemuck" = [ "dep:bytemuck" ];
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "rand" = [ "dep:rand" ];
          "rkyv" = [ "dep:rkyv" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-derive" = rec {
        crateName = "num-derive";
        version = "0.4.2";
        edition = "2021";
        sha256 = "00p2am9ma8jgd2v6xpsz621wc7wbn1yqi71g15gc3h67m7qmafgd";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
          }
        ];

      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.46";
        edition = "2018";
        sha256 = "13w5g54a9184cqlbsq80rnxw4jj4s0d8wv75jsq5r2lms8gncsbr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "i128" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.45";
        edition = "2018";
        sha256 = "1gzm7vc5g9qsjjl3bqk9rz1h6raxhygbrcpbfl04swlh0i506a8l";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "i128" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.4.2";
        edition = "2021";
        sha256 = "093qndy02817vpgcqjnj139im3jl7vkq4h68kykdqqh577d18ggq";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "num-bigint" "std" ];
          "num-bigint" = [ "dep:num-bigint" ];
          "num-bigint-std" = [ "num-bigint/std" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "num-bigint?/std" "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "num-bigint-std" "std" ];
      };
      "num-traits" = rec {
        crateName = "num-traits";
        version = "0.2.19";
        edition = "2021";
        sha256 = "0h984rhdkkqd4ny9cif7y2azl3xdfb7768hb9irhpsch4q3gq787";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "dep:libm" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.16.0";
        edition = "2015";
        sha256 = "0hra6ihpnh06dvfvz9ipscys0xfqa9ca9hzp384d5m02ssvgqqa1";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi 0.3.9";
            target = { target, features }: ("hermit" == target."os" or null);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."windows" or false));
          }
        ];

      };
      "num_enum" = rec {
        crateName = "num_enum";
        version = "0.6.1";
        edition = "2021";
        sha256 = "18bna04g6zq978z2b4ygz0f8pbva37id4xnpgwh8l41w1m1mn0bs";
        authors = [
          "Daniel Wagner-Hall <dawagner@gmail.com>"
          "Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com>"
          "Vincent Esche <regexident@gmail.com>"
        ];
        dependencies = [
          {
            name = "num_enum_derive";
            packageId = "num_enum_derive";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "complex-expressions" = [ "num_enum_derive/complex-expressions" ];
          "default" = [ "std" ];
          "std" = [ "num_enum_derive/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num_enum_derive" = rec {
        crateName = "num_enum_derive";
        version = "0.6.1";
        edition = "2021";
        sha256 = "19k57c0wg56vzzj2w77jsi8nls1b8xh8pvpzjnrgf8d9cnvpsrln";
        procMacro = true;
        authors = [
          "Daniel Wagner-Hall <dawagner@gmail.com>"
          "Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com>"
          "Vincent Esche <regexident@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.3.1";
            optional = true;
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "parsing" ];
          }
        ];
        features = {
          "complex-expressions" = [ "syn/full" ];
          "default" = [ "std" ];
          "proc-macro-crate" = [ "dep:proc-macro-crate" ];
          "std" = [ "proc-macro-crate" ];
        };
        resolvedDefaultFeatures = [ "proc-macro-crate" "std" ];
      };
      "objc" = rec {
        crateName = "objc";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1cbpf6kz8a244nn1qzl3xyhmp05gsg4n313c9m3567625d3innwi";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "malloc_buf";
            packageId = "malloc_buf";
          }
        ];
        features = {
          "exception" = [ "objc_exception" ];
          "objc_exception" = [ "dep:objc_exception" ];
        };
      };
      "objc-foundation" = rec {
        crateName = "objc-foundation";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1y9bwb3m5fdq7w7i4bnds067dhm4qxv4m1mbg9y61j9nkrjipp8s";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "block";
            packageId = "block";
          }
          {
            name = "objc";
            packageId = "objc";
          }
          {
            name = "objc_id";
            packageId = "objc_id";
          }
        ];

      };
      "objc_id" = rec {
        crateName = "objc_id";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0fq71hnp2sdblaighjc82yrac3adfmqzhpr11irhvdfp9gdlsbf9";
        authors = [
          "Steven Sheldon"
        ];
        dependencies = [
          {
            name = "objc";
            packageId = "objc";
          }
        ];

      };
      "object" = rec {
        crateName = "object";
        version = "0.36.1";
        edition = "2018";
        sha256 = "1kng5iqp4az48kn2vfd1irv12yp0yvj25agizlcgrpan3mnq86q8";
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "all" = [ "read" "write" "build" "std" "compression" "wasm" ];
          "alloc" = [ "dep:alloc" ];
          "build" = [ "build_core" "write_std" "elf" ];
          "build_core" = [ "read_core" "write_core" ];
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "compression" = [ "dep:flate2" "dep:ruzstd" "std" ];
          "core" = [ "dep:core" ];
          "default" = [ "read" "compression" ];
          "doc" = [ "read_core" "write_std" "build_core" "std" "compression" "archive" "coff" "elf" "macho" "pe" "wasm" "xcoff" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "archive" "coff" "elf" "macho" "pe" "xcoff" "unaligned" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "alloc" "memchr/rustc-dep-of-std" ];
          "std" = [ "memchr/std" ];
          "unstable-all" = [ "all" "unstable" ];
          "wasm" = [ "dep:wasmparser" ];
          "write" = [ "write_std" "coff" "elf" "macho" "pe" "xcoff" ];
          "write_core" = [ "dep:crc32fast" "dep:indexmap" "dep:hashbrown" ];
          "write_std" = [ "write_core" "std" "indexmap?/std" "crc32fast?/std" ];
        };
        resolvedDefaultFeatures = [ "archive" "coff" "elf" "macho" "pe" "read_core" "unaligned" "xcoff" ];
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.19.0";
        edition = "2021";
        sha256 = "14kvw7px5z96dk4dwdm1r9cqhhy2cyj1l5n5b29mynbb8yr15nrz";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        features = {
          "alloc" = [ "race" ];
          "atomic-polyfill" = [ "critical-section" ];
          "critical-section" = [ "dep:critical-section" "portable-atomic" ];
          "default" = [ "std" ];
          "parking_lot" = [ "dep:parking_lot_core" ];
          "portable-atomic" = [ "dep:portable-atomic" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "race" "std" ];
      };
      "oncemutex" = rec {
        crateName = "oncemutex";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1qmzibgx46k3xfh0mbljp46cfy9vx62frrx5x1ph18zlcvj1vla4";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];

      };
      "oo7" = rec {
        crateName = "oo7";
        version = "0.3.3";
        edition = "2021";
        sha256 = "091a6g9m1jjf56qsaana68ja23x3n757v81cw9609zgvj93cxilg";
        authors = [
          "Bilal Elmoussaoui"
          "Sophie Herold"
          "Maximiliano Sandoval"
        ];
        dependencies = [
          {
            name = "aes";
            packageId = "aes";
            optional = true;
            features = [ "zeroize" ];
          }
          {
            name = "cbc";
            packageId = "cbc";
            optional = true;
            features = [ "zeroize" ];
          }
          {
            name = "cipher";
            packageId = "cipher";
            optional = true;
            features = [ "rand_core" "zeroize" ];
          }
          {
            name = "digest";
            packageId = "digest";
            optional = true;
          }
          {
            name = "endi";
            packageId = "endi";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hkdf";
            packageId = "hkdf";
            optional = true;
          }
          {
            name = "hmac";
            packageId = "hmac";
            optional = true;
          }
          {
            name = "md-5";
            packageId = "md-5";
            optional = true;
          }
          {
            name = "num";
            packageId = "num";
          }
          {
            name = "num-bigint-dig";
            packageId = "num-bigint-dig";
            features = [ "zeroize" ];
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2";
            optional = true;
          }
          {
            name = "subtle";
            packageId = "subtle";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "sync" "fs" "io-util" ];
          }
          {
            name = "zbus";
            packageId = "zbus";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            features = [ "zeroize_derive" ];
          }
          {
            name = "zvariant";
            packageId = "zvariant";
            usesDefaultFeatures = false;
            features = [ "gvariant" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            features = [ "macros" "rt-multi-thread" ];
          }
        ];
        features = {
          "async-std" = [ "zbus/async-io" "dep:async-fs" "dep:async-io" "dep:async-lock" "dep:async-net" "dep:blocking" "dep:futures-lite" ];
          "default" = [ "local_tests" "async-std" "native_crypto" ];
          "native_crypto" = [ "dep:aes" "dep:cbc" "dep:cipher" "dep:digest" "dep:hkdf" "dep:hmac" "dep:md-5" "dep:pbkdf2" "dep:sha2" "dep:subtle" ];
          "openssl_crypto" = [ "dep:openssl" ];
          "tokio" = [ "zbus/tokio" "dep:tokio" ];
          "tracing" = [ "dep:tracing" ];
        };
        resolvedDefaultFeatures = [ "native_crypto" "tokio" ];
      };
      "opaque-debug" = rec {
        crateName = "opaque-debug";
        version = "0.3.1";
        edition = "2018";
        sha256 = "10b3w0kydz5jf1ydyli5nv10gdfp97xh79bgz327d273bs46b3f0";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1kq18qm48rvkwgcggfkqq6pm948190czqc94d6bm2sir5hq1l0gz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "ordered-stream" = rec {
        crateName = "ordered-stream";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0l0xxp697q7wiix1gnfn66xsss7fdhfivl2k7bvpjs4i3lgb18ls";
        authors = [
          "Daniel De Graaf <code@danieldg.net>"
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
        ];

      };
      "pango" = rec {
        crateName = "pango";
        version = "0.19.8";
        edition = "2021";
        sha256 = "1kffxkk7730csly86fkgja50k1184zj9lz49sv7qb0059233439z";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
            rename = "ffi";
          }
        ];
        features = {
          "v1_42" = [ "ffi/v1_42" ];
          "v1_44" = [ "v1_42" "ffi/v1_44" ];
          "v1_46" = [ "v1_44" "ffi/v1_46" ];
          "v1_48" = [ "v1_46" "ffi/v1_48" ];
          "v1_50" = [ "v1_48" "ffi/v1_50" ];
          "v1_52" = [ "v1_50" "ffi/v1_52" ];
        };
        resolvedDefaultFeatures = [ "v1_42" "v1_44" "v1_46" "v1_48" "v1_50" ];
      };
      "pango-sys" = rec {
        crateName = "pango-sys";
        version = "0.19.8";
        edition = "2021";
        sha256 = "182bcd6255v5yvnskbhxnb6kwak240z7sn54si2b5h46l17xl0zz";
        libName = "pango_sys";
        authors = [
          "The gtk-rs Project Developers"
        ];
        dependencies = [
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v1_44" = [ "v1_42" ];
          "v1_46" = [ "v1_44" ];
          "v1_48" = [ "v1_46" ];
          "v1_50" = [ "v1_48" ];
          "v1_52" = [ "v1_50" ];
        };
        resolvedDefaultFeatures = [ "v1_42" "v1_44" "v1_46" "v1_48" "v1_50" ];
      };
      "parking" = rec {
        crateName = "parking";
        version = "2.2.0";
        edition = "2018";
        sha256 = "1blwbkq6im1hfxp5wlbr475mw98rsyc0bbr2d5n16m38z253p0dv";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "The Rust Project Developers"
        ];
        features = {
          "loom" = [ "dep:loom" ];
        };
      };
      "parking_lot" = rec {
        crateName = "parking_lot";
        version = "0.11.2";
        edition = "2018";
        sha256 = "16gzf41bxmm10x82bla8d6wfppy9ym3fxsmdjyvn61m66s0bf5vx";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core";
          }
        ];
        features = {
          "arc_lock" = [ "lock_api/arc_lock" ];
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
          "stdweb" = [ "instant/stdweb" ];
          "wasm-bindgen" = [ "instant/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core" = rec {
        crateName = "parking_lot_core";
        version = "0.8.6";
        edition = "2018";
        sha256 = "1p2nfcbr0b9lm9rglgm28k6mwyjwgm4knipsmqbgqaxdy3kcz8k0";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: ("redox" == target."os" or null);
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "backtrace" = [ "dep:backtrace" ];
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
          "petgraph" = [ "dep:petgraph" ];
          "thread-id" = [ "dep:thread-id" ];
        };
      };
      "partial-default" = rec {
        crateName = "partial-default";
        version = "0.1.0";
        edition = "2021";
        sha256 = "0jy1jb86gi6x16xc3bgpdrv9hjd5m0lrj4idashb6vzv3z1c6k8j";
        dependencies = [
          {
            name = "partial-default-derive";
            packageId = "partial-default-derive";
            optional = true;
          }
        ];
        features = {
          "derive" = [ "dep:partial-default-derive" ];
        };
        resolvedDefaultFeatures = [ "derive" ];
      };
      "partial-default-derive" = rec {
        crateName = "partial-default-derive";
        version = "0.1.0";
        edition = "2021";
        sha256 = "03g7mk1281i53h4v5s86l616vz9z23qpsjwf84nj1jqqg9yi4nbl";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
          }
        ];

      };
      "paste" = rec {
        crateName = "paste";
        version = "1.0.15";
        edition = "2018";
        sha256 = "02pxffpdqkapy292harq6asfjvadgp1s005fip9ljfsn9fvxgh2p";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "pbkdf2" = rec {
        crateName = "pbkdf2";
        version = "0.12.2";
        edition = "2021";
        sha256 = "1wms79jh4flpy1zi8xdp4h8ccxv4d85adc6zjagknvppc5vnmvgq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "mac" ];
          }
          {
            name = "hmac";
            packageId = "hmac";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "hmac";
            packageId = "hmac";
          }
        ];
        features = {
          "default" = [ "hmac" ];
          "hmac" = [ "dep:hmac" ];
          "parallel" = [ "rayon" "std" ];
          "password-hash" = [ "dep:password-hash" ];
          "rayon" = [ "dep:rayon" ];
          "sha1" = [ "dep:sha1" ];
          "sha2" = [ "dep:sha2" ];
          "simple" = [ "hmac" "password-hash" "sha2" ];
          "std" = [ "password-hash/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hmac" ];
      };
      "percent-encoding" = rec {
        crateName = "percent-encoding";
        version = "2.3.1";
        edition = "2018";
        sha256 = "0gi8wgx0dcy8rnv1kywdv98lwcx67hz0a0zwpib5v2i08r88y573";
        authors = [
          "The rust-url developers"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "petgraph" = rec {
        crateName = "petgraph";
        version = "0.6.5";
        edition = "2018";
        sha256 = "1ns7mbxidnn2pqahbbjccxkrqkrll2i5rbxx43ns6rh6fn3cridl";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" "rayon" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "quickcheck" = [ "dep:quickcheck" ];
          "rayon" = [ "dep:rayon" "indexmap/rayon" ];
          "serde" = [ "dep:serde" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "serde_derive" = [ "dep:serde_derive" ];
          "unstable" = [ "generate" ];
        };
      };
      "phonenumber" = rec {
        crateName = "phonenumber";
        version = "0.3.6+8.13.36";
        edition = "2021";
        sha256 = "0ak9iwx0f5gx2hxycp87wwq4scinlh7fgcf8gplwb33vnlvn4x8i";
        authors = [
          "Gabriel Féron <g@leirbag.net>"
          "Ruben De Smet <ruben.de.smet@rubdos.be>"
          "meh. <meh@1aim.com>"
        ];
        dependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "nom";
            packageId = "nom";
          }
          {
            name = "quick-xml";
            packageId = "quick-xml";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "regex-cache";
            packageId = "regex-cache";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "strum";
            packageId = "strum";
            features = [ "derive" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        buildDependencies = [
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "quick-xml";
            packageId = "quick-xml";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "pin-project" = rec {
        crateName = "pin-project";
        version = "1.1.5";
        edition = "2021";
        sha256 = "1cxl146x0q7lawp0m1826wsgj8mmmfs6ja8q7m6f7ff5j6vl7gxn";
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal";
          }
        ];

      };
      "pin-project-internal" = rec {
        crateName = "pin-project-internal";
        version = "1.1.5";
        edition = "2021";
        sha256 = "0r9r4ivwiyqf45sv6b30l1dx282lxaax2f6gl84jwa3q590s8f1g";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-lite" = rec {
        crateName = "pin-project-lite";
        version = "0.2.14";
        edition = "2018";
        sha256 = "00nx3f04agwjlsmd3mc5rx5haibj2v8q9b52b0kwn63wcv4nz9mx";

      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0";
        edition = "2018";
        sha256 = "117ir7vslsl2z1a7qzhws4pd01cg2d3338c47swjyvqv2n60v1wb";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];

      };
      "piper" = rec {
        crateName = "piper";
        version = "0.2.3";
        edition = "2018";
        sha256 = "14a3kgpj4lpsa09z9a4dwk1p9nf793bh7mcg7q6hfvw7r5s5q7df";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "atomic-waker";
            packageId = "atomic-waker";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "futures-io" = [ "dep:futures-io" ];
          "portable-atomic" = [ "atomic-waker/portable-atomic" "portable_atomic_crate" "portable-atomic-util" ];
          "portable-atomic-util" = [ "dep:portable-atomic-util" ];
          "portable_atomic_crate" = [ "dep:portable_atomic_crate" ];
          "std" = [ "fastrand/std" "futures-io" ];
        };
        resolvedDefaultFeatures = [ "default" "futures-io" "std" ];
      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.30";
        edition = "2015";
        sha256 = "1v07557dj1sa0aly9c90wsygc0i8xv5vnmyv0g94lpkvj8qb4cfj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "png" = rec {
        crateName = "png";
        version = "0.17.13";
        edition = "2018";
        sha256 = "1qdmajjzkdbmk5zk7qb5pc6927xa26hr2v68hbkpa9ris79v1r06";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.3.2";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "fdeflate";
            packageId = "fdeflate";
          }
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            features = [ "simd" ];
          }
        ];
        features = {
        };
      };
      "poksho" = rec {
        crateName = "poksho";
        version = "0.7.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
          }
          {
            name = "hmac";
            packageId = "hmac";
            features = [ "reset" ];
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
        ];

      };
      "polling" = rec {
        crateName = "polling";
        version = "3.7.2";
        edition = "2021";
        sha256 = "0nwq2ji0qx56qp9cih6rrv5fw5hpdlqwv3j92rc8nwmz7znh1vd3";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "John Nunley <dev@notgull.net>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "hermit-abi";
            packageId = "hermit-abi 0.4.0";
            target = { target, features }: ("hermit" == target."os" or null);
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "rustix";
            packageId = "rustix";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."unix" or false) || ("fuchsia" == target."os" or null) || ("vxworks" == target."os" or null));
            features = [ "event" "fs" "pipe" "process" "std" "time" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Wdk_Foundation" "Wdk_Storage_FileSystem" "Win32_Foundation" "Win32_Networking_WinSock" "Win32_Security" "Win32_Storage_FileSystem" "Win32_System_IO" "Win32_System_LibraryLoader" "Win32_System_Threading" "Win32_System_WindowsProgramming" ];
          }
        ];

      };
      "poly1305" = rec {
        crateName = "poly1305";
        version = "0.8.0";
        edition = "2021";
        sha256 = "1grs77skh7d8vi61ji44i8gpzs3r9x7vay50i6cg8baxfa8bsnc1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("x86_64" == target."arch" or null) || ("x86" == target."arch" or null));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
          "zeroize" = [ "dep:zeroize" ];
        };
      };
      "polyval" = rec {
        crateName = "polyval";
        version = "0.6.2";
        edition = "2021";
        sha256 = "09gs56vm36ls6pyxgh06gw2875z2x77r8b2km8q28fql0q6yc7wx";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("aarch64" == target."arch" or null) || ("x86_64" == target."arch" or null) || ("x86" == target."arch" or null));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
          "zeroize" = [ "dep:zeroize" ];
        };
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.17";
        edition = "2018";
        sha256 = "1pp6g52aw970adv3x2310n7glqnji96z0a9wiamzw89ibf0ayh2v";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "pqcrypto-internals" = rec {
        crateName = "pqcrypto-internals";
        version = "0.2.5";
        edition = "2021";
        links = "pqcrypto_internals";
        sha256 = "0ipv96543y0g71qkwzir0cigl7rd565vcj3pvvk868mydbn4plyr";
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "dunce";
            packageId = "dunce";
          }
        ];

      };
      "pqcrypto-kyber" = rec {
        crateName = "pqcrypto-kyber";
        version = "0.7.9";
        edition = "2021";
        sha256 = "0xjpp48wfd7sbm2i26vl575gfz1dxd4k8ax93gnilfwir7ayjby3";
        authors = [
          "Thom Wiggers <thom@thomwiggers.nl>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pqcrypto-internals";
            packageId = "pqcrypto-internals";
          }
          {
            name = "pqcrypto-traits";
            packageId = "pqcrypto-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "glob";
            packageId = "glob";
          }
        ];
        features = {
          "avx2" = [ "std" ];
          "default" = [ "avx2" "std" ];
          "serde" = [ "dep:serde" ];
          "serde-big-array" = [ "dep:serde-big-array" ];
          "serialization" = [ "serde" "serde-big-array" ];
          "std" = [ "pqcrypto-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pqcrypto-traits" = rec {
        crateName = "pqcrypto-traits";
        version = "0.3.5";
        edition = "2021";
        sha256 = "1fsigdrjrwkyc00da0y2z1n626lnak268wfjsxl9xvafcp3m3s4l";
        authors = [
          "Thom Wiggers <thom@thomwiggers.nl>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "presage" = rec {
        crateName = "presage";
        version = "0.6.2";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/whisperfish/presage";
          rev = "e2392c42a0392397b9db782607fdd7ab2ea91b5f";
          sha256 = "1a7lqk5vqfljhzfmw0lrmzvl743bgcfmrsa5iwf9hvzh6ndvfkg0";
        };
        authors = [
          "Gabriel Féron <g@leirbag.net>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.21.7";
          }
          {
            name = "futures";
            packageId = "futures";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "libsignal-service";
            packageId = "libsignal-service";
          }
          {
            name = "libsignal-service-hyper";
            packageId = "libsignal-service-hyper";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            features = [ "sync" "time" ];
          }
          {
            name = "url";
            packageId = "url";
          }
        ];

      };
      "presage-store-cipher" = rec {
        crateName = "presage-store-cipher";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/whisperfish/presage";
          rev = "e2392c42a0392397b9db782607fdd7ab2ea91b5f";
          sha256 = "1a7lqk5vqfljhzfmw0lrmzvl743bgcfmrsa5iwf9hvzh6ndvfkg0";
        };
        dependencies = [
          {
            name = "blake3";
            packageId = "blake3";
          }
          {
            name = "chacha20poly1305";
            packageId = "chacha20poly1305";
            features = [ "std" ];
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            features = [ "derive" ];
          }
        ];

      };
      "presage-store-sled" = rec {
        crateName = "presage-store-sled";
        version = "0.6.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/whisperfish/presage";
          rev = "e2392c42a0392397b9db782607fdd7ab2ea91b5f";
          sha256 = "1a7lqk5vqfljhzfmw0lrmzvl743bgcfmrsa5iwf9hvzh6ndvfkg0";
        };
        authors = [
          "Gabriel Féron <g@leirbag.net>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "base64";
            packageId = "base64 0.21.7";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "presage";
            packageId = "presage";
          }
          {
            name = "presage-store-cipher";
            packageId = "presage-store-cipher";
            optional = true;
          }
          {
            name = "prost";
            packageId = "prost";
          }
          {
            name = "quickcheck_macros";
            packageId = "quickcheck_macros";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "sled";
            packageId = "sled";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build";
          }
        ];
        features = {
          "default" = [ "encryption" ];
          "encryption" = [ "dep:presage-store-cipher" ];
        };
        resolvedDefaultFeatures = [ "default" "encryption" ];
      };
      "prettyplease" = rec {
        crateName = "prettyplease";
        version = "0.2.20";
        edition = "2021";
        links = "prettyplease02";
        sha256 = "0pk4vm9fir1p0bl11p9fkgl9r1x9vi4avv8l7flb1wx2i1a364jz";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "full" ];
          }
        ];
        devDependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "parsing" ];
          }
        ];
        features = {
          "verbatim" = [ "syn/parsing" ];
        };
      };
      "proc-macro-crate 1.3.1" = rec {
        crateName = "proc-macro-crate";
        version = "1.3.1";
        edition = "2021";
        sha256 = "069r1k56bvgk0f58dm5swlssfcp79im230affwk6d9ck20g04k3z";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "toml_edit";
            packageId = "toml_edit 0.19.15";
          }
        ];

      };
      "proc-macro-crate 3.1.0" = rec {
        crateName = "proc-macro-crate";
        version = "3.1.0";
        edition = "2021";
        sha256 = "110jcl9vnj92ihbhjqmkp19m8rzxc14a7i60knlmv99qlwfcadvd";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "toml_edit";
            packageId = "toml_edit 0.21.1";
          }
        ];

      };
      "proc-macro-error" = rec {
        crateName = "proc-macro-error";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1373bhxaf0pagd8zkyd03kkx6bchzf6g0dkwrwzsnal9z47lj9fs";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro-error-attr";
            packageId = "proc-macro-error-attr";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 1.0.109";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "syn-error" ];
          "syn" = [ "dep:syn" ];
          "syn-error" = [ "syn" ];
        };
        resolvedDefaultFeatures = [ "default" "syn" "syn-error" ];
      };
      "proc-macro-error-attr" = rec {
        crateName = "proc-macro-error-attr";
        version = "1.0.4";
        edition = "2018";
        sha256 = "0sgq6m5jfmasmwwy8x4mjygx5l7kp8s4j60bv25ckv2j1qc41gm1";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];

      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "1.0.86";
        edition = "2021";
        sha256 = "0xrv22p8lqlfdf1w0pj4si8n2ws4aw0kilmziwf0vpv5ys6rwway";
        libName = "proc_macro2";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-ident";
            packageId = "unicode-ident";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "profiling" = rec {
        crateName = "profiling";
        version = "1.0.15";
        edition = "2018";
        sha256 = "0n5y50w07m95mk2yn94wcrbz4kip30anv7vzf5rjdjbag8flvn23";
        authors = [
          "Philip Degarmo <aclysma@gmail.com>"
        ];
        dependencies = [
          {
            name = "profiling-procmacros";
            packageId = "profiling-procmacros";
            optional = true;
          }
        ];
        features = {
          "default" = [ "procmacros" ];
          "optick" = [ "dep:optick" ];
          "procmacros" = [ "profiling-procmacros" ];
          "profile-with-optick" = [ "optick" "profiling-procmacros?/profile-with-optick" ];
          "profile-with-puffin" = [ "puffin" "profiling-procmacros?/profile-with-puffin" ];
          "profile-with-superluminal" = [ "superluminal-perf" "profiling-procmacros?/profile-with-superluminal" ];
          "profile-with-tracing" = [ "tracing" "profiling-procmacros?/profile-with-tracing" ];
          "profile-with-tracy" = [ "tracy-client" "profiling-procmacros?/profile-with-tracy" ];
          "profiling-procmacros" = [ "dep:profiling-procmacros" ];
          "puffin" = [ "dep:puffin" ];
          "superluminal-perf" = [ "dep:superluminal-perf" ];
          "tracing" = [ "dep:tracing" ];
          "tracy-client" = [ "dep:tracy-client" ];
        };
        resolvedDefaultFeatures = [ "default" "procmacros" "profiling-procmacros" ];
      };
      "profiling-procmacros" = rec {
        crateName = "profiling-procmacros";
        version = "1.0.15";
        edition = "2018";
        sha256 = "1zf3a6wc21l43ckmyhfd56pyq255i9msq9i5zhn4777cr1cwy8c0";
        procMacro = true;
        authors = [
          "Philip Degarmo <aclysma@gmail.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
      "prost" = rec {
        crateName = "prost";
        version = "0.12.6";
        edition = "2021";
        sha256 = "0a8z87ir8yqjgl1kxbdj30a7pzsjs9ka85szll6i6xlb31f47cfy";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Casper Meijn <casper@meijn.net>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "derive" "std" ];
          "derive" = [ "dep:prost-derive" ];
          "prost-derive" = [ "derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "prost-derive" "std" ];
      };
      "prost-build" = rec {
        crateName = "prost-build";
        version = "0.12.6";
        edition = "2021";
        sha256 = "1936q2grirm4rh5l26p88gbw8dijjcf4sfcn55y3p3nsjif5ll12";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Casper Meijn <casper@meijn.net>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
            usesDefaultFeatures = false;
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools";
            usesDefaultFeatures = false;
            features = [ "use_alloc" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "petgraph";
            packageId = "petgraph";
            usesDefaultFeatures = false;
          }
          {
            name = "prettyplease";
            packageId = "prettyplease";
            optional = true;
          }
          {
            name = "prost";
            packageId = "prost";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" "unicode-bool" ];
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            optional = true;
            features = [ "full" ];
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        features = {
          "cleanup-markdown" = [ "dep:pulldown-cmark" "dep:pulldown-cmark-to-cmark" ];
          "default" = [ "format" ];
          "format" = [ "dep:prettyplease" "dep:syn" ];
        };
        resolvedDefaultFeatures = [ "default" "format" ];
      };
      "prost-derive" = rec {
        crateName = "prost-derive";
        version = "0.12.6";
        edition = "2021";
        sha256 = "1waaq9d2f114bvvpw957s7vsx268licnfawr20b51ydb43dxrgc1";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Casper Meijn <casper@meijn.net>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools";
            usesDefaultFeatures = false;
            features = [ "use_alloc" ];
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-types" = rec {
        crateName = "prost-types";
        version = "0.12.6";
        edition = "2021";
        sha256 = "1c6mvfhz91q8a8fwada9smaxgg9w4y8l1ypj9yc8wq1j185wk4ch";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Casper Meijn <casper@meijn.net>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "prost";
            packageId = "prost";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" ];
        };
      };
      "qoi" = rec {
        crateName = "qoi";
        version = "0.4.1";
        edition = "2021";
        sha256 = "00c0wkb112annn2wl72ixyd78mf56p4lxkhlmsggx65l3v3n8vbz";
        authors = [
          "Ivan Smirnov <rust@ivan.smirnov.ie>"
        ];
        dependencies = [
          {
            name = "bytemuck";
            packageId = "bytemuck";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "qrcode-generator" = rec {
        crateName = "qrcode-generator";
        version = "4.1.9";
        edition = "2021";
        sha256 = "0ngiwz7mfqfy7g8nh309vq9qqphyybbp890s4fb418f78sbcn1hx";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        dependencies = [
          {
            name = "html-escape";
            packageId = "html-escape";
          }
          {
            name = "image";
            packageId = "image 0.24.9";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "png" ];
          }
          {
            name = "qrcodegen";
            packageId = "qrcodegen";
          }
        ];
        features = {
          "default" = [ "image" ];
          "image" = [ "dep:image" ];
        };
        resolvedDefaultFeatures = [ "default" "image" ];
      };
      "qrcodegen" = rec {
        crateName = "qrcodegen";
        version = "1.8.0";
        edition = "2015";
        sha256 = "0hn1j12q31nzlkra42s20p0wh198bx8f7xc73mic3j9121xgqfa3";
        authors = [
          "Project Nayuki"
        ];

      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "2.0.1";
        edition = "2018";
        sha256 = "18z6r2rcjvvf8cn92xjhm2qc3jpd1ljvcbf12zv0k9p565gmb4x9";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quick-xml" = rec {
        crateName = "quick-xml";
        version = "0.31.0";
        edition = "2021";
        sha256 = "0cravqanylzh5cq2v6hzlfqgxcid5nrp2snnb3pf4m0and2a610h";
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
          }
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "async-tokio" = [ "tokio" ];
          "document-features" = [ "dep:document-features" ];
          "encoding" = [ "encoding_rs" ];
          "encoding_rs" = [ "dep:encoding_rs" ];
          "serde" = [ "dep:serde" ];
          "serde-types" = [ "serde/derive" ];
          "serialize" = [ "serde" ];
          "tokio" = [ "dep:tokio" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "quickcheck_macros" = rec {
        crateName = "quickcheck_macros";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1s8nh0fmmzq3fd7928qcp2syvymlyv1pmww6fxcaj5np48r6jamj";
        procMacro = true;
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 1.0.109";
            features = [ "full" ];
          }
        ];

      };
      "quote" = rec {
        crateName = "quote";
        version = "1.0.36";
        edition = "2018";
        sha256 = "19xcmh445bg6simirnnd4fvkmp6v2qiwxh5f6rw4a70h76pnm9qg";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand" = rec {
        crateName = "rand";
        version = "0.8.5";
        edition = "2018";
        sha256 = "013l6931nn7gkc23jz5mm3qdhf93jjf0fg64nz2lp4i51qd8vbrl";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" "std_rng" ];
          "getrandom" = [ "rand_core/getrandom" ];
          "libc" = [ "dep:libc" ];
          "log" = [ "dep:log" ];
          "packed_simd" = [ "dep:packed_simd" ];
          "rand_chacha" = [ "dep:rand_chacha" ];
          "serde" = [ "dep:serde" ];
          "serde1" = [ "serde" "rand_core/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "std_rng" = [ "rand_chacha" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "libc" "rand_chacha" "std" "std_rng" ];
      };
      "rand_chacha" = rec {
        crateName = "rand_chacha";
        version = "0.3.1";
        edition = "2018";
        sha256 = "123x2adin558xbhvqb8w4f6syjsdkmqff8cxwhmjacpsl1ihmhg6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
          "serde1" = [ "serde" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rand_core" = rec {
        crateName = "rand_core";
        version = "0.6.4";
        edition = "2018";
        sha256 = "0b4j2v4cb5krak1pv6kakv4sz6xcwbrmy2zckc32hsigbrwy82zc";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom";
            optional = true;
          }
        ];
        features = {
          "getrandom" = [ "dep:getrandom" ];
          "serde" = [ "dep:serde" ];
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rav1e" = rec {
        crateName = "rav1e";
        version = "0.7.1";
        edition = "2021";
        crateBin = [];
        sha256 = "1sawva6nmj2fvynydbcirr3nb7wjyg0id2hz2771qnv6ly0cx1yd";
        authors = [
          "Thomas Daede <tdaede@xiph.org>"
        ];
        dependencies = [
          {
            name = "arbitrary";
            packageId = "arbitrary";
            target = { target, features }: (target."fuzzing" or false);
          }
          {
            name = "arg_enum_proc_macro";
            packageId = "arg_enum_proc_macro";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec";
          }
          {
            name = "av1-grain";
            packageId = "av1-grain";
          }
          {
            name = "bitstream-io";
            packageId = "bitstream-io";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "interpolate_name";
            packageId = "interpolate_name";
            target = { target, features }: (target."fuzzing" or false);
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libfuzzer-sys";
            packageId = "libfuzzer-sys";
            target = { target, features }: (target."fuzzing" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "maybe-rayon";
            packageId = "maybe-rayon";
            rename = "rayon";
            usesDefaultFeatures = false;
          }
          {
            name = "new_debug_unreachable";
            packageId = "new_debug_unreachable";
          }
          {
            name = "noop_proc_macro";
            packageId = "noop_proc_macro";
          }
          {
            name = "num-derive";
            packageId = "num-derive";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "profiling";
            packageId = "profiling";
          }
          {
            name = "rand";
            packageId = "rand";
            target = { target, features }: (target."fuzzing" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha";
            target = { target, features }: (target."fuzzing" or false);
          }
          {
            name = "simd_helpers";
            packageId = "simd_helpers";
          }
          {
            name = "system-deps";
            packageId = "system-deps";
            target = { target, features }: ((target."decode_test" or false) || (target."decode_test_dav1d" or false));
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "v_frame";
            packageId = "v_frame";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "built";
            packageId = "built";
          }
        ];
        devDependencies = [
          {
            name = "interpolate_name";
            packageId = "interpolate_name";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha";
          }
        ];
        features = {
          "aom-sys" = [ "dep:aom-sys" ];
          "asm" = [ "nasm-rs" "cc" ];
          "av-metrics" = [ "dep:av-metrics" ];
          "backtrace" = [ "dep:backtrace" ];
          "binaries" = [ "ivf" "y4m" "clap" "clap_complete" "scan_fmt" "fern" "console" "av-metrics" "nom" ];
          "byteorder" = [ "dep:byteorder" ];
          "capi" = [ "scan_fmt" ];
          "cc" = [ "dep:cc" ];
          "channel-api" = [ "crossbeam" ];
          "clap" = [ "dep:clap" ];
          "clap_complete" = [ "dep:clap_complete" ];
          "console" = [ "dep:console" ];
          "crossbeam" = [ "dep:crossbeam" ];
          "dav1d-sys" = [ "dep:dav1d-sys" ];
          "decode_test" = [ "aom-sys" ];
          "decode_test_dav1d" = [ "dav1d-sys" ];
          "default" = [ "binaries" "asm" "threading" "signal_support" "git_version" ];
          "desync_finder" = [ "backtrace" ];
          "dump_ivf" = [ "ivf" ];
          "dump_lookahead_data" = [ "byteorder" "image" ];
          "fern" = [ "dep:fern" ];
          "git_version" = [ "built/git2" ];
          "image" = [ "dep:image" ];
          "ivf" = [ "dep:ivf" ];
          "nasm-rs" = [ "dep:nasm-rs" ];
          "nom" = [ "dep:nom" ];
          "scan_fmt" = [ "dep:scan_fmt" ];
          "serde" = [ "dep:serde" ];
          "serde-big-array" = [ "dep:serde-big-array" ];
          "serialize" = [ "serde" "toml" "v_frame/serialize" "serde-big-array" "av1-grain/serialize" ];
          "signal-hook" = [ "dep:signal-hook" ];
          "signal_support" = [ "signal-hook" ];
          "threading" = [ "rayon/threads" ];
          "toml" = [ "dep:toml" ];
          "tracing" = [ "profiling/profile-with-tracing" "tracing-subscriber" "tracing-chrome" "dep:tracing" ];
          "tracing-chrome" = [ "dep:tracing-chrome" ];
          "tracing-subscriber" = [ "dep:tracing-subscriber" ];
          "wasm" = [ "wasm-bindgen" ];
          "wasm-bindgen" = [ "dep:wasm-bindgen" ];
          "y4m" = [ "dep:y4m" ];
        };
        resolvedDefaultFeatures = [ "threading" "wasm" "wasm-bindgen" ];
      };
      "ravif" = rec {
        crateName = "ravif";
        version = "0.11.6";
        edition = "2021";
        sha256 = "1315abwxldavjxdl8dphab16fh8akw000hn406dbjnsi53b4kgl5";
        authors = [
          "Kornel Lesiński <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "avif-serialize";
            packageId = "avif-serialize";
          }
          {
            name = "bitstream-io";
            packageId = "bitstream-io";
          }
          {
            name = "imgref";
            packageId = "imgref";
          }
          {
            name = "loop9";
            packageId = "loop9";
          }
          {
            name = "quick-error";
            packageId = "quick-error";
          }
          {
            name = "rav1e";
            packageId = "rav1e";
            usesDefaultFeatures = false;
            features = [ "threading" ];
          }
          {
            name = "rav1e";
            packageId = "rav1e";
            usesDefaultFeatures = false;
            target = { target, features }: ("wasm32-unknown-unknown" == target."target" or null);
            features = [ "wasm" ];
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "rgb";
            packageId = "rgb";
          }
        ];
        features = {
          "asm" = [ "rav1e/asm" ];
          "default" = [ "asm" ];
        };
      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.10.0";
        edition = "2021";
        sha256 = "1ylgnzwgllajalr4v00y4kj22klq2jbwllm70aha232iah0sc65l";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        features = {
          "web_spin_lock" = [ "dep:wasm_sync" "rayon-core/web_spin_lock" ];
        };
      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.12.1";
        edition = "2021";
        links = "rayon-core";
        sha256 = "1qpwim68ai5h0j7axa8ai8z0payaawv3id0lrgkqmapx7lx8fr8l";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
        ];
        features = {
          "web_spin_lock" = [ "dep:wasm_sync" ];
        };
      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.2.16";
        edition = "2018";
        sha256 = "16jicm96kjyzm802cxdd1k9jmcph0db1a4lhslcnhjsvhp0mhnpv";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.3.2";
          }
        ];

      };
      "regex" = rec {
        crateName = "regex";
        version = "1.10.5";
        edition = "2021";
        sha256 = "0zsiqk2sxc1kd46qw0yp87s2a14ialwyxinpl0k266ddkm1i64mr";
        authors = [
          "The Rust Project Developers"
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata";
            usesDefaultFeatures = false;
            features = [ "alloc" "syntax" "meta" "nfa-pikevm" ];
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax 0.8.4";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" "regex-syntax/default" ];
          "logging" = [ "aho-corasick?/logging" "memchr?/logging" "regex-automata/logging" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-onepass" "perf-backtrack" "perf-inline" "perf-literal" ];
          "perf-backtrack" = [ "regex-automata/nfa-backtrack" ];
          "perf-dfa" = [ "regex-automata/hybrid" ];
          "perf-dfa-full" = [ "regex-automata/dfa-build" "regex-automata/dfa-search" ];
          "perf-inline" = [ "regex-automata/perf-inline" ];
          "perf-literal" = [ "dep:aho-corasick" "dep:memchr" "regex-automata/perf-literal" ];
          "perf-onepass" = [ "regex-automata/dfa-onepass" ];
          "std" = [ "aho-corasick?/std" "memchr?/std" "regex-automata/std" "regex-syntax/std" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "regex-automata/unicode" "regex-syntax/unicode" ];
          "unicode-age" = [ "regex-automata/unicode-age" "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-automata/unicode-bool" "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-automata/unicode-case" "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-automata/unicode-gencat" "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-automata/unicode-perl" "regex-automata/unicode-word-boundary" "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-automata/unicode-script" "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-automata/unicode-segment" "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "perf" "perf-backtrack" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "perf-onepass" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.4.7";
        edition = "2021";
        sha256 = "1pwjdi4jckpbaivpl6x4v5g4crb37zr2wac93wlfsbzgqn6gbjiq";
        libName = "regex_automata";
        authors = [
          "The Rust Project Developers"
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax 0.8.4";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "syntax" "perf" "unicode" "meta" "nfa" "dfa" "hybrid" ];
          "dfa" = [ "dfa-build" "dfa-search" "dfa-onepass" ];
          "dfa-build" = [ "nfa-thompson" "dfa-search" ];
          "dfa-onepass" = [ "nfa-thompson" ];
          "hybrid" = [ "alloc" "nfa-thompson" ];
          "internal-instrument" = [ "internal-instrument-pikevm" ];
          "internal-instrument-pikevm" = [ "logging" "std" ];
          "logging" = [ "dep:log" "aho-corasick?/logging" "memchr?/logging" ];
          "meta" = [ "syntax" "nfa-pikevm" ];
          "nfa" = [ "nfa-thompson" "nfa-pikevm" "nfa-backtrack" ];
          "nfa-backtrack" = [ "nfa-thompson" ];
          "nfa-pikevm" = [ "nfa-thompson" ];
          "nfa-thompson" = [ "alloc" ];
          "perf" = [ "perf-inline" "perf-literal" ];
          "perf-literal" = [ "perf-literal-substring" "perf-literal-multisubstring" ];
          "perf-literal-multisubstring" = [ "std" "dep:aho-corasick" ];
          "perf-literal-substring" = [ "aho-corasick?/perf-literal" "dep:memchr" ];
          "std" = [ "regex-syntax?/std" "memchr?/std" "aho-corasick?/std" "alloc" ];
          "syntax" = [ "dep:regex-syntax" "alloc" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "unicode-word-boundary" "regex-syntax?/unicode" ];
          "unicode-age" = [ "regex-syntax?/unicode-age" ];
          "unicode-bool" = [ "regex-syntax?/unicode-bool" ];
          "unicode-case" = [ "regex-syntax?/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax?/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax?/unicode-perl" ];
          "unicode-script" = [ "regex-syntax?/unicode-script" ];
          "unicode-segment" = [ "regex-syntax?/unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "alloc" "dfa-onepass" "hybrid" "meta" "nfa-backtrack" "nfa-pikevm" "nfa-thompson" "perf-inline" "perf-literal" "perf-literal-multisubstring" "perf-literal-substring" "std" "syntax" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "unicode-word-boundary" ];
      };
      "regex-cache" = rec {
        crateName = "regex-cache";
        version = "0.2.1";
        edition = "2018";
        sha256 = "14w7h1rl68fzzvavig18hf184macxcypqsrv6m7vkf23jzb64yrg";
        authors = [
          "meh. <meh@1aim.com>"
        ];
        dependencies = [
          {
            name = "lru-cache";
            packageId = "lru-cache";
          }
          {
            name = "oncemutex";
            packageId = "oncemutex";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax 0.6.29";
          }
        ];

      };
      "regex-syntax 0.6.29" = rec {
        crateName = "regex-syntax";
        version = "0.6.29";
        edition = "2018";
        sha256 = "1qgj49vm6y3zn1hi09x91jvgkl2b1fiaq402skj83280ggfwcqpi";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-syntax 0.8.4" = rec {
        crateName = "regex-syntax";
        version = "0.8.4";
        edition = "2021";
        sha256 = "16r0kjy20vx33dr4mhasj5l1f87czas714x2fz6zl0f8wwxa0rks";
        libName = "regex_syntax";
        authors = [
          "The Rust Project Developers"
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "default" = [ "std" "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "rgb" = rec {
        crateName = "rgb";
        version = "0.8.45";
        edition = "2021";
        sha256 = "08q5i9w60liplw33pc31r6r44qjlvzfmnq2wfngfsv968agm7r5d";
        authors = [
          "Kornel Lesiński <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bytemuck";
            packageId = "bytemuck";
            optional = true;
          }
        ];
        features = {
          "as-bytes" = [ "bytemuck" ];
          "bytemuck" = [ "dep:bytemuck" ];
          "default" = [ "as-bytes" "argb" "grb" ];
          "defmt-03" = [ "dep:defmt" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "argb" "as-bytes" "bytemuck" "default" "grb" ];
      };
      "ring" = rec {
        crateName = "ring";
        version = "0.17.8";
        edition = "2021";
        links = "ring_core_0_17_8";
        sha256 = "03fwlb1ssrmfxdckvqv033pfmk01rhx9ynwi7r186dcfcp5s8zy1";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
            usesDefaultFeatures = false;
          }
          {
            name = "getrandom";
            packageId = "getrandom";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((("android" == target."os" or null) || ("linux" == target."os" or null)) && (("aarch64" == target."arch" or null) || ("arm" == target."arch" or null)));
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }: (("aarch64" == target."arch" or null) || ("arm" == target."arch" or null) || ("x86" == target."arch" or null) || ("x86_64" == target."arch" or null));
            features = [ "once" ];
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (("aarch64" == target."arch" or null) && ("windows" == target."os" or null));
            features = [ "Win32_Foundation" "Win32_System_Threading" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = {target, features}: ((target."unix" or false) || (target."windows" or false) || ("wasi" == target."os" or null));
          }
        ];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "std" = [ "alloc" ];
          "wasm32_unknown_unknown_js" = [ "getrandom/js" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "dev_urandom_fallback" ];
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.24";
        edition = "2015";
        sha256 = "07zysaafgrkzy2rjgwqdj2a8qdpsm6zv6f5pgpk9x0lm40z9b6vi";
        libName = "rustc_demangle";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc_version" = rec {
        crateName = "rustc_version";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0rpk9rcdk405xhbmgclsh4pai0svn49x35aggl4nhbkd4a2zb85z";
        authors = [
          "Dirkjan Ochtman <dirkjan@ochtman.nl>"
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver";
          }
        ];

      };
      "rustix" = rec {
        crateName = "rustix";
        version = "0.38.34";
        edition = "2021";
        sha256 = "03vkqa2ism7q56rkifyy8mns0wwqrk70f4i4fd53r97p8b05xp3h";
        authors = [
          "Dan Gohman <dev@sunfishcode.online>"
          "Jakub Konka <kubkon@jakubkonka.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 2.6.0";
            usesDefaultFeatures = false;
          }
          {
            name = "errno";
            packageId = "errno";
            rename = "libc_errno";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((!(target."rustix_use_libc" or false)) && (!(target."miri" or false)) && ("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null))));
          }
          {
            name = "errno";
            packageId = "errno";
            rename = "libc_errno";
            usesDefaultFeatures = false;
            target = { target, features }: ((!(target."windows" or false)) && ((target."rustix_use_libc" or false) || (target."miri" or false) || (!(("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null)))))));
          }
          {
            name = "errno";
            packageId = "errno";
            rename = "libc_errno";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((!(target."rustix_use_libc" or false)) && (!(target."miri" or false)) && ("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null))));
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((!(target."windows" or false)) && ((target."rustix_use_libc" or false) || (target."miri" or false) || (!(("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null)))))));
          }
          {
            name = "linux-raw-sys";
            packageId = "linux-raw-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((("android" == target."os" or null) || ("linux" == target."os" or null)) && ((target."rustix_use_libc" or false) || (target."miri" or false) || (!(("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null)))))));
            features = [ "general" "ioctl" "no_std" ];
          }
          {
            name = "linux-raw-sys";
            packageId = "linux-raw-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((!(target."rustix_use_libc" or false)) && (!(target."miri" or false)) && ("linux" == target."os" or null) && ("little" == target."endian" or null) && (("arm" == target."arch" or null) || (("aarch64" == target."arch" or null) && ("64" == target."pointer_width" or null)) || ("riscv64" == target."arch" or null) || ((target."rustix_use_experimental_asm" or false) && ("powerpc64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips32r6" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64" == target."arch" or null)) || ((target."rustix_use_experimental_asm" or false) && ("mips64r6" == target."arch" or null)) || ("x86" == target."arch" or null) || (("x86_64" == target."arch" or null) && ("64" == target."pointer_width" or null))));
            features = [ "general" "errno" "ioctl" "no_std" "elf" ];
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_Networking_WinSock" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" ];
          }
        ];
        devDependencies = [
          {
            name = "errno";
            packageId = "errno";
            rename = "libc_errno";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "all-apis" = [ "event" "fs" "io_uring" "mm" "mount" "net" "param" "pipe" "process" "procfs" "pty" "rand" "runtime" "shm" "stdio" "system" "termios" "thread" "time" ];
          "default" = [ "std" "use-libc-auxv" ];
          "io_uring" = [ "event" "fs" "net" "linux-raw-sys/io_uring" ];
          "itoa" = [ "dep:itoa" ];
          "libc" = [ "dep:libc" ];
          "libc-extra-traits" = [ "libc?/extra_traits" ];
          "libc_errno" = [ "dep:libc_errno" ];
          "linux_latest" = [ "linux_4_11" ];
          "net" = [ "linux-raw-sys/net" "linux-raw-sys/netlink" "linux-raw-sys/if_ether" "linux-raw-sys/xdp" ];
          "once_cell" = [ "dep:once_cell" ];
          "param" = [ "fs" ];
          "process" = [ "linux-raw-sys/prctl" ];
          "procfs" = [ "once_cell" "itoa" "fs" ];
          "pty" = [ "itoa" "fs" ];
          "runtime" = [ "linux-raw-sys/prctl" ];
          "rustc-dep-of-std" = [ "dep:core" "dep:alloc" "dep:compiler_builtins" "linux-raw-sys/rustc-dep-of-std" "bitflags/rustc-dep-of-std" "compiler_builtins?/rustc-dep-of-std" ];
          "shm" = [ "fs" ];
          "std" = [ "bitflags/std" "alloc" "libc?/std" "libc_errno?/std" "libc-extra-traits" ];
          "system" = [ "linux-raw-sys/system" ];
          "thread" = [ "linux-raw-sys/prctl" ];
          "use-libc" = [ "libc_errno" "libc" "libc-extra-traits" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "event" "fs" "libc-extra-traits" "net" "pipe" "process" "std" "time" "use-libc-auxv" ];
      };
      "rustls" = rec {
        crateName = "rustls";
        version = "0.22.4";
        edition = "2021";
        sha256 = "0cl4q6w0x1cl5ldjsgbbiiqhkz6qg5vxl5dkn9wwsyxc44vzfkmz";
        dependencies = [
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "ring";
            packageId = "ring";
            optional = true;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
            features = [ "std" ];
          }
          {
            name = "rustls-webpki";
            packageId = "rustls-webpki";
            rename = "webpki";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "aws_lc_rs" = [ "dep:aws-lc-rs" "webpki/aws_lc_rs" ];
          "default" = [ "logging" "ring" "tls12" ];
          "log" = [ "dep:log" ];
          "logging" = [ "log" ];
          "read_buf" = [ "rustversion" ];
          "ring" = [ "dep:ring" "webpki/ring" ];
          "rustversion" = [ "dep:rustversion" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "logging" "ring" "tls12" ];
      };
      "rustls-native-certs" = rec {
        crateName = "rustls-native-certs";
        version = "0.7.1";
        edition = "2021";
        sha256 = "1fjzn7h3p6f3wr014p0i58131513b5li3146v6yrdd2i0r16v3d8";
        dependencies = [
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: ((target."unix" or false) && (!("macos" == target."os" or null)));
          }
          {
            name = "rustls-pemfile";
            packageId = "rustls-pemfile";
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ("macos" == target."os" or null);
          }
        ];

      };
      "rustls-pemfile" = rec {
        crateName = "rustls-pemfile";
        version = "2.1.2";
        edition = "2018";
        sha256 = "0ggpmk5n7p096nim2hn57facx6rwf76l55qqsj4fny37d0jkm699";
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.22.1";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "base64/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustls-pki-types" = rec {
        crateName = "rustls-pki-types";
        version = "1.7.0";
        edition = "2021";
        sha256 = "0banlc9xzwqrx8n0h4bd0igmq3z5hc72rn941lf22cp3gkkraqlp";
        libName = "rustls_pki_types";
        features = {
          "default" = [ "alloc" ];
          "std" = [ "alloc" ];
          "web" = [ "web-time" ];
          "web-time" = [ "dep:web-time" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "rustls-webpki" = rec {
        crateName = "rustls-webpki";
        version = "0.102.6";
        edition = "2021";
        sha256 = "0bl55zb5m78l45d8i5frracq96x8shsshmfwby1zsxm1zpa54swf";
        libName = "webpki";
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
            usesDefaultFeatures = false;
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        features = {
          "alloc" = [ "ring?/alloc" "pki-types/alloc" ];
          "aws_lc_rs" = [ "dep:aws-lc-rs" ];
          "default" = [ "std" "ring" ];
          "ring" = [ "dep:ring" ];
          "std" = [ "alloc" "pki-types/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "ring" "std" ];
      };
      "rustversion" = rec {
        crateName = "rustversion";
        version = "1.0.17";
        edition = "2018";
        sha256 = "1mm3fckyvb0l2209in1n2k05sws5d9mpkszbnwhq3pkq8apjhpcm";
        procMacro = true;
        build = "build/build.rs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.18";
        edition = "2018";
        sha256 = "17xx2s8j1lln7iackzd9p0sv546vjq71i779gphjq923vjh5pjzk";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "no-panic" = [ "dep:no-panic" ];
        };
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.23";
        edition = "2018";
        sha256 = "0d1m156bsjrws6xzzr1wyfyih9i22mb2csb5pc5kmkrvci2ibjgv";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            features = [ "Win32_Foundation" "Win32_Security_Cryptography" "Win32_Security_Authentication_Identity" "Win32_Security_Credentials" "Win32_System_Memory" ];
          }
        ];
        devDependencies = [
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            features = [ "Win32_System_SystemInformation" "Win32_System_Time" ];
          }
        ];

      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0jcz9sd47zlsgcnm1hdw0664krxwb5gczlif4qngj2aif8vky54l";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "2.11.1";
        edition = "2021";
        sha256 = "00ldclwx78dm61v7wkach9lcx76awlrv0fdgjdwch4dmy12j4yw9";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 2.6.0";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" "session-tickets" "serial-number-bigint" ];
          "OSX_10_14" = [ "OSX_10_13" "security-framework-sys/OSX_10_14" ];
          "OSX_10_15" = [ "OSX_10_14" "security-framework-sys/OSX_10_15" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
          "default" = [ "OSX_10_12" ];
          "log" = [ "dep:log" ];
          "serial-number-bigint" = [ "dep:num-bigint" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_10" "OSX_10_11" "OSX_10_12" "OSX_10_9" "default" ];
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "2.11.1";
        edition = "2021";
        sha256 = "1byfpx39sbmndfjrlqqylcxdpn3mpjyb9d92dffzw24vkgz2knkm";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
          "OSX_10_14" = [ "OSX_10_13" ];
          "OSX_10_15" = [ "OSX_10_14" ];
          "default" = [ "OSX_10_12" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_10" "OSX_10_11" "OSX_10_12" "OSX_10_9" ];
      };
      "semver" = rec {
        crateName = "semver";
        version = "1.0.23";
        edition = "2018";
        sha256 = "12wqpxfflclbq4dv8sa6gchdh92ahhwn4ci1ls22wlby3h57wsb1";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde" = rec {
        crateName = "serde";
        version = "1.0.204";
        edition = "2018";
        sha256 = "04kwpwqz559xlhxkggmm8rjxqgywy5swam3kscwsicnbw1cgaxmw";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            target = { target, features }: false;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
          "serde_derive" = [ "dep:serde_derive" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "derive" "serde_derive" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.204";
        edition = "2015";
        sha256 = "08p25262mbmhsr2cg0508d5b1wvljj956rvpg0v3qgg6gc8pxkg0";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
            features = [ "proc-macro" ];
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
            features = [ "proc-macro" ];
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "parsing" "printing" "proc-macro" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.120";
        edition = "2021";
        sha256 = "1idpv3zxcvl76z2z47jgg1f1wjqdnhfc204asmd27qfam34j23af";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "indexmap" = [ "dep:indexmap" ];
          "preserve_order" = [ "indexmap" "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde_repr" = rec {
        crateName = "serde_repr";
        version = "0.1.19";
        edition = "2021";
        sha256 = "1sb4cplc33z86pzlx38234xr141wr3cmviqgssiadisgl8dlar3c";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
          }
        ];

      };
      "serde_spanned" = rec {
        crateName = "serde_spanned";
        version = "0.6.6";
        edition = "2021";
        sha256 = "1839b6m5p9ijjmcwamiya2r612ks2vg6w2pp95yg76lr3zh79rkr";
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "serde" ];
      };
      "sha1" = rec {
        crateName = "sha1";
        version = "0.10.6";
        edition = "2018";
        sha256 = "1fnnxlfg08xhkmwf2ahv634as30l1i3xhlhkvxflmasi5nd85gz3";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("aarch64" == target."arch" or null) || ("x86" == target."arch" or null) || ("x86_64" == target."arch" or null));
          }
          {
            name = "digest";
            packageId = "digest";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "default" = [ "std" ];
          "oid" = [ "digest/oid" ];
          "sha1-asm" = [ "dep:sha1-asm" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha2" = rec {
        crateName = "sha2";
        version = "0.10.8";
        edition = "2018";
        sha256 = "1j1x78zk9il95w9iv46dh9wm73r6xrgj32y6lzzw7bxws9dbfgbr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: (("aarch64" == target."arch" or null) || ("x86_64" == target."arch" or null) || ("x86" == target."arch" or null));
          }
          {
            name = "digest";
            packageId = "digest";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "oid" = [ "digest/oid" ];
          "sha2-asm" = [ "dep:sha2-asm" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "signal-crypto" = rec {
        crateName = "signal-crypto";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "aes";
            packageId = "aes";
            features = [ "zeroize" ];
          }
          {
            name = "cbc";
            packageId = "cbc";
            features = [ "std" "zeroize" ];
          }
          {
            name = "ctr";
            packageId = "ctr";
            features = [ "zeroize" ];
          }
          {
            name = "displaydoc";
            packageId = "displaydoc";
          }
          {
            name = "ghash";
            packageId = "ghash";
            features = [ "zeroize" ];
          }
          {
            name = "hmac";
            packageId = "hmac";
            features = [ "reset" ];
          }
          {
            name = "sha1";
            packageId = "sha1";
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "subtle";
            packageId = "subtle";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "signal-hook-registry" = rec {
        crateName = "signal-hook-registry";
        version = "1.4.2";
        edition = "2015";
        sha256 = "1cb5akgq8ajnd5spyn587srvs4n26ryq0p78nswffwhv46sf1sd9";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Masaki Hara <ackie.h.gmai@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "simd-adler32" = rec {
        crateName = "simd-adler32";
        version = "0.3.7";
        edition = "2018";
        sha256 = "1zkq40c3iajcnr5936gjp9jjh1lpzhy44p3dq3fiw75iwr1w2vfn";
        authors = [
          "Marvin Countryman <me@maar.vin>"
        ];
        features = {
          "default" = [ "std" "const-generics" ];
        };
        resolvedDefaultFeatures = [ "const-generics" "default" "std" ];
      };
      "simd_helpers" = rec {
        crateName = "simd_helpers";
        version = "0.1.0";
        edition = "2018";
        sha256 = "19idqicn9k4vhd04ifh2ff41wvna79zphdf2c81rlmpc7f3hz2cm";
        procMacro = true;
        authors = [
          "Luca Barbato <lu_zero@gentoo.org>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
        ];

      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.9";
        edition = "2018";
        sha256 = "0rxvsgir0qw5lkycrqgb1cxsvxzjv9bmx73bk5y42svnzfba94lg";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sled" = rec {
        crateName = "sled";
        version = "0.34.7";
        edition = "2018";
        sha256 = "0dcr2s7cylj5mb33ci3kpx7fz797jwvysnl5airrir9cgirv95kz";
        authors = [
          "Tyler Neely <t@jujit.su>"
        ];
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "fs2";
            packageId = "fs2";
            target = { target, features }: (("linux" == target."os" or null) || ("macos" == target."os" or null) || ("windows" == target."os" or null));
          }
          {
            name = "fxhash";
            packageId = "fxhash";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "backtrace" = [ "dep:backtrace" ];
          "color-backtrace" = [ "dep:color-backtrace" ];
          "compression" = [ "zstd" ];
          "default" = [ "no_metrics" ];
          "io_uring" = [ "rio" ];
          "no_logs" = [ "log/max_level_off" ];
          "pretty_backtrace" = [ "color-backtrace" ];
          "rio" = [ "dep:rio" ];
          "testing" = [ "event_log" "lock_free_delays" "compression" "failpoints" "backtrace" ];
          "zstd" = [ "dep:zstd" ];
        };
        resolvedDefaultFeatures = [ "default" "no_metrics" ];
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "1.13.2";
        edition = "2018";
        sha256 = "0rsw5samawl3wsw6glrsb127rx6sh89a8wyikicw6dkdcjd1lpiw";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "const_new" = [ "const_generics" ];
          "drain_keep_rest" = [ "drain_filter" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "const_generics" "const_new" "union" "write" ];
      };
      "socket2" = rec {
        crateName = "socket2";
        version = "0.5.7";
        edition = "2021";
        sha256 = "070r941wbq76xpy039an4pyiy3rfj7mp7pvibf1rcri9njq5wc6f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_Networking_WinSock" "Win32_System_IO" "Win32_System_Threading" "Win32_System_WindowsProgramming" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "all" ];
      };
      "sourceview5" = rec {
        crateName = "sourceview5";
        version = "0.8.0";
        edition = "2021";
        sha256 = "03s1axxxzlzv8rxj1ixg7pvwzp2qrz2gjmi0y9565i0s5w7zf2wz";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "gdk-pixbuf";
            packageId = "gdk-pixbuf";
          }
          {
            name = "gdk4";
            packageId = "gdk4";
            rename = "gdk";
          }
          {
            name = "gio";
            packageId = "gio";
          }
          {
            name = "glib";
            packageId = "glib";
          }
          {
            name = "gtk4";
            packageId = "gtk4";
            rename = "gtk";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango";
            packageId = "pango";
          }
          {
            name = "sourceview5-sys";
            packageId = "sourceview5-sys";
            rename = "ffi";
          }
        ];
        features = {
          "gtk_v4_12" = [ "gtk/v4_12" ];
          "gtk_v4_6" = [ "gtk/v4_6" "pango/v1_50" ];
          "v5_10" = [ "v5_6" "ffi/v5_10" ];
          "v5_2" = [ "ffi/v5_2" ];
          "v5_4" = [ "v5_2" "ffi/v5_4" "gtk_v4_6" ];
          "v5_6" = [ "v5_4" "ffi/v5_6" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sourceview5-sys" = rec {
        crateName = "sourceview5-sys";
        version = "0.8.0";
        edition = "2021";
        sha256 = "1gjpyqhynw14d6kvj71hm9ldkx0wba5vdn6f36wd5np6gjnkdhpa";
        authors = [
          "Bilal Elmoussaoui <bil.elmoussaoui@gmail.com>"
        ];
        dependencies = [
          {
            name = "gdk-pixbuf-sys";
            packageId = "gdk-pixbuf-sys";
          }
          {
            name = "gdk4-sys";
            packageId = "gdk4-sys";
            rename = "gdk-sys";
          }
          {
            name = "gio-sys";
            packageId = "gio-sys";
          }
          {
            name = "glib-sys";
            packageId = "glib-sys";
          }
          {
            name = "gobject-sys";
            packageId = "gobject-sys";
          }
          {
            name = "gtk4-sys";
            packageId = "gtk4-sys";
            rename = "gtk-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "pango-sys";
            packageId = "pango-sys";
          }
        ];
        buildDependencies = [
          {
            name = "system-deps";
            packageId = "system-deps";
          }
        ];
        features = {
          "v5_10" = [ "v5_6" ];
          "v5_4" = [ "v5_2" ];
          "v5_6" = [ "v5_4" ];
        };
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.9.8";
        edition = "2015";
        sha256 = "0rvam5r0p3a6qhc18scqpvpgb3ckzyqxpgdfyjnghh8ja7byi039";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
          "Joshua Barretto <joshua.s.barretto@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api";
            rename = "lock_api_crate";
            optional = true;
          }
        ];
        features = {
          "barrier" = [ "mutex" ];
          "default" = [ "lock_api" "mutex" "spin_mutex" "rwlock" "once" "lazy" "barrier" ];
          "fair_mutex" = [ "mutex" ];
          "lazy" = [ "once" ];
          "lock_api" = [ "lock_api_crate" ];
          "lock_api_crate" = [ "dep:lock_api_crate" ];
          "portable-atomic" = [ "dep:portable-atomic" ];
          "portable_atomic" = [ "portable-atomic" ];
          "spin_mutex" = [ "mutex" ];
          "ticket_mutex" = [ "mutex" ];
          "use_ticket_mutex" = [ "mutex" "ticket_mutex" ];
        };
        resolvedDefaultFeatures = [ "barrier" "default" "lazy" "lock_api" "lock_api_crate" "mutex" "once" "rwlock" "spin_mutex" ];
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0gsl6xmw10gvn3zs1rv99laj5ig7ylffnh71f9l34js4nr4r7sx2";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "strum" = rec {
        crateName = "strum";
        version = "0.26.3";
        edition = "2018";
        sha256 = "01lgl6jvrf4j28v5kmx9bp480ygf1nhvac8b4p7rcj9hxw50zv4g";
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "strum_macros" ];
          "phf" = [ "dep:phf" ];
          "strum_macros" = [ "dep:strum_macros" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "std" "strum_macros" ];
      };
      "strum_macros" = rec {
        crateName = "strum_macros";
        version = "0.26.4";
        edition = "2018";
        sha256 = "1gl1wmq24b8md527cpyd5bw9rkbqldd7k1h38kf5ajd2ln2ywssc";
        procMacro = true;
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "rustversion";
            packageId = "rustversion";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "parsing" "extra-traits" ];
          }
        ];

      };
      "subtle" = rec {
        crateName = "subtle";
        version = "2.6.1";
        edition = "2018";
        sha256 = "14ijxaymghbl1p0wql9cib5zlwiina7kall6w7g89csprkgbvhhk";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "syn 1.0.109" = rec {
        crateName = "syn";
        version = "1.0.109";
        edition = "2018";
        sha256 = "0ds2if4600bd59wsv7jjgfkayfzy3hnazs394kz6zdkmna8l3dkj";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-ident";
            packageId = "unicode-ident";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
          "quote" = [ "dep:quote" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
      "syn 2.0.72" = rec {
        crateName = "syn";
        version = "2.0.72";
        edition = "2021";
        sha256 = "1bx8wwx4ylyjz51dwd83b22j46wm3r3h80ic7wyhkn5dyadrnjyw";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-ident";
            packageId = "unicode-ident";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "dep:quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote?/proc-macro" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.6";
        edition = "2018";
        sha256 = "03r1lydbf3japnlpc4wka7y90pmz1i0danaj3f9a7b431akdlszk";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn 1.0.109";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "system-deps" = rec {
        crateName = "system-deps";
        version = "6.2.2";
        edition = "2018";
        sha256 = "0j93ryw031n3h8b0nfpj5xwh3ify636xmv8kxianvlyyipmkbrd3";
        authors = [
          "Guillaume Desmottes <guillaume.desmottes@collabora.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "cfg-expr";
            packageId = "cfg-expr";
            features = [ "targets" ];
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "toml";
            packageId = "toml";
            usesDefaultFeatures = false;
            features = [ "parse" ];
          }
          {
            name = "version-compare";
            packageId = "version-compare";
          }
        ];

      };
      "target-lexicon" = rec {
        crateName = "target-lexicon";
        version = "0.12.15";
        edition = "2018";
        sha256 = "1hm7df7fr3s3xy5l4a7vb61mfsdniqaxzgn9a35xszi5gixk0ws8";
        authors = [
          "Dan Gohman <sunfish@mozilla.com>"
        ];
        features = {
          "serde" = [ "dep:serde" ];
          "serde_support" = [ "serde" "std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "temp-dir" = rec {
        crateName = "temp-dir";
        version = "0.1.13";
        edition = "2021";
        sha256 = "0cbj4y3c5494i7ljhnqa38cgdkybl33p70cv5wrfbw00xil7j8hz";
        authors = [
          "Michael Leonhard <michael@leonhardllc.com>"
        ];

      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.10.1";
        edition = "2021";
        sha256 = "1wdzz35ri168jn9al4s1g2rnsrr5ci91khgarc2rvpb3nappzdw5";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <me@jasonwhite.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "rustix";
            packageId = "rustix";
            target = { target, features }: ((target."unix" or false) || ("wasi" == target."os" or null));
            features = [ "fs" ];
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Storage_FileSystem" "Win32_Foundation" ];
          }
        ];
        features = {
        };
      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.63";
        edition = "2021";
        sha256 = "092p83mf4p1vkjb2j6h6z96dan4raq2simhirjv12slbndq26d60";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];

      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.63";
        edition = "2021";
        sha256 = "0qd21l2jjrkvnpr5da3l3b58v4wmrkn6aa0h1z5dg6kb8rc8nmd4";
        procMacro = true;
        libName = "thiserror_impl";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
          }
        ];

      };
      "tiff" = rec {
        crateName = "tiff";
        version = "0.9.1";
        edition = "2021";
        sha256 = "0ghyxlz566dzc3scvgmzys11dhq2ri77kb8sznjakijlxby104xs";
        authors = [
          "The image-rs Developers"
        ];
        dependencies = [
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "jpeg-decoder";
            packageId = "jpeg-decoder";
            rename = "jpeg";
            usesDefaultFeatures = false;
          }
          {
            name = "weezl";
            packageId = "weezl";
          }
        ];

      };
      "tinyvec" = rec {
        crateName = "tinyvec";
        version = "1.8.0";
        edition = "2018";
        sha256 = "0f5rf6a2wzyv6w4jmfga9iw7rp9fp5gf4d604xgjsf3d9wgqhpj4";
        authors = [
          "Lokathor <zefria@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec_macros";
            packageId = "tinyvec_macros";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "tinyvec_macros" ];
          "arbitrary" = [ "dep:arbitrary" ];
          "real_blackbox" = [ "criterion/real_blackbox" ];
          "rustc_1_57" = [ "rustc_1_55" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "alloc" ];
          "tinyvec_macros" = [ "dep:tinyvec_macros" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "tinyvec_macros" ];
      };
      "tinyvec_macros" = rec {
        crateName = "tinyvec_macros";
        version = "0.1.1";
        edition = "2018";
        sha256 = "081gag86208sc3y6sdkshgw3vysm5d34p431dzw0bshz66ncng0z";
        authors = [
          "Soveu <marx.tomasz@gmail.com>"
        ];

      };
      "tokio" = rec {
        crateName = "tokio";
        version = "1.38.1";
        edition = "2021";
        sha256 = "1ps6b9404r4w7psqwl2qxbhnf6cmvandaj4pw0wg85h6z2lsnb7b";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            target = { target, features }: (target."tokio_taskdump" or false);
          }
          {
            name = "bytes";
            packageId = "bytes";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "mio";
            packageId = "mio";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "socket2";
            packageId = "socket2";
            optional = true;
            target = { target, features }: (!(builtins.elem "wasm" target."family"));
            features = [ "all" ];
          }
          {
            name = "tokio-macros";
            packageId = "tokio-macros";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."tokio_unstable" or false);
            features = [ "std" ];
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.48.0";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = {target, features}: (target."unix" or false);
          }
          {
            name = "socket2";
            packageId = "socket2";
            target = {target, features}: (!(builtins.elem "wasm" target."family"));
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.48.0";
            target = {target, features}: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_Security_Authorization" ];
          }
        ];
        features = {
          "bytes" = [ "dep:bytes" ];
          "full" = [ "fs" "io-util" "io-std" "macros" "net" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "sync" "time" ];
          "io-util" = [ "bytes" ];
          "libc" = [ "dep:libc" ];
          "macros" = [ "tokio-macros" ];
          "mio" = [ "dep:mio" ];
          "net" = [ "libc" "mio/os-poll" "mio/os-ext" "mio/net" "socket2" "windows-sys/Win32_Foundation" "windows-sys/Win32_Security" "windows-sys/Win32_Storage_FileSystem" "windows-sys/Win32_System_Pipes" "windows-sys/Win32_System_SystemServices" ];
          "num_cpus" = [ "dep:num_cpus" ];
          "parking_lot" = [ "dep:parking_lot" ];
          "process" = [ "bytes" "libc" "mio/os-poll" "mio/os-ext" "mio/net" "signal-hook-registry" "windows-sys/Win32_Foundation" "windows-sys/Win32_System_Threading" "windows-sys/Win32_System_WindowsProgramming" ];
          "rt-multi-thread" = [ "num_cpus" "rt" ];
          "signal" = [ "libc" "mio/os-poll" "mio/net" "mio/os-ext" "signal-hook-registry" "windows-sys/Win32_Foundation" "windows-sys/Win32_System_Console" ];
          "signal-hook-registry" = [ "dep:signal-hook-registry" ];
          "socket2" = [ "dep:socket2" ];
          "test-util" = [ "rt" "sync" "time" ];
          "tokio-macros" = [ "dep:tokio-macros" ];
          "tracing" = [ "dep:tracing" ];
          "windows-sys" = [ "dep:windows-sys" ];
        };
        resolvedDefaultFeatures = [ "bytes" "default" "fs" "io-util" "libc" "macros" "mio" "net" "num_cpus" "process" "rt" "rt-multi-thread" "signal-hook-registry" "socket2" "sync" "time" "tokio-macros" "tracing" "windows-sys" ];
      };
      "tokio-io-timeout" = rec {
        crateName = "tokio-io-timeout";
        version = "1.2.0";
        edition = "2018";
        sha256 = "1gx84f92q1491vj4pkn81j8pz1s3pgwnbrsdhfsa2556mli41drh";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "time" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];

      };
      "tokio-macros" = rec {
        crateName = "tokio-macros";
        version = "2.3.0";
        edition = "2021";
        sha256 = "16nkan0x9b62hnqmjqcyd71j1mgpda2sv7gfm2mvbm39l2cfjnjz";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
        ];

      };
      "tokio-rustls" = rec {
        crateName = "tokio-rustls";
        version = "0.25.0";
        edition = "2021";
        sha256 = "03w6d5aqqf084rmcmrsyq5grhydl53blaiqcl0i2yfnv187hqpkp";
        dependencies = [
          {
            name = "rustls";
            packageId = "rustls";
            usesDefaultFeatures = false;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            rename = "pki-types";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "default" = [ "logging" "tls12" "ring" ];
          "logging" = [ "rustls/logging" ];
          "ring" = [ "rustls/ring" ];
          "tls12" = [ "rustls/tls12" ];
        };
        resolvedDefaultFeatures = [ "default" "logging" "ring" "tls12" ];
      };
      "tokio-util 0.6.10" = rec {
        crateName = "tokio-util";
        version = "0.6.10";
        edition = "2018";
        sha256 = "01v5zkcxjdd5zaniqxxfl6isvd7y5qfmljpqsdyrfrvd3bh3x51n";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "__docs_rs" = [ "futures-util" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "compat" "io-util" "time" "net" "rt" ];
          "futures-io" = [ "dep:futures-io" ];
          "futures-util" = [ "dep:futures-util" ];
          "io-util" = [ "io" "tokio/rt" "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "rt" = [ "tokio/rt" ];
          "slab" = [ "dep:slab" ];
          "time" = [ "tokio/time" "slab" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" ];
      };
      "tokio-util 0.7.11" = rec {
        crateName = "tokio-util";
        version = "0.7.11";
        edition = "2021";
        sha256 = "1qcz30db6m8lxkl61b3nic4bim1symi636nhbb3rmi3i6xxv9xlw";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "__docs_rs" = [ "futures-util" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "compat" "io-util" "time" "net" "rt" ];
          "futures-io" = [ "dep:futures-io" ];
          "futures-util" = [ "dep:futures-util" ];
          "hashbrown" = [ "dep:hashbrown" ];
          "io-util" = [ "io" "tokio/rt" "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "rt" = [ "tokio/rt" "tokio/sync" "futures-util" "hashbrown" ];
          "slab" = [ "dep:slab" ];
          "time" = [ "tokio/time" "slab" ];
          "tracing" = [ "dep:tracing" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" "io" ];
      };
      "toml" = rec {
        crateName = "toml";
        version = "0.8.15";
        edition = "2021";
        sha256 = "0a2wk4xjdqw59w0jjia3b7p3yinv7wlv68xfq338hwvmpyqalb5c";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_spanned";
            packageId = "serde_spanned";
            features = [ "serde" ];
          }
          {
            name = "toml_datetime";
            packageId = "toml_datetime";
            features = [ "serde" ];
          }
          {
            name = "toml_edit";
            packageId = "toml_edit 0.22.16";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "serde" ];
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "parse" "display" ];
          "display" = [ "dep:toml_edit" "toml_edit?/display" ];
          "indexmap" = [ "dep:indexmap" ];
          "parse" = [ "dep:toml_edit" "toml_edit?/parse" ];
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "parse" ];
      };
      "toml_datetime" = rec {
        crateName = "toml_datetime";
        version = "0.6.6";
        edition = "2021";
        sha256 = "1grcrr3gh7id3cy3j700kczwwfbn04p5ncrrj369prjaj9bgvbab";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
        ];
        features = {
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "serde" ];
      };
      "toml_edit 0.19.15" = rec {
        crateName = "toml_edit";
        version = "0.19.15";
        edition = "2021";
        sha256 = "08bl7rp5g6jwmfpad9s8jpw8wjrciadpnbaswgywpr9hv9qbfnqv";
        authors = [
          "Andronik Ordian <write@reusable.software>"
          "Ed Page <eopage@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "toml_datetime";
            packageId = "toml_datetime";
          }
          {
            name = "winnow";
            packageId = "winnow 0.5.40";
          }
        ];
        features = {
          "perf" = [ "dep:kstring" ];
          "serde" = [ "dep:serde" "toml_datetime/serde" "dep:serde_spanned" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "toml_edit 0.21.1" = rec {
        crateName = "toml_edit";
        version = "0.21.1";
        edition = "2021";
        sha256 = "1qch02syrd9c8krcimfl72gyjz11fmjssh03hrg41dbqgzyk91ba";
        authors = [
          "Andronik Ordian <write@reusable.software>"
          "Ed Page <eopage@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "toml_datetime";
            packageId = "toml_datetime";
          }
          {
            name = "winnow";
            packageId = "winnow 0.5.40";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parse" "display" ];
          "parse" = [ "dep:winnow" ];
          "perf" = [ "dep:kstring" ];
          "serde" = [ "dep:serde" "toml_datetime/serde" "dep:serde_spanned" ];
        };
        resolvedDefaultFeatures = [ "default" "display" "parse" ];
      };
      "toml_edit 0.22.16" = rec {
        crateName = "toml_edit";
        version = "0.22.16";
        edition = "2021";
        sha256 = "1207pygznx57j9hrkmmfiq8mxjkba5c7g1yfjk4ij8hmir8kv3r7";
        authors = [
          "Andronik Ordian <write@reusable.software>"
          "Ed Page <eopage@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_spanned";
            packageId = "serde_spanned";
            optional = true;
            features = [ "serde" ];
          }
          {
            name = "toml_datetime";
            packageId = "toml_datetime";
          }
          {
            name = "winnow";
            packageId = "winnow 0.6.14";
            optional = true;
          }
        ];
        features = {
          "default" = [ "parse" "display" ];
          "parse" = [ "dep:winnow" ];
          "perf" = [ "dep:kstring" ];
          "serde" = [ "dep:serde" "toml_datetime/serde" "dep:serde_spanned" ];
        };
        resolvedDefaultFeatures = [ "parse" "serde" ];
      };
      "tower-service" = rec {
        crateName = "tower-service";
        version = "0.3.2";
        edition = "2018";
        sha256 = "0lmfzmmvid2yp2l36mbavhmqgsvzqf7r2wiwz73ml4xmwaf1rg5n";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];

      };
      "tracing" = rec {
        crateName = "tracing";
        version = "0.1.40";
        edition = "2018";
        sha256 = "1vv48dac9zgj9650pg2b4d0j3w6f3x9gbggf43scq5hrlysklln3";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite";
          }
          {
            name = "tracing-attributes";
            packageId = "tracing-attributes";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log" = [ "dep:log" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
          "tracing-attributes" = [ "dep:tracing-attributes" ];
          "valuable" = [ "tracing-core/valuable" ];
        };
        resolvedDefaultFeatures = [ "attributes" "default" "log" "log-always" "std" "tracing-attributes" ];
      };
      "tracing-attributes" = rec {
        crateName = "tracing-attributes";
        version = "0.1.27";
        edition = "2018";
        sha256 = "1rvb5dn9z6d0xdj14r403z0af0bbaqhg02hq4jc97g5wds6lqw1l";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <dbarsky@amazon.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "visit-mut" "clone-impls" "extra-traits" "proc-macro" ];
          }
        ];
        features = {
        };
      };
      "tracing-core" = rec {
        crateName = "tracing-core";
        version = "0.1.32";
        edition = "2018";
        sha256 = "0m5aglin3cdwxpvbg6kz0r9r0k31j48n0kcfwsp6l49z26k3svf0";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "valuable/std" ];
          "once_cell" = [ "dep:once_cell" ];
          "std" = [ "once_cell" ];
          "valuable" = [ "dep:valuable" ];
        };
        resolvedDefaultFeatures = [ "once_cell" "std" ];
      };
      "tracing-futures" = rec {
        crateName = "tracing-futures";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1wimg0iwa2ldq7xv98lvivvf3q9ykfminig8r1bs0ig22np9bl4p";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project";
            packageId = "pin-project";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures" = [ "dep:futures" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "futures-task" = [ "dep:futures-task" ];
          "futures_01" = [ "dep:futures_01" ];
          "pin-project" = [ "dep:pin-project" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project" ];
          "tokio" = [ "dep:tokio" ];
          "tokio-executor" = [ "dep:tokio-executor" ];
        };
        resolvedDefaultFeatures = [ "default" "pin-project" "std" "std-future" ];
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.5";
        edition = "2015";
        sha256 = "0jqijrrvm1pyq34zn1jmy2vihd4jcrjlvsh4alkjahhssjnsn8g4";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "tungstenite" = rec {
        crateName = "tungstenite";
        version = "0.21.0";
        edition = "2018";
        sha256 = "1qaphb5kgwgid19p64grhv2b9kxy7f1059yy92l9kwrlx90sdwcy";
        authors = [
          "Alexey Galakhov"
          "Daniel Abramov"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
            optional = true;
          }
          {
            name = "http";
            packageId = "http 1.1.0";
            optional = true;
          }
          {
            name = "httparse";
            packageId = "httparse";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "rustls";
            packageId = "rustls";
            optional = true;
          }
          {
            name = "rustls-pki-types";
            packageId = "rustls-pki-types";
            optional = true;
          }
          {
            name = "sha1";
            packageId = "sha1";
            optional = true;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "url";
            packageId = "url";
            optional = true;
          }
          {
            name = "utf-8";
            packageId = "utf-8";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand";
          }
        ];
        features = {
          "__rustls-tls" = [ "rustls" "rustls-pki-types" ];
          "data-encoding" = [ "dep:data-encoding" ];
          "default" = [ "handshake" ];
          "handshake" = [ "data-encoding" "http" "httparse" "sha1" "url" ];
          "http" = [ "dep:http" ];
          "httparse" = [ "dep:httparse" ];
          "native-tls" = [ "native-tls-crate" ];
          "native-tls-crate" = [ "dep:native-tls-crate" ];
          "native-tls-vendored" = [ "native-tls" "native-tls-crate/vendored" ];
          "rustls" = [ "dep:rustls" ];
          "rustls-native-certs" = [ "dep:rustls-native-certs" ];
          "rustls-pki-types" = [ "dep:rustls-pki-types" ];
          "rustls-tls-native-roots" = [ "__rustls-tls" "rustls-native-certs" ];
          "rustls-tls-webpki-roots" = [ "__rustls-tls" "webpki-roots" ];
          "sha1" = [ "dep:sha1" ];
          "url" = [ "dep:url" ];
          "webpki-roots" = [ "dep:webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "__rustls-tls" "data-encoding" "handshake" "http" "httparse" "rustls" "rustls-pki-types" "sha1" "url" ];
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.17.0";
        edition = "2018";
        sha256 = "09dqxv69m9lj9zvv6xw5vxaqx15ps0vxyy5myg33i0kbqvq0pzs2";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
          "scale-info" = [ "dep:scale-info" ];
          "scale_info" = [ "scale-info/derive" ];
        };
      };
      "uds_windows" = rec {
        crateName = "uds_windows";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1fb4y65pw0rsp0gyfyinjazlzxz1f6zv7j4zmb20l5pxwv1ypnl9";
        authors = [
          "Azure IoT Edge Devs"
          "Harald Hoyer <harald@redhat.com>"
        ];
        dependencies = [
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" "ws2def" "minwinbase" "ntdef" "processthreadsapi" "handleapi" "ws2tcpip" "winbase" ];
          }
        ];

      };
      "unicase" = rec {
        crateName = "unicase";
        version = "2.7.0";
        edition = "2015";
        sha256 = "12gd74j79f94k4clxpf06l99wiv4p30wjr0qm04ihqk9zgdd9lpp";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.15";
        edition = "2018";
        sha256 = "0xcdxm7h0ydyprwpcbh436rbs6s6lph7f3gr527lzgv6lw053y88";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "default" = [ "std" "hardcoded-data" ];
          "flame" = [ "dep:flame" ];
          "flame_it" = [ "flame" "flamer" ];
          "flamer" = [ "dep:flamer" ];
          "serde" = [ "dep:serde" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "hardcoded-data" "std" ];
      };
      "unicode-ident" = rec {
        crateName = "unicode-ident";
        version = "1.0.12";
        edition = "2018";
        sha256 = "0jzf1znfpb2gx8nr8mvmyqs1crnv79l57nxnbiszc7xf7ynbjm1k";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.23";
        edition = "2018";
        sha256 = "1x81a50h2zxigj74b9bqjsirxxbyhmis54kg600xj213vf31cvd5";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.2.4";
        edition = "2015";
        sha256 = "131dfzf7d8fsr1ivch34x42c2d1ik5ig3g78brxncnn0r1sdyqpr";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "universal-hash" = rec {
        crateName = "universal-hash";
        version = "0.5.1";
        edition = "2021";
        sha256 = "1sh79x677zkncasa95wz05b36134822w6qxmi1ck05fwi33f47gw";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-common";
            packageId = "crypto-common";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "crypto-common/std" ];
        };
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1ha7ib98vkc538x0z60gfn0fc5whqdd85mb87dvisdcaifi6vjwf";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];

      };
      "url" = rec {
        crateName = "url";
        version = "2.5.2";
        edition = "2018";
        sha256 = "0v2dx50mx7xzl9454cl5qmpjnhkbahmn59gd3apyipbgyyylsy12";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "idna";
            packageId = "idna";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "utf-8" = rec {
        crateName = "utf-8";
        version = "0.7.6";
        edition = "2015";
        sha256 = "1a9ns3fvgird0snjkd3wbdhwd3zdpc2h5gpyybrfr6ra5pkqxk09";
        libName = "utf8";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];

      };
      "utf8-width" = rec {
        crateName = "utf8-width";
        version = "0.1.7";
        edition = "2021";
        sha256 = "1qwj8c0fg8cpn8hq7c9xzz26kdz6ci32bf0madz57a2xi578vgc6";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];

      };
      "utf8parse" = rec {
        crateName = "utf8parse";
        version = "0.2.2";
        edition = "2018";
        sha256 = "088807qwjq46azicqwbhlmzwrbkz7l4hpw43sdkdyyk524vdxaq6";
        authors = [
          "Joe Wilm <joe@jwilm.com>"
          "Christian Duerr <contact@christianduerr.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "uuid" = rec {
        crateName = "uuid";
        version = "1.10.0";
        edition = "2018";
        sha256 = "0503gvp08dh5mnm3f0ffqgisj6x3mbs53dmnn1lm19pga43a1pw1";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary" = [ "dep:arbitrary" ];
          "atomic" = [ "dep:atomic" ];
          "borsh" = [ "dep:borsh" "dep:borsh-derive" ];
          "bytemuck" = [ "dep:bytemuck" ];
          "default" = [ "std" ];
          "fast-rng" = [ "rng" "dep:rand" ];
          "js" = [ "dep:wasm-bindgen" "getrandom?/js" ];
          "macro-diagnostics" = [ "dep:uuid-macro-internal" ];
          "md5" = [ "dep:md-5" ];
          "rng" = [ "dep:getrandom" ];
          "serde" = [ "dep:serde" ];
          "sha1" = [ "dep:sha1_smol" ];
          "slog" = [ "dep:slog" ];
          "v1" = [ "atomic" ];
          "v3" = [ "md5" ];
          "v4" = [ "rng" ];
          "v5" = [ "sha1" ];
          "v6" = [ "atomic" ];
          "v7" = [ "rng" ];
          "zerocopy" = [ "dep:zerocopy" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "v_frame" = rec {
        crateName = "v_frame";
        version = "0.3.8";
        edition = "2021";
        sha256 = "0az9nd6qi1gyikh9yb3lhm453kf7d5isd6xai3j13kds4jm2mwyn";
        authors = [
          "Luca Barbato <lu_zero@gentoo.org>"
        ];
        dependencies = [
          {
            name = "aligned-vec";
            packageId = "aligned-vec";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "wasm32-unknown-unknown");
          }
        ];
        features = {
          "profiling" = [ "dep:profiling" ];
          "serde" = [ "dep:serde" ];
          "serialize" = [ "serde" "aligned-vec/serde" ];
          "tracing" = [ "profiling" "dep:tracing" "profiling/profile-with-tracing" ];
        };
      };
      "version-compare" = rec {
        crateName = "version-compare";
        version = "0.2.0";
        edition = "2021";
        sha256 = "12y9262fhjm1wp0aj3mwhads7kv0jz8h168nn5fb8b43nwf9abl5";
        authors = [
          "Tim Visee <3a4fb3964f@sinenomine.email>"
        ];

      };
      "version_check" = rec {
        crateName = "version_check";
        version = "0.9.4";
        edition = "2015";
        sha256 = "0gs8grwdlgh0xq660d7wr80x14vxbizmd8dbp29p2pdncx8lp1s9";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];

      };
      "want" = rec {
        crateName = "want";
        version = "0.3.1";
        edition = "2018";
        sha256 = "03hbfrnvqqdchb5kgxyavb9jabwza0dmh2vw5kg0dq8rxl57d9xz";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];

      };
      "wasi" = rec {
        crateName = "wasi";
        version = "0.11.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "08z4hxwkpdpalxjps1ai9y7ihin26y9f476i53dv98v45gkqg3cw";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "compiler_builtins" = [ "dep:compiler_builtins" ];
          "core" = [ "dep:core" ];
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
          "rustc-std-workspace-alloc" = [ "dep:rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.92";
        edition = "2018";
        sha256 = "1a4mcw13nsk3fr8fxjzf9kk1wj88xkfsmnm0pjraw01ryqfm7qjb";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "gg-alloc" = [ "wasm-bindgen-test/gg-alloc" ];
          "serde" = [ "dep:serde" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "serde_json" = [ "dep:serde_json" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.92";
        edition = "2018";
        sha256 = "1nj7wxbi49f0rw9d44rjzms26xlw6r76b2mrggx8jfbdjrxphkb1";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.92";
        edition = "2018";
        sha256 = "09npa1srjjabd6nfph5yc03jb26sycjlxhy0c2a1pdrpx4yq5y51";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.92";
        edition = "2018";
        sha256 = "1dqv2xs8zcyw4kjgzj84bknp2h76phmsb3n7j6hn396h4ssifkz9";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "visit" "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.92";
        edition = "2018";
        links = "wasm_bindgen";
        sha256 = "15kyavsrna2cvy30kg03va257fraf9x00ny554vxngvpyaa0q6dg";
        authors = [
          "The wasm-bindgen Developers"
        ];

      };
      "weezl" = rec {
        crateName = "weezl";
        version = "0.1.8";
        edition = "2018";
        crateBin = [];
        sha256 = "10lhndjgs6y5djpg3b420xngcr6jkmv70q8rb1qcicbily35pa2k";
        authors = [
          "The image-rs Developers"
        ];
        features = {
          "async" = [ "futures" "std" ];
          "default" = [ "std" ];
          "futures" = [ "dep:futures" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "winapi" = rec {
        crateName = "winapi";
        version = "0.3.9";
        edition = "2015";
        sha256 = "06gl025x418lchw1wxj64ycr7gha83m44cjr5sarhynd9xkrm0sw";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "errhandlingapi" "fileapi" "handleapi" "minwinbase" "minwindef" "ntdef" "ntstatus" "processthreadsapi" "std" "winbase" "winerror" "winnls" "winnt" "winsock2" "ws2def" "ws2tcpip" ];
      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "windows-core" = rec {
        crateName = "windows-core";
        version = "0.52.0";
        edition = "2021";
        sha256 = "1nc3qv7sy24x0nlnb32f7alzpd6f72l4p24vl65vydbyil669ark";
        authors = [
          "Microsoft"
        ];
        dependencies = [
          {
            name = "windows-targets";
            packageId = "windows-targets 0.52.6";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "windows-sys 0.48.0" = rec {
        crateName = "windows-sys";
        version = "0.48.0";
        edition = "2018";
        sha256 = "1aan23v5gs7gya1lc46hqn9mdh8yph3fhxmhxlw36pn6pqc28zb7";
        authors = [
          "Microsoft"
        ];
        dependencies = [
          {
            name = "windows-targets";
            packageId = "windows-targets 0.48.5";
          }
        ];
        features = {
          "Wdk_System" = [ "Wdk" ];
          "Wdk_System_OfflineRegistry" = [ "Wdk_System" ];
          "Win32_Data" = [ "Win32" ];
          "Win32_Data_HtmlHelp" = [ "Win32_Data" ];
          "Win32_Data_RightsManagement" = [ "Win32_Data" ];
          "Win32_Data_Xml" = [ "Win32_Data" ];
          "Win32_Data_Xml_MsXml" = [ "Win32_Data_Xml" ];
          "Win32_Data_Xml_XmlLite" = [ "Win32_Data_Xml" ];
          "Win32_Devices" = [ "Win32" ];
          "Win32_Devices_AllJoyn" = [ "Win32_Devices" ];
          "Win32_Devices_BiometricFramework" = [ "Win32_Devices" ];
          "Win32_Devices_Bluetooth" = [ "Win32_Devices" ];
          "Win32_Devices_Communication" = [ "Win32_Devices" ];
          "Win32_Devices_DeviceAccess" = [ "Win32_Devices" ];
          "Win32_Devices_DeviceAndDriverInstallation" = [ "Win32_Devices" ];
          "Win32_Devices_DeviceQuery" = [ "Win32_Devices" ];
          "Win32_Devices_Display" = [ "Win32_Devices" ];
          "Win32_Devices_Enumeration" = [ "Win32_Devices" ];
          "Win32_Devices_Enumeration_Pnp" = [ "Win32_Devices_Enumeration" ];
          "Win32_Devices_Fax" = [ "Win32_Devices" ];
          "Win32_Devices_FunctionDiscovery" = [ "Win32_Devices" ];
          "Win32_Devices_Geolocation" = [ "Win32_Devices" ];
          "Win32_Devices_HumanInterfaceDevice" = [ "Win32_Devices" ];
          "Win32_Devices_ImageAcquisition" = [ "Win32_Devices" ];
          "Win32_Devices_PortableDevices" = [ "Win32_Devices" ];
          "Win32_Devices_Properties" = [ "Win32_Devices" ];
          "Win32_Devices_Pwm" = [ "Win32_Devices" ];
          "Win32_Devices_Sensors" = [ "Win32_Devices" ];
          "Win32_Devices_SerialCommunication" = [ "Win32_Devices" ];
          "Win32_Devices_Tapi" = [ "Win32_Devices" ];
          "Win32_Devices_Usb" = [ "Win32_Devices" ];
          "Win32_Devices_WebServicesOnDevices" = [ "Win32_Devices" ];
          "Win32_Foundation" = [ "Win32" ];
          "Win32_Gaming" = [ "Win32" ];
          "Win32_Globalization" = [ "Win32" ];
          "Win32_Graphics" = [ "Win32" ];
          "Win32_Graphics_Dwm" = [ "Win32_Graphics" ];
          "Win32_Graphics_Gdi" = [ "Win32_Graphics" ];
          "Win32_Graphics_Hlsl" = [ "Win32_Graphics" ];
          "Win32_Graphics_OpenGL" = [ "Win32_Graphics" ];
          "Win32_Graphics_Printing" = [ "Win32_Graphics" ];
          "Win32_Graphics_Printing_PrintTicket" = [ "Win32_Graphics_Printing" ];
          "Win32_Management" = [ "Win32" ];
          "Win32_Management_MobileDeviceManagementRegistration" = [ "Win32_Management" ];
          "Win32_Media" = [ "Win32" ];
          "Win32_Media_Audio" = [ "Win32_Media" ];
          "Win32_Media_Audio_Apo" = [ "Win32_Media_Audio" ];
          "Win32_Media_Audio_DirectMusic" = [ "Win32_Media_Audio" ];
          "Win32_Media_Audio_Endpoints" = [ "Win32_Media_Audio" ];
          "Win32_Media_Audio_XAudio2" = [ "Win32_Media_Audio" ];
          "Win32_Media_DeviceManager" = [ "Win32_Media" ];
          "Win32_Media_DxMediaObjects" = [ "Win32_Media" ];
          "Win32_Media_KernelStreaming" = [ "Win32_Media" ];
          "Win32_Media_LibrarySharingServices" = [ "Win32_Media" ];
          "Win32_Media_MediaPlayer" = [ "Win32_Media" ];
          "Win32_Media_Multimedia" = [ "Win32_Media" ];
          "Win32_Media_Speech" = [ "Win32_Media" ];
          "Win32_Media_Streaming" = [ "Win32_Media" ];
          "Win32_Media_WindowsMediaFormat" = [ "Win32_Media" ];
          "Win32_NetworkManagement" = [ "Win32" ];
          "Win32_NetworkManagement_Dhcp" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Dns" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_InternetConnectionWizard" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_IpHelper" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_MobileBroadband" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Multicast" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Ndis" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetBios" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetManagement" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetShell" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetworkDiagnosticsFramework" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetworkPolicyServer" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_P2P" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_QoS" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Rras" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Snmp" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WNet" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WebDav" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WiFi" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsConnectNow" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsConnectionManager" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsFilteringPlatform" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsFirewall" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsNetworkVirtualization" = [ "Win32_NetworkManagement" ];
          "Win32_Networking" = [ "Win32" ];
          "Win32_Networking_ActiveDirectory" = [ "Win32_Networking" ];
          "Win32_Networking_BackgroundIntelligentTransferService" = [ "Win32_Networking" ];
          "Win32_Networking_Clustering" = [ "Win32_Networking" ];
          "Win32_Networking_HttpServer" = [ "Win32_Networking" ];
          "Win32_Networking_Ldap" = [ "Win32_Networking" ];
          "Win32_Networking_NetworkListManager" = [ "Win32_Networking" ];
          "Win32_Networking_RemoteDifferentialCompression" = [ "Win32_Networking" ];
          "Win32_Networking_WebSocket" = [ "Win32_Networking" ];
          "Win32_Networking_WinHttp" = [ "Win32_Networking" ];
          "Win32_Networking_WinInet" = [ "Win32_Networking" ];
          "Win32_Networking_WinSock" = [ "Win32_Networking" ];
          "Win32_Networking_WindowsWebServices" = [ "Win32_Networking" ];
          "Win32_Security" = [ "Win32" ];
          "Win32_Security_AppLocker" = [ "Win32_Security" ];
          "Win32_Security_Authentication" = [ "Win32_Security" ];
          "Win32_Security_Authentication_Identity" = [ "Win32_Security_Authentication" ];
          "Win32_Security_Authentication_Identity_Provider" = [ "Win32_Security_Authentication_Identity" ];
          "Win32_Security_Authorization" = [ "Win32_Security" ];
          "Win32_Security_Authorization_UI" = [ "Win32_Security_Authorization" ];
          "Win32_Security_ConfigurationSnapin" = [ "Win32_Security" ];
          "Win32_Security_Credentials" = [ "Win32_Security" ];
          "Win32_Security_Cryptography" = [ "Win32_Security" ];
          "Win32_Security_Cryptography_Catalog" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_Certificates" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_Sip" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_UI" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_DiagnosticDataQuery" = [ "Win32_Security" ];
          "Win32_Security_DirectoryServices" = [ "Win32_Security" ];
          "Win32_Security_EnterpriseData" = [ "Win32_Security" ];
          "Win32_Security_ExtensibleAuthenticationProtocol" = [ "Win32_Security" ];
          "Win32_Security_Isolation" = [ "Win32_Security" ];
          "Win32_Security_LicenseProtection" = [ "Win32_Security" ];
          "Win32_Security_NetworkAccessProtection" = [ "Win32_Security" ];
          "Win32_Security_Tpm" = [ "Win32_Security" ];
          "Win32_Security_WinTrust" = [ "Win32_Security" ];
          "Win32_Security_WinWlx" = [ "Win32_Security" ];
          "Win32_Storage" = [ "Win32" ];
          "Win32_Storage_Cabinets" = [ "Win32_Storage" ];
          "Win32_Storage_CloudFilters" = [ "Win32_Storage" ];
          "Win32_Storage_Compression" = [ "Win32_Storage" ];
          "Win32_Storage_DataDeduplication" = [ "Win32_Storage" ];
          "Win32_Storage_DistributedFileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_EnhancedStorage" = [ "Win32_Storage" ];
          "Win32_Storage_FileHistory" = [ "Win32_Storage" ];
          "Win32_Storage_FileServerResourceManager" = [ "Win32_Storage" ];
          "Win32_Storage_FileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_Imapi" = [ "Win32_Storage" ];
          "Win32_Storage_IndexServer" = [ "Win32_Storage" ];
          "Win32_Storage_InstallableFileSystems" = [ "Win32_Storage" ];
          "Win32_Storage_IscsiDisc" = [ "Win32_Storage" ];
          "Win32_Storage_Jet" = [ "Win32_Storage" ];
          "Win32_Storage_OfflineFiles" = [ "Win32_Storage" ];
          "Win32_Storage_OperationRecorder" = [ "Win32_Storage" ];
          "Win32_Storage_Packaging" = [ "Win32_Storage" ];
          "Win32_Storage_Packaging_Appx" = [ "Win32_Storage_Packaging" ];
          "Win32_Storage_Packaging_Opc" = [ "Win32_Storage_Packaging" ];
          "Win32_Storage_ProjectedFileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_StructuredStorage" = [ "Win32_Storage" ];
          "Win32_Storage_Vhd" = [ "Win32_Storage" ];
          "Win32_Storage_VirtualDiskService" = [ "Win32_Storage" ];
          "Win32_Storage_Vss" = [ "Win32_Storage" ];
          "Win32_Storage_Xps" = [ "Win32_Storage" ];
          "Win32_Storage_Xps_Printing" = [ "Win32_Storage_Xps" ];
          "Win32_System" = [ "Win32" ];
          "Win32_System_AddressBook" = [ "Win32_System" ];
          "Win32_System_Antimalware" = [ "Win32_System" ];
          "Win32_System_ApplicationInstallationAndServicing" = [ "Win32_System" ];
          "Win32_System_ApplicationVerifier" = [ "Win32_System" ];
          "Win32_System_AssessmentTool" = [ "Win32_System" ];
          "Win32_System_ClrHosting" = [ "Win32_System" ];
          "Win32_System_Com" = [ "Win32_System" ];
          "Win32_System_Com_CallObj" = [ "Win32_System_Com" ];
          "Win32_System_Com_ChannelCredentials" = [ "Win32_System_Com" ];
          "Win32_System_Com_Events" = [ "Win32_System_Com" ];
          "Win32_System_Com_Marshal" = [ "Win32_System_Com" ];
          "Win32_System_Com_StructuredStorage" = [ "Win32_System_Com" ];
          "Win32_System_Com_UI" = [ "Win32_System_Com" ];
          "Win32_System_Com_Urlmon" = [ "Win32_System_Com" ];
          "Win32_System_ComponentServices" = [ "Win32_System" ];
          "Win32_System_Console" = [ "Win32_System" ];
          "Win32_System_Contacts" = [ "Win32_System" ];
          "Win32_System_CorrelationVector" = [ "Win32_System" ];
          "Win32_System_DataExchange" = [ "Win32_System" ];
          "Win32_System_DeploymentServices" = [ "Win32_System" ];
          "Win32_System_DesktopSharing" = [ "Win32_System" ];
          "Win32_System_DeveloperLicensing" = [ "Win32_System" ];
          "Win32_System_Diagnostics" = [ "Win32_System" ];
          "Win32_System_Diagnostics_Ceip" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_ClrProfiling" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_Debug" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_Debug_ActiveScript" = [ "Win32_System_Diagnostics_Debug" ];
          "Win32_System_Diagnostics_Debug_Extensions" = [ "Win32_System_Diagnostics_Debug" ];
          "Win32_System_Diagnostics_Etw" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_ProcessSnapshotting" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_ToolHelp" = [ "Win32_System_Diagnostics" ];
          "Win32_System_DistributedTransactionCoordinator" = [ "Win32_System" ];
          "Win32_System_Environment" = [ "Win32_System" ];
          "Win32_System_ErrorReporting" = [ "Win32_System" ];
          "Win32_System_EventCollector" = [ "Win32_System" ];
          "Win32_System_EventLog" = [ "Win32_System" ];
          "Win32_System_EventNotificationService" = [ "Win32_System" ];
          "Win32_System_GroupPolicy" = [ "Win32_System" ];
          "Win32_System_HostCompute" = [ "Win32_System" ];
          "Win32_System_HostComputeNetwork" = [ "Win32_System" ];
          "Win32_System_HostComputeSystem" = [ "Win32_System" ];
          "Win32_System_Hypervisor" = [ "Win32_System" ];
          "Win32_System_IO" = [ "Win32_System" ];
          "Win32_System_Iis" = [ "Win32_System" ];
          "Win32_System_Ioctl" = [ "Win32_System" ];
          "Win32_System_JobObjects" = [ "Win32_System" ];
          "Win32_System_Js" = [ "Win32_System" ];
          "Win32_System_Kernel" = [ "Win32_System" ];
          "Win32_System_LibraryLoader" = [ "Win32_System" ];
          "Win32_System_Mailslots" = [ "Win32_System" ];
          "Win32_System_Mapi" = [ "Win32_System" ];
          "Win32_System_Memory" = [ "Win32_System" ];
          "Win32_System_Memory_NonVolatile" = [ "Win32_System_Memory" ];
          "Win32_System_MessageQueuing" = [ "Win32_System" ];
          "Win32_System_MixedReality" = [ "Win32_System" ];
          "Win32_System_Mmc" = [ "Win32_System" ];
          "Win32_System_Ole" = [ "Win32_System" ];
          "Win32_System_ParentalControls" = [ "Win32_System" ];
          "Win32_System_PasswordManagement" = [ "Win32_System" ];
          "Win32_System_Performance" = [ "Win32_System" ];
          "Win32_System_Performance_HardwareCounterProfiling" = [ "Win32_System_Performance" ];
          "Win32_System_Pipes" = [ "Win32_System" ];
          "Win32_System_Power" = [ "Win32_System" ];
          "Win32_System_ProcessStatus" = [ "Win32_System" ];
          "Win32_System_RealTimeCommunications" = [ "Win32_System" ];
          "Win32_System_Recovery" = [ "Win32_System" ];
          "Win32_System_Registry" = [ "Win32_System" ];
          "Win32_System_RemoteAssistance" = [ "Win32_System" ];
          "Win32_System_RemoteDesktop" = [ "Win32_System" ];
          "Win32_System_RemoteManagement" = [ "Win32_System" ];
          "Win32_System_RestartManager" = [ "Win32_System" ];
          "Win32_System_Restore" = [ "Win32_System" ];
          "Win32_System_Rpc" = [ "Win32_System" ];
          "Win32_System_Search" = [ "Win32_System" ];
          "Win32_System_Search_Common" = [ "Win32_System_Search" ];
          "Win32_System_SecurityCenter" = [ "Win32_System" ];
          "Win32_System_ServerBackup" = [ "Win32_System" ];
          "Win32_System_Services" = [ "Win32_System" ];
          "Win32_System_SettingsManagementInfrastructure" = [ "Win32_System" ];
          "Win32_System_SetupAndMigration" = [ "Win32_System" ];
          "Win32_System_Shutdown" = [ "Win32_System" ];
          "Win32_System_StationsAndDesktops" = [ "Win32_System" ];
          "Win32_System_SubsystemForLinux" = [ "Win32_System" ];
          "Win32_System_SystemInformation" = [ "Win32_System" ];
          "Win32_System_SystemServices" = [ "Win32_System" ];
          "Win32_System_TaskScheduler" = [ "Win32_System" ];
          "Win32_System_Threading" = [ "Win32_System" ];
          "Win32_System_Time" = [ "Win32_System" ];
          "Win32_System_TpmBaseServices" = [ "Win32_System" ];
          "Win32_System_UpdateAgent" = [ "Win32_System" ];
          "Win32_System_UpdateAssessment" = [ "Win32_System" ];
          "Win32_System_UserAccessLogging" = [ "Win32_System" ];
          "Win32_System_VirtualDosMachines" = [ "Win32_System" ];
          "Win32_System_WindowsProgramming" = [ "Win32_System" ];
          "Win32_System_WindowsSync" = [ "Win32_System" ];
          "Win32_System_Wmi" = [ "Win32_System" ];
          "Win32_UI" = [ "Win32" ];
          "Win32_UI_Accessibility" = [ "Win32_UI" ];
          "Win32_UI_Animation" = [ "Win32_UI" ];
          "Win32_UI_ColorSystem" = [ "Win32_UI" ];
          "Win32_UI_Controls" = [ "Win32_UI" ];
          "Win32_UI_Controls_Dialogs" = [ "Win32_UI_Controls" ];
          "Win32_UI_Controls_RichEdit" = [ "Win32_UI_Controls" ];
          "Win32_UI_HiDpi" = [ "Win32_UI" ];
          "Win32_UI_Input" = [ "Win32_UI" ];
          "Win32_UI_Input_Ime" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Ink" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_KeyboardAndMouse" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Pointer" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Radial" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Touch" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_XboxController" = [ "Win32_UI_Input" ];
          "Win32_UI_InteractionContext" = [ "Win32_UI" ];
          "Win32_UI_LegacyWindowsEnvironmentFeatures" = [ "Win32_UI" ];
          "Win32_UI_Magnification" = [ "Win32_UI" ];
          "Win32_UI_Notifications" = [ "Win32_UI" ];
          "Win32_UI_Ribbon" = [ "Win32_UI" ];
          "Win32_UI_Shell" = [ "Win32_UI" ];
          "Win32_UI_Shell_Common" = [ "Win32_UI_Shell" ];
          "Win32_UI_Shell_PropertiesSystem" = [ "Win32_UI_Shell" ];
          "Win32_UI_TabletPC" = [ "Win32_UI" ];
          "Win32_UI_TextServices" = [ "Win32_UI" ];
          "Win32_UI_WindowsAndMessaging" = [ "Win32_UI" ];
          "Win32_UI_Wpf" = [ "Win32_UI" ];
          "Win32_Web" = [ "Win32" ];
          "Win32_Web_InternetExplorer" = [ "Win32_Web" ];
        };
        resolvedDefaultFeatures = [ "Win32" "Win32_Foundation" "Win32_Networking" "Win32_Networking_WinSock" "Win32_Security" "Win32_Storage" "Win32_Storage_FileSystem" "Win32_System" "Win32_System_IO" "Win32_System_Pipes" "Win32_System_SystemServices" "Win32_System_Threading" "Win32_System_WindowsProgramming" "default" ];
      };
      "windows-sys 0.52.0" = rec {
        crateName = "windows-sys";
        version = "0.52.0";
        edition = "2021";
        sha256 = "0gd3v4ji88490zgb6b5mq5zgbvwv7zx1ibn8v3x83rwcdbryaar8";
        authors = [
          "Microsoft"
        ];
        dependencies = [
          {
            name = "windows-targets";
            packageId = "windows-targets 0.52.6";
          }
        ];
        features = {
          "Wdk_Foundation" = [ "Wdk" ];
          "Wdk_Graphics" = [ "Wdk" ];
          "Wdk_Graphics_Direct3D" = [ "Wdk_Graphics" ];
          "Wdk_Storage" = [ "Wdk" ];
          "Wdk_Storage_FileSystem" = [ "Wdk_Storage" ];
          "Wdk_Storage_FileSystem_Minifilters" = [ "Wdk_Storage_FileSystem" ];
          "Wdk_System" = [ "Wdk" ];
          "Wdk_System_IO" = [ "Wdk_System" ];
          "Wdk_System_OfflineRegistry" = [ "Wdk_System" ];
          "Wdk_System_Registry" = [ "Wdk_System" ];
          "Wdk_System_SystemInformation" = [ "Wdk_System" ];
          "Wdk_System_SystemServices" = [ "Wdk_System" ];
          "Wdk_System_Threading" = [ "Wdk_System" ];
          "Win32_Data" = [ "Win32" ];
          "Win32_Data_HtmlHelp" = [ "Win32_Data" ];
          "Win32_Data_RightsManagement" = [ "Win32_Data" ];
          "Win32_Devices" = [ "Win32" ];
          "Win32_Devices_AllJoyn" = [ "Win32_Devices" ];
          "Win32_Devices_BiometricFramework" = [ "Win32_Devices" ];
          "Win32_Devices_Bluetooth" = [ "Win32_Devices" ];
          "Win32_Devices_Communication" = [ "Win32_Devices" ];
          "Win32_Devices_DeviceAndDriverInstallation" = [ "Win32_Devices" ];
          "Win32_Devices_DeviceQuery" = [ "Win32_Devices" ];
          "Win32_Devices_Display" = [ "Win32_Devices" ];
          "Win32_Devices_Enumeration" = [ "Win32_Devices" ];
          "Win32_Devices_Enumeration_Pnp" = [ "Win32_Devices_Enumeration" ];
          "Win32_Devices_Fax" = [ "Win32_Devices" ];
          "Win32_Devices_HumanInterfaceDevice" = [ "Win32_Devices" ];
          "Win32_Devices_PortableDevices" = [ "Win32_Devices" ];
          "Win32_Devices_Properties" = [ "Win32_Devices" ];
          "Win32_Devices_Pwm" = [ "Win32_Devices" ];
          "Win32_Devices_Sensors" = [ "Win32_Devices" ];
          "Win32_Devices_SerialCommunication" = [ "Win32_Devices" ];
          "Win32_Devices_Tapi" = [ "Win32_Devices" ];
          "Win32_Devices_Usb" = [ "Win32_Devices" ];
          "Win32_Devices_WebServicesOnDevices" = [ "Win32_Devices" ];
          "Win32_Foundation" = [ "Win32" ];
          "Win32_Gaming" = [ "Win32" ];
          "Win32_Globalization" = [ "Win32" ];
          "Win32_Graphics" = [ "Win32" ];
          "Win32_Graphics_Dwm" = [ "Win32_Graphics" ];
          "Win32_Graphics_Gdi" = [ "Win32_Graphics" ];
          "Win32_Graphics_GdiPlus" = [ "Win32_Graphics" ];
          "Win32_Graphics_Hlsl" = [ "Win32_Graphics" ];
          "Win32_Graphics_OpenGL" = [ "Win32_Graphics" ];
          "Win32_Graphics_Printing" = [ "Win32_Graphics" ];
          "Win32_Graphics_Printing_PrintTicket" = [ "Win32_Graphics_Printing" ];
          "Win32_Management" = [ "Win32" ];
          "Win32_Management_MobileDeviceManagementRegistration" = [ "Win32_Management" ];
          "Win32_Media" = [ "Win32" ];
          "Win32_Media_Audio" = [ "Win32_Media" ];
          "Win32_Media_DxMediaObjects" = [ "Win32_Media" ];
          "Win32_Media_KernelStreaming" = [ "Win32_Media" ];
          "Win32_Media_Multimedia" = [ "Win32_Media" ];
          "Win32_Media_Streaming" = [ "Win32_Media" ];
          "Win32_Media_WindowsMediaFormat" = [ "Win32_Media" ];
          "Win32_NetworkManagement" = [ "Win32" ];
          "Win32_NetworkManagement_Dhcp" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Dns" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_InternetConnectionWizard" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_IpHelper" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Multicast" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Ndis" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetBios" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetManagement" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetShell" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_NetworkDiagnosticsFramework" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_P2P" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_QoS" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Rras" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_Snmp" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WNet" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WebDav" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WiFi" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsConnectionManager" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsFilteringPlatform" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsFirewall" = [ "Win32_NetworkManagement" ];
          "Win32_NetworkManagement_WindowsNetworkVirtualization" = [ "Win32_NetworkManagement" ];
          "Win32_Networking" = [ "Win32" ];
          "Win32_Networking_ActiveDirectory" = [ "Win32_Networking" ];
          "Win32_Networking_Clustering" = [ "Win32_Networking" ];
          "Win32_Networking_HttpServer" = [ "Win32_Networking" ];
          "Win32_Networking_Ldap" = [ "Win32_Networking" ];
          "Win32_Networking_WebSocket" = [ "Win32_Networking" ];
          "Win32_Networking_WinHttp" = [ "Win32_Networking" ];
          "Win32_Networking_WinInet" = [ "Win32_Networking" ];
          "Win32_Networking_WinSock" = [ "Win32_Networking" ];
          "Win32_Networking_WindowsWebServices" = [ "Win32_Networking" ];
          "Win32_Security" = [ "Win32" ];
          "Win32_Security_AppLocker" = [ "Win32_Security" ];
          "Win32_Security_Authentication" = [ "Win32_Security" ];
          "Win32_Security_Authentication_Identity" = [ "Win32_Security_Authentication" ];
          "Win32_Security_Authorization" = [ "Win32_Security" ];
          "Win32_Security_Credentials" = [ "Win32_Security" ];
          "Win32_Security_Cryptography" = [ "Win32_Security" ];
          "Win32_Security_Cryptography_Catalog" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_Certificates" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_Sip" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_Cryptography_UI" = [ "Win32_Security_Cryptography" ];
          "Win32_Security_DiagnosticDataQuery" = [ "Win32_Security" ];
          "Win32_Security_DirectoryServices" = [ "Win32_Security" ];
          "Win32_Security_EnterpriseData" = [ "Win32_Security" ];
          "Win32_Security_ExtensibleAuthenticationProtocol" = [ "Win32_Security" ];
          "Win32_Security_Isolation" = [ "Win32_Security" ];
          "Win32_Security_LicenseProtection" = [ "Win32_Security" ];
          "Win32_Security_NetworkAccessProtection" = [ "Win32_Security" ];
          "Win32_Security_WinTrust" = [ "Win32_Security" ];
          "Win32_Security_WinWlx" = [ "Win32_Security" ];
          "Win32_Storage" = [ "Win32" ];
          "Win32_Storage_Cabinets" = [ "Win32_Storage" ];
          "Win32_Storage_CloudFilters" = [ "Win32_Storage" ];
          "Win32_Storage_Compression" = [ "Win32_Storage" ];
          "Win32_Storage_DistributedFileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_FileHistory" = [ "Win32_Storage" ];
          "Win32_Storage_FileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_Imapi" = [ "Win32_Storage" ];
          "Win32_Storage_IndexServer" = [ "Win32_Storage" ];
          "Win32_Storage_InstallableFileSystems" = [ "Win32_Storage" ];
          "Win32_Storage_IscsiDisc" = [ "Win32_Storage" ];
          "Win32_Storage_Jet" = [ "Win32_Storage" ];
          "Win32_Storage_Nvme" = [ "Win32_Storage" ];
          "Win32_Storage_OfflineFiles" = [ "Win32_Storage" ];
          "Win32_Storage_OperationRecorder" = [ "Win32_Storage" ];
          "Win32_Storage_Packaging" = [ "Win32_Storage" ];
          "Win32_Storage_Packaging_Appx" = [ "Win32_Storage_Packaging" ];
          "Win32_Storage_ProjectedFileSystem" = [ "Win32_Storage" ];
          "Win32_Storage_StructuredStorage" = [ "Win32_Storage" ];
          "Win32_Storage_Vhd" = [ "Win32_Storage" ];
          "Win32_Storage_Xps" = [ "Win32_Storage" ];
          "Win32_System" = [ "Win32" ];
          "Win32_System_AddressBook" = [ "Win32_System" ];
          "Win32_System_Antimalware" = [ "Win32_System" ];
          "Win32_System_ApplicationInstallationAndServicing" = [ "Win32_System" ];
          "Win32_System_ApplicationVerifier" = [ "Win32_System" ];
          "Win32_System_ClrHosting" = [ "Win32_System" ];
          "Win32_System_Com" = [ "Win32_System" ];
          "Win32_System_Com_Marshal" = [ "Win32_System_Com" ];
          "Win32_System_Com_StructuredStorage" = [ "Win32_System_Com" ];
          "Win32_System_Com_Urlmon" = [ "Win32_System_Com" ];
          "Win32_System_ComponentServices" = [ "Win32_System" ];
          "Win32_System_Console" = [ "Win32_System" ];
          "Win32_System_CorrelationVector" = [ "Win32_System" ];
          "Win32_System_DataExchange" = [ "Win32_System" ];
          "Win32_System_DeploymentServices" = [ "Win32_System" ];
          "Win32_System_DeveloperLicensing" = [ "Win32_System" ];
          "Win32_System_Diagnostics" = [ "Win32_System" ];
          "Win32_System_Diagnostics_Ceip" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_Debug" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_Debug_Extensions" = [ "Win32_System_Diagnostics_Debug" ];
          "Win32_System_Diagnostics_Etw" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_ProcessSnapshotting" = [ "Win32_System_Diagnostics" ];
          "Win32_System_Diagnostics_ToolHelp" = [ "Win32_System_Diagnostics" ];
          "Win32_System_DistributedTransactionCoordinator" = [ "Win32_System" ];
          "Win32_System_Environment" = [ "Win32_System" ];
          "Win32_System_ErrorReporting" = [ "Win32_System" ];
          "Win32_System_EventCollector" = [ "Win32_System" ];
          "Win32_System_EventLog" = [ "Win32_System" ];
          "Win32_System_EventNotificationService" = [ "Win32_System" ];
          "Win32_System_GroupPolicy" = [ "Win32_System" ];
          "Win32_System_HostCompute" = [ "Win32_System" ];
          "Win32_System_HostComputeNetwork" = [ "Win32_System" ];
          "Win32_System_HostComputeSystem" = [ "Win32_System" ];
          "Win32_System_Hypervisor" = [ "Win32_System" ];
          "Win32_System_IO" = [ "Win32_System" ];
          "Win32_System_Iis" = [ "Win32_System" ];
          "Win32_System_Ioctl" = [ "Win32_System" ];
          "Win32_System_JobObjects" = [ "Win32_System" ];
          "Win32_System_Js" = [ "Win32_System" ];
          "Win32_System_Kernel" = [ "Win32_System" ];
          "Win32_System_LibraryLoader" = [ "Win32_System" ];
          "Win32_System_Mailslots" = [ "Win32_System" ];
          "Win32_System_Mapi" = [ "Win32_System" ];
          "Win32_System_Memory" = [ "Win32_System" ];
          "Win32_System_Memory_NonVolatile" = [ "Win32_System_Memory" ];
          "Win32_System_MessageQueuing" = [ "Win32_System" ];
          "Win32_System_MixedReality" = [ "Win32_System" ];
          "Win32_System_Ole" = [ "Win32_System" ];
          "Win32_System_PasswordManagement" = [ "Win32_System" ];
          "Win32_System_Performance" = [ "Win32_System" ];
          "Win32_System_Performance_HardwareCounterProfiling" = [ "Win32_System_Performance" ];
          "Win32_System_Pipes" = [ "Win32_System" ];
          "Win32_System_Power" = [ "Win32_System" ];
          "Win32_System_ProcessStatus" = [ "Win32_System" ];
          "Win32_System_Recovery" = [ "Win32_System" ];
          "Win32_System_Registry" = [ "Win32_System" ];
          "Win32_System_RemoteDesktop" = [ "Win32_System" ];
          "Win32_System_RemoteManagement" = [ "Win32_System" ];
          "Win32_System_RestartManager" = [ "Win32_System" ];
          "Win32_System_Restore" = [ "Win32_System" ];
          "Win32_System_Rpc" = [ "Win32_System" ];
          "Win32_System_Search" = [ "Win32_System" ];
          "Win32_System_Search_Common" = [ "Win32_System_Search" ];
          "Win32_System_SecurityCenter" = [ "Win32_System" ];
          "Win32_System_Services" = [ "Win32_System" ];
          "Win32_System_SetupAndMigration" = [ "Win32_System" ];
          "Win32_System_Shutdown" = [ "Win32_System" ];
          "Win32_System_StationsAndDesktops" = [ "Win32_System" ];
          "Win32_System_SubsystemForLinux" = [ "Win32_System" ];
          "Win32_System_SystemInformation" = [ "Win32_System" ];
          "Win32_System_SystemServices" = [ "Win32_System" ];
          "Win32_System_Threading" = [ "Win32_System" ];
          "Win32_System_Time" = [ "Win32_System" ];
          "Win32_System_TpmBaseServices" = [ "Win32_System" ];
          "Win32_System_UserAccessLogging" = [ "Win32_System" ];
          "Win32_System_Variant" = [ "Win32_System" ];
          "Win32_System_VirtualDosMachines" = [ "Win32_System" ];
          "Win32_System_WindowsProgramming" = [ "Win32_System" ];
          "Win32_System_Wmi" = [ "Win32_System" ];
          "Win32_UI" = [ "Win32" ];
          "Win32_UI_Accessibility" = [ "Win32_UI" ];
          "Win32_UI_ColorSystem" = [ "Win32_UI" ];
          "Win32_UI_Controls" = [ "Win32_UI" ];
          "Win32_UI_Controls_Dialogs" = [ "Win32_UI_Controls" ];
          "Win32_UI_HiDpi" = [ "Win32_UI" ];
          "Win32_UI_Input" = [ "Win32_UI" ];
          "Win32_UI_Input_Ime" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_KeyboardAndMouse" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Pointer" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_Touch" = [ "Win32_UI_Input" ];
          "Win32_UI_Input_XboxController" = [ "Win32_UI_Input" ];
          "Win32_UI_InteractionContext" = [ "Win32_UI" ];
          "Win32_UI_Magnification" = [ "Win32_UI" ];
          "Win32_UI_Shell" = [ "Win32_UI" ];
          "Win32_UI_Shell_PropertiesSystem" = [ "Win32_UI_Shell" ];
          "Win32_UI_TabletPC" = [ "Win32_UI" ];
          "Win32_UI_TextServices" = [ "Win32_UI" ];
          "Win32_UI_WindowsAndMessaging" = [ "Win32_UI" ];
          "Win32_Web" = [ "Win32" ];
          "Win32_Web_InternetExplorer" = [ "Win32_Web" ];
        };
        resolvedDefaultFeatures = [ "Wdk" "Wdk_Foundation" "Wdk_Storage" "Wdk_Storage_FileSystem" "Win32" "Win32_Foundation" "Win32_NetworkManagement" "Win32_NetworkManagement_IpHelper" "Win32_Networking" "Win32_Networking_WinSock" "Win32_Security" "Win32_Security_Authentication" "Win32_Security_Authentication_Identity" "Win32_Security_Authorization" "Win32_Security_Credentials" "Win32_Security_Cryptography" "Win32_Storage" "Win32_Storage_FileSystem" "Win32_System" "Win32_System_Com" "Win32_System_Console" "Win32_System_Diagnostics" "Win32_System_Diagnostics_Debug" "Win32_System_IO" "Win32_System_LibraryLoader" "Win32_System_Memory" "Win32_System_Threading" "Win32_System_WindowsProgramming" "Win32_UI" "Win32_UI_Shell" "default" ];
      };
      "windows-targets 0.48.5" = rec {
        crateName = "windows-targets";
        version = "0.48.5";
        edition = "2018";
        sha256 = "034ljxqshifs1lan89xwpcy1hp0lhdh4b5n0d2z4fwjx2piacbws";
        authors = [
          "Microsoft"
        ];
        dependencies = [
          {
            name = "windows_aarch64_gnullvm";
            packageId = "windows_aarch64_gnullvm 0.48.5";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "aarch64-pc-windows-gnullvm");
          }
          {
            name = "windows_aarch64_msvc";
            packageId = "windows_aarch64_msvc 0.48.5";
            target = { target, features }: (("aarch64" == target."arch" or null) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_i686_gnu";
            packageId = "windows_i686_gnu 0.48.5";
            target = { target, features }: (("x86" == target."arch" or null) && ("gnu" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_i686_msvc";
            packageId = "windows_i686_msvc 0.48.5";
            target = { target, features }: (("x86" == target."arch" or null) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_x86_64_gnu";
            packageId = "windows_x86_64_gnu 0.48.5";
            target = { target, features }: (("x86_64" == target."arch" or null) && ("gnu" == target."env" or null) && (!("llvm" == target."abi" or null)) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_x86_64_gnullvm";
            packageId = "windows_x86_64_gnullvm 0.48.5";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "x86_64-pc-windows-gnullvm");
          }
          {
            name = "windows_x86_64_msvc";
            packageId = "windows_x86_64_msvc 0.48.5";
            target = { target, features }: (("x86_64" == target."arch" or null) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
        ];

      };
      "windows-targets 0.52.6" = rec {
        crateName = "windows-targets";
        version = "0.52.6";
        edition = "2021";
        sha256 = "0wwrx625nwlfp7k93r2rra568gad1mwd888h1jwnl0vfg5r4ywlv";
        libName = "windows_targets";
        authors = [
          "Microsoft"
        ];
        dependencies = [
          {
            name = "windows_aarch64_gnullvm";
            packageId = "windows_aarch64_gnullvm 0.52.6";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "aarch64-pc-windows-gnullvm");
          }
          {
            name = "windows_aarch64_msvc";
            packageId = "windows_aarch64_msvc 0.52.6";
            target = { target, features }: (("aarch64" == target."arch" or null) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_i686_gnu";
            packageId = "windows_i686_gnu 0.52.6";
            target = { target, features }: (("x86" == target."arch" or null) && ("gnu" == target."env" or null) && (!("llvm" == target."abi" or null)) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_i686_gnullvm";
            packageId = "windows_i686_gnullvm";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "i686-pc-windows-gnullvm");
          }
          {
            name = "windows_i686_msvc";
            packageId = "windows_i686_msvc 0.52.6";
            target = { target, features }: (("x86" == target."arch" or null) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_x86_64_gnu";
            packageId = "windows_x86_64_gnu 0.52.6";
            target = { target, features }: (("x86_64" == target."arch" or null) && ("gnu" == target."env" or null) && (!("llvm" == target."abi" or null)) && (!(target."windows_raw_dylib" or false)));
          }
          {
            name = "windows_x86_64_gnullvm";
            packageId = "windows_x86_64_gnullvm 0.52.6";
            target = { target, features }: (stdenv.hostPlatform.rust.rustcTarget == "x86_64-pc-windows-gnullvm");
          }
          {
            name = "windows_x86_64_msvc";
            packageId = "windows_x86_64_msvc 0.52.6";
            target = { target, features }: ((("x86_64" == target."arch" or null) || ("arm64ec" == target."arch" or null)) && ("msvc" == target."env" or null) && (!(target."windows_raw_dylib" or false)));
          }
        ];

      };
      "windows_aarch64_gnullvm 0.48.5" = rec {
        crateName = "windows_aarch64_gnullvm";
        version = "0.48.5";
        edition = "2018";
        sha256 = "1n05v7qblg1ci3i567inc7xrkmywczxrs1z3lj3rkkxw18py6f1b";
        authors = [
          "Microsoft"
        ];

      };
      "windows_aarch64_gnullvm 0.52.6" = rec {
        crateName = "windows_aarch64_gnullvm";
        version = "0.52.6";
        edition = "2021";
        sha256 = "1lrcq38cr2arvmz19v32qaggvj8bh1640mdm9c2fr877h0hn591j";
        authors = [
          "Microsoft"
        ];

      };
      "windows_aarch64_msvc 0.48.5" = rec {
        crateName = "windows_aarch64_msvc";
        version = "0.48.5";
        edition = "2018";
        sha256 = "1g5l4ry968p73g6bg6jgyvy9lb8fyhcs54067yzxpcpkf44k2dfw";
        authors = [
          "Microsoft"
        ];

      };
      "windows_aarch64_msvc 0.52.6" = rec {
        crateName = "windows_aarch64_msvc";
        version = "0.52.6";
        edition = "2021";
        sha256 = "0sfl0nysnz32yyfh773hpi49b1q700ah6y7sacmjbqjjn5xjmv09";
        authors = [
          "Microsoft"
        ];

      };
      "windows_i686_gnu 0.48.5" = rec {
        crateName = "windows_i686_gnu";
        version = "0.48.5";
        edition = "2018";
        sha256 = "0gklnglwd9ilqx7ac3cn8hbhkraqisd0n83jxzf9837nvvkiand7";
        authors = [
          "Microsoft"
        ];

      };
      "windows_i686_gnu 0.52.6" = rec {
        crateName = "windows_i686_gnu";
        version = "0.52.6";
        edition = "2021";
        sha256 = "02zspglbykh1jh9pi7gn8g1f97jh1rrccni9ivmrfbl0mgamm6wf";
        authors = [
          "Microsoft"
        ];

      };
      "windows_i686_gnullvm" = rec {
        crateName = "windows_i686_gnullvm";
        version = "0.52.6";
        edition = "2021";
        sha256 = "0rpdx1537mw6slcpqa0rm3qixmsb79nbhqy5fsm3q2q9ik9m5vhf";
        authors = [
          "Microsoft"
        ];

      };
      "windows_i686_msvc 0.48.5" = rec {
        crateName = "windows_i686_msvc";
        version = "0.48.5";
        edition = "2018";
        sha256 = "01m4rik437dl9rdf0ndnm2syh10hizvq0dajdkv2fjqcywrw4mcg";
        authors = [
          "Microsoft"
        ];

      };
      "windows_i686_msvc 0.52.6" = rec {
        crateName = "windows_i686_msvc";
        version = "0.52.6";
        edition = "2021";
        sha256 = "0rkcqmp4zzmfvrrrx01260q3xkpzi6fzi2x2pgdcdry50ny4h294";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_gnu 0.48.5" = rec {
        crateName = "windows_x86_64_gnu";
        version = "0.48.5";
        edition = "2018";
        sha256 = "13kiqqcvz2vnyxzydjh73hwgigsdr2z1xpzx313kxll34nyhmm2k";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_gnu 0.52.6" = rec {
        crateName = "windows_x86_64_gnu";
        version = "0.52.6";
        edition = "2021";
        sha256 = "0y0sifqcb56a56mvn7xjgs8g43p33mfqkd8wj1yhrgxzma05qyhl";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_gnullvm 0.48.5" = rec {
        crateName = "windows_x86_64_gnullvm";
        version = "0.48.5";
        edition = "2018";
        sha256 = "1k24810wfbgz8k48c2yknqjmiigmql6kk3knmddkv8k8g1v54yqb";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_gnullvm 0.52.6" = rec {
        crateName = "windows_x86_64_gnullvm";
        version = "0.52.6";
        edition = "2021";
        sha256 = "03gda7zjx1qh8k9nnlgb7m3w3s1xkysg55hkd1wjch8pqhyv5m94";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_msvc 0.48.5" = rec {
        crateName = "windows_x86_64_msvc";
        version = "0.48.5";
        edition = "2018";
        sha256 = "0f4mdp895kkjh9zv8dxvn4pc10xr7839lf5pa9l0193i2pkgr57d";
        authors = [
          "Microsoft"
        ];

      };
      "windows_x86_64_msvc 0.52.6" = rec {
        crateName = "windows_x86_64_msvc";
        version = "0.52.6";
        edition = "2021";
        sha256 = "1v7rb5cibyzx8vak29pdrk8nx9hycsjs4w0jgms08qk49jl6v7sq";
        authors = [
          "Microsoft"
        ];

      };
      "winnow 0.5.40" = rec {
        crateName = "winnow";
        version = "0.5.40";
        edition = "2021";
        sha256 = "0xk8maai7gyxda673mmw3pj1hdizy5fpi7287vaywykkk19sk4zm";
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "debug" = [ "dep:anstream" "dep:anstyle" "dep:is-terminal" "dep:terminal_size" ];
          "default" = [ "std" ];
          "simd" = [ "dep:memchr" ];
          "std" = [ "alloc" "memchr?/std" ];
          "unstable-doc" = [ "alloc" "std" "simd" "unstable-recover" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "winnow 0.6.14" = rec {
        crateName = "winnow";
        version = "0.6.14";
        edition = "2021";
        sha256 = "0bz2nmp7mqbz7z5z41p9gdimcwsmrmg4gnbj94dkqykn5l5c8kip";
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "debug" = [ "std" "dep:anstream" "dep:anstyle" "dep:is-terminal" "dep:terminal_size" ];
          "default" = [ "std" ];
          "simd" = [ "dep:memchr" ];
          "std" = [ "alloc" "memchr?/std" ];
          "unstable-doc" = [ "alloc" "std" "simd" "unstable-recover" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "x25519-dalek" = rec {
        crateName = "x25519-dalek";
        version = "2.0.1";
        edition = "2021";
        sha256 = "0xyjgqpsa0q6pprakdp58q1hy45rf8wnqqscgzx0gyw13hr6ir67";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "DebugSteven <debugsteven@gmail.com>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand_core";
            packageId = "rand_core";
            usesDefaultFeatures = false;
            features = [ "getrandom" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "serde?/alloc" "zeroize?/alloc" ];
          "default" = [ "alloc" "precomputed-tables" "zeroize" ];
          "getrandom" = [ "rand_core/getrandom" ];
          "precomputed-tables" = [ "curve25519-dalek/precomputed-tables" ];
          "serde" = [ "dep:serde" "curve25519-dalek/serde" ];
          "zeroize" = [ "dep:zeroize" "curve25519-dalek/zeroize" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "precomputed-tables" "static_secrets" "zeroize" ];
      };
      "xdg-home" = rec {
        crateName = "xdg-home";
        version = "1.2.0";
        edition = "2021";
        sha256 = "1f0s44s8l4axp3l90hlg8qahjrwx1g6mi4x2l3rqbc1xz7wdr4fa";
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_UI_Shell" "Win32_System_Com" ];
          }
        ];

      };
      "zbus" = rec {
        crateName = "zbus";
        version = "4.4.0";
        edition = "2021";
        sha256 = "09f7916lp7haxv1y5zgcg99ny15whi6dn3waf1afcafxx8mh35xv";
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "async-broadcast";
            packageId = "async-broadcast";
          }
          {
            name = "async-process";
            packageId = "async-process";
            target = { target, features }: ("macos" == target."os" or null);
          }
          {
            name = "async-recursion";
            packageId = "async-recursion";
            target = { target, features }: (("macos" == target."os" or null) || (target."windows" or false));
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "enumflags2";
            packageId = "enumflags2";
            features = [ "serde" ];
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" "std" ];
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "nix";
            packageId = "nix";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "socket" "uio" "user" ];
          }
          {
            name = "ordered-stream";
            packageId = "ordered-stream";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_repr";
            packageId = "serde_repr";
          }
          {
            name = "sha1";
            packageId = "sha1";
            features = [ "std" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "rt" "net" "time" "fs" "io-util" "process" "sync" "tracing" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "uds_windows";
            packageId = "uds_windows";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "windows-sys";
            packageId = "windows-sys 0.52.0";
            target = { target, features }: (target."windows" or false);
            features = [ "Win32_Foundation" "Win32_Security_Authorization" "Win32_System_Memory" "Win32_Networking" "Win32_Networking_WinSock" "Win32_NetworkManagement" "Win32_NetworkManagement_IpHelper" "Win32_System_Threading" ];
          }
          {
            name = "xdg-home";
            packageId = "xdg-home";
          }
          {
            name = "zbus_macros";
            packageId = "zbus_macros";
          }
          {
            name = "zbus_names";
            packageId = "zbus_names";
          }
          {
            name = "zvariant";
            packageId = "zvariant";
            usesDefaultFeatures = false;
            features = [ "enumflags2" ];
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "macros" "rt-multi-thread" "fs" "io-util" "net" "sync" ];
          }
        ];
        features = {
          "async-executor" = [ "dep:async-executor" ];
          "async-fs" = [ "dep:async-fs" ];
          "async-io" = [ "dep:async-io" "async-executor" "async-task" "async-lock" "async-fs" "blocking" "futures-util/io" ];
          "async-lock" = [ "dep:async-lock" ];
          "async-task" = [ "dep:async-task" ];
          "blocking" = [ "dep:blocking" ];
          "bus-impl" = [ "p2p" ];
          "chrono" = [ "zvariant/chrono" ];
          "default" = [ "async-io" ];
          "heapless" = [ "zvariant/heapless" ];
          "option-as-array" = [ "zvariant/option-as-array" ];
          "time" = [ "zvariant/time" ];
          "tokio" = [ "dep:tokio" ];
          "tokio-vsock" = [ "dep:tokio-vsock" "tokio" ];
          "url" = [ "zvariant/url" ];
          "uuid" = [ "zvariant/uuid" ];
          "vsock" = [ "dep:vsock" "dep:async-io" ];
        };
        resolvedDefaultFeatures = [ "tokio" "url" ];
      };
      "zbus_macros" = rec {
        crateName = "zbus_macros";
        version = "4.4.0";
        edition = "2021";
        sha256 = "0glqn6ddgv4ra734p343a41rrxb0phy1v13dljzhpsc1f10bjz96";
        procMacro = true;
        authors = [
          "Marc-André Lureau <marcandre.lureau@redhat.com>"
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 3.1.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "extra-traits" "fold" "full" ];
          }
          {
            name = "zvariant_utils";
            packageId = "zvariant_utils";
          }
        ];

      };
      "zbus_names" = rec {
        crateName = "zbus_names";
        version = "3.0.0";
        edition = "2021";
        sha256 = "0v1f0ajwafj47bf11yp0xdgp26r93lslr9nb2v6624h2gppiz6sb";
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "zvariant";
            packageId = "zvariant";
            usesDefaultFeatures = false;
            features = [ "enumflags2" ];
          }
        ];

      };
      "zeroize" = rec {
        crateName = "zeroize";
        version = "1.8.1";
        edition = "2021";
        sha256 = "1pjdrmjwmszpxfd7r860jx54cyk94qk59x13sc307cvr5256glyf";
        authors = [
          "The RustCrypto Project Developers"
        ];
        dependencies = [
          {
            name = "zeroize_derive";
            packageId = "zeroize_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "alloc" ];
          "derive" = [ "zeroize_derive" ];
          "serde" = [ "dep:serde" ];
          "std" = [ "alloc" ];
          "zeroize_derive" = [ "dep:zeroize_derive" ];
        };
        resolvedDefaultFeatures = [ "aarch64" "alloc" "default" "derive" "zeroize_derive" ];
      };
      "zeroize_derive" = rec {
        crateName = "zeroize_derive";
        version = "1.4.2";
        edition = "2021";
        sha256 = "0sczjlqjdmrp3wn62g7mw6p438c9j4jgp2f9zamd56991mdycdnf";
        procMacro = true;
        authors = [
          "The RustCrypto Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "full" "extra-traits" "visit" ];
          }
        ];

      };
      "zkcredential" = rec {
        crateName = "zkcredential";
        version = "0.1.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            features = [ "serde" ];
          }
          {
            name = "derive-where";
            packageId = "derive-where";
          }
          {
            name = "displaydoc";
            packageId = "displaydoc";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "partial-default";
            packageId = "partial-default";
            features = [ "derive" ];
          }
          {
            name = "poksho";
            packageId = "poksho";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "subtle";
            packageId = "subtle";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "rayon" = [ "dep:rayon" ];
        };
        resolvedDefaultFeatures = [ "rayon" ];
      };
      "zkgroup" = rec {
        crateName = "zkgroup";
        version = "0.9.0";
        edition = "2021";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/signalapp/libsignal";
          rev = "2e2896fc235efa293213dd5f0aff4b1f8528bab2";
          sha256 = "10rksaw86a8hbqhhjqiic995kss6s02sgrvfnr9sa0jmb8vci8g1";
        };
        authors = [
          "Signal Messenger LLC"
        ];
        dependencies = [
          {
            name = "aes-gcm-siv";
            packageId = "aes-gcm-siv";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            features = [ "serde" ];
          }
          {
            name = "derive-where";
            packageId = "derive-where";
          }
          {
            name = "displaydoc";
            packageId = "displaydoc";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hex-literal";
            packageId = "hex-literal";
          }
          {
            name = "hkdf";
            packageId = "hkdf";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsignal-core";
            packageId = "libsignal-core";
          }
          {
            name = "num_enum";
            packageId = "num_enum";
          }
          {
            name = "partial-default";
            packageId = "partial-default";
            features = [ "derive" ];
          }
          {
            name = "poksho";
            packageId = "poksho";
          }
          {
            name = "rand";
            packageId = "rand";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2";
          }
          {
            name = "signal-crypto";
            packageId = "signal-crypto";
          }
          {
            name = "subtle";
            packageId = "subtle";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "uuid";
            packageId = "uuid";
          }
          {
            name = "zkcredential";
            packageId = "zkcredential";
            features = [ "rayon" ];
          }
        ];
        devDependencies = [
          {
            name = "uuid";
            packageId = "uuid";
            features = [ "v5" ];
          }
        ];
        features = {
          "base64" = [ "dep:base64" ];
        };
      };
      "zune-core" = rec {
        crateName = "zune-core";
        version = "0.4.12";
        edition = "2021";
        sha256 = "0jj1ra86klzlcj9aha9als9d1dzs7pqv3azs1j3n96822wn3lhiz";
        features = {
          "log" = [ "dep:log" ];
          "serde" = [ "dep:serde" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "zune-inflate" = rec {
        crateName = "zune-inflate";
        version = "0.2.54";
        edition = "2021";
        sha256 = "00kg24jh3zqa3i6rg6yksnb71bch9yi1casqydl00s7nw8pk7avk";
        dependencies = [
          {
            name = "simd-adler32";
            packageId = "simd-adler32";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "zlib" "gzip" "std" ];
          "simd-adler32" = [ "dep:simd-adler32" ];
          "std" = [ "simd-adler32/std" ];
          "zlib" = [ "simd-adler32" ];
        };
        resolvedDefaultFeatures = [ "simd-adler32" "zlib" ];
      };
      "zune-jpeg" = rec {
        crateName = "zune-jpeg";
        version = "0.4.13";
        edition = "2021";
        sha256 = "0s07igp839yy66hs5f8g6gzvvanywgv3zxr2hq18yk8bc0c9828n";
        libName = "zune_jpeg";type = [ "cdylib" "rlib" ];
        authors = [
          "caleb <etemesicaleb@gmail.com>"
        ];
        dependencies = [
          {
            name = "zune-core";
            packageId = "zune-core";
          }
        ];
        features = {
          "default" = [ "x86" "neon" "std" ];
          "log" = [ "zune-core/log" ];
          "std" = [ "zune-core/std" ];
        };
        resolvedDefaultFeatures = [ "default" "neon" "std" "x86" ];
      };
      "zvariant" = rec {
        crateName = "zvariant";
        version = "4.2.0";
        edition = "2021";
        sha256 = "1zl1ika7zd9bxkd0bqc78h9bykvk6xc98965iz1p3i51p452k110";
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "endi";
            packageId = "endi";
          }
          {
            name = "enumflags2";
            packageId = "enumflags2";
            optional = true;
            features = [ "serde" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "url";
            packageId = "url";
            optional = true;
            features = [ "serde" ];
          }
          {
            name = "zvariant_derive";
            packageId = "zvariant_derive";
          }
        ];
        features = {
          "arrayvec" = [ "dep:arrayvec" ];
          "chrono" = [ "dep:chrono" ];
          "enumflags2" = [ "dep:enumflags2" ];
          "heapless" = [ "dep:heapless" ];
          "ostree-tests" = [ "gvariant" ];
          "serde_bytes" = [ "dep:serde_bytes" ];
          "time" = [ "dep:time" ];
          "url" = [ "dep:url" ];
          "uuid" = [ "dep:uuid" ];
        };
        resolvedDefaultFeatures = [ "enumflags2" "gvariant" "url" ];
      };
      "zvariant_derive" = rec {
        crateName = "zvariant_derive";
        version = "4.2.0";
        edition = "2021";
        sha256 = "0jf408h0s83krxwm7wl62fnssin1kcklmb1bcn83ls6sddabmqkk";
        procMacro = true;
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 3.1.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "extra-traits" "full" ];
          }
          {
            name = "zvariant_utils";
            packageId = "zvariant_utils";
          }
        ];

      };
      "zvariant_utils" = rec {
        crateName = "zvariant_utils";
        version = "2.1.0";
        edition = "2021";
        sha256 = "0h43h3jcw8rmjr390rdqnhkb9nn3913pgkvb75am1frxrkvwy6y5";
        authors = [
          "Zeeshan Ali Khan <zeeshanak@gnome.org>"
          "turbocooler <turbocooler@cocaine.ninja>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn 2.0.72";
            features = [ "extra-traits" "full" ];
          }
        ];

      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
    This corresponds roughly to what buildRustCrate is setting.
  */
  makeDefaultTarget = platform: {
    unix = platform.isUnix;
    windows = platform.isWindows;
    fuchsia = true;
    test = false;

    inherit (platform.rust.platform)
      arch
      os
      vendor;
    family = platform.rust.platform.target-family;
    env = "gnu";
    endian =
      if platform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString platform.parsed.cpu.bits;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
    of crate given as the second argument.

    testCrateFlags: list of flags to pass to the test exectuable
    testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs, testPreRun, testPostRun }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    assert builtins.typeOf testPreRun == "string";
    assert builtins.typeOf testPostRun == "string";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test =
        let
          drv = testCrate.override
            (
              _: {
                buildTests = true;
              }
            );
          # If the user hasn't set any pre/post commands, we don't want to
          # insert empty lines. This means that any existing users of crate2nix
          # don't get a spurious rebuild unless they set these explicitly.
          testCommand = pkgs.lib.concatStringsSep "\n"
            (pkgs.lib.filter (s: s != "") [
              testPreRun
              "$f $testCrateFlags 2>&1 | tee -a $out"
              testPostRun
            ]);
        in
        pkgs.runCommand "run-tests-${testCrate.name}"
          {
            inherit testCrateFlags;
            buildInputs = testInputs;
          } ''
          set -e

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          # It's necessary to locate the source in $NIX_BUILD_TOP/source/
          # instead of $NIX_BUILD_TOP/
          # because we compiled those test binaries in the former and not the latter.
          # So all paths will expect source tree to be there and not in the build top directly.
          # For example: $NIX_BUILD_TOP := /build in general, if you ask yourself.
          # NOTE: There could be edge cases if `crate.sourceRoot` does exist but
          # it's very hard to reason about them.
          # Open a bug if you run into this!
          mkdir -p source/
          cd source/

          ${pkgs.buildPackages.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            ${testCommand}
          done
        '';
    in
    pkgs.runCommand "${crate.name}-linked"
      {
        inherit (crate) outputs crateName;
        passthru = (crate.passthru or { }) // {
          inherit test;
        };
      }
      (lib.optionalString (stdenv.buildPlatform.canExecute stdenv.hostPlatform) ''
        echo tested by ${test}
      '' + ''
        ${lib.concatMapStringsSep "\n" (output: "ln -s ${crate.${output}} ${"$"}${output}") crate.outputs}
      '');

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateForPkgsFunc ? null
    , runTests ? false
    , testCrateFlags ? [ ]
    , testInputs ? [ ]
      # Any command to run immediatelly before a test is executed.
    , testPreRun ? ""
      # Any command run immediatelly after a test is executed.
    , testPostRun ? ""
    }:
    lib.makeOverridable
      (
        { features
        , crateOverrides
        , runTests
        , testCrateFlags
        , testInputs
        , testPreRun
        , testPostRun
        }:
        let
          buildRustCrateForPkgsFuncOverriden =
            if buildRustCrateForPkgsFunc != null
            then buildRustCrateForPkgsFunc
            else
              (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrateForPkgs
                else
                  pkgs: (buildRustCrateForPkgs pkgs).override {
                    defaultCrateOverrides = crateOverrides;
                  }
              );
          builtRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = false;
          };
          builtTestRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = true;
          };
          drv = builtRustCrates.crates.${packageId};
          testDrv = builtTestRustCrates.crates.${packageId};
          derivation =
            if runTests then
              crateWithTest
                {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs testPreRun testPostRun;
                }
            else drv;
        in
        derivation
      )
      { inherit features crateOverrides runTests testCrateFlags testInputs testPreRun testPostRun; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateForPkgsFunc
    for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateForPkgsFunc
    , runTests
    , makeTarget ? makeDefaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs (makeTarget stdenv.hostPlatform));
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures
          (
            args // {
              inherit rootPackageId;
              target = makeTarget stdenv.hostPlatform // { test = runTests; };
            }
          );
        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageIdByPkgs = mkBuiltByPackageIdByPkgs pkgs;
        mkBuiltByPackageIdByPkgs = pkgs:
          let
            self = {
              crates = lib.mapAttrs (packageId: value: buildByPackageIdForPkgsImpl self pkgs packageId) crateConfigs;
              target = makeTarget stdenv.hostPlatform;
              build = mkBuiltByPackageIdByPkgs pkgs.buildPackages;
            };
          in
          self;
        buildByPackageIdForPkgsImpl = self: pkgs: packageId:
          let
            features = mergedFeatures."${packageId}" or [ ];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or [ ]);
            dependencies =
              dependencyDerivations {
                inherit features;
                inherit (self) target;
                buildByPackageId = depPackageId:
                  # proc_macro crates must be compiled for the build architecture
                  if crateConfigs.${depPackageId}.procMacro or false
                  then self.build.crates.${depPackageId}
                  else self.crates.${depPackageId};
                dependencies =
                  (crateConfig.dependencies or [ ])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit features;
                inherit (self.build) target;
                buildByPackageId = depPackageId:
                  self.build.crates.${depPackageId};
                dependencies = crateConfig.buildDependencies or [ ];
              };
            dependenciesWithRenames =
              let
                buildDeps = filterEnabledDependencies {
                  inherit features;
                  inherit (self) target;
                  dependencies = crateConfig.dependencies or [ ] ++ devDependencies;
                };
                hostDeps = filterEnabledDependencies {
                  inherit features;
                  inherit (self.build) target;
                  dependencies = crateConfig.buildDependencies or [ ];
                };
              in
              lib.filter (d: d ? "rename") (hostDeps ++ buildDeps);
            # Crate renames have the form:
            #
            # {
            #    crate_name = [
            #       { version = "1.2.3"; rename = "crate_name01"; }
            #    ];
            #    # ...
            # }
            crateRenames =
              let
                grouped =
                  lib.groupBy
                    (dependency: dependency.name)
                    dependenciesWithRenames;
                versionAndRename = dep:
                  let
                    package = crateConfigs."${dep.packageId}";
                  in
                  { inherit (dep) rename; inherit (package) version; };
              in
              lib.mapAttrs (name: builtins.map versionAndRename) grouped;
          in
          buildRustCrateForPkgsFunc pkgs
            (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl rec {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 =
                      assert (lib.assertMsg (crateConfig ? sha256) "Missing sha256 for ${name}");
                      crateConfig.sha256;
                  }
                );
                extraRustcOpts = lib.lists.optional (targetFeatures != [ ]) "-C target-feature=${lib.concatMapStringsSep "," (x: "+${x}") targetFeatures}";
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
      builtByPackageIdByPkgs;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { buildByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: buildByPackageId dependency.packageId;
      in
      map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
    be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: sanitizeForJson) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? makeDefaultTarget stdenv.hostPlatform }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateForPkgsFunc = _: lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson
          (
            buildRustCrateWithFeatures {
              buildRustCrateForPkgsFunc = _: crate: {
                "01_crateName" = crate.crateName or false;
                "02_features" = crate.features or [ ];
                "03_dependencies" = crate.dependencies or [ ];
              };
              inherit packageId;
            }
          );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
    { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
    features.

    This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) { } [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or [ ]) != (v."cargo".resolved_default_features or [ ])
          )
          combined;
      in
      builtins.toJSON {
        inherit onlyInCargo onlyInCrate2Nix differentFeatures;
      };

  /* Returns an attrset mapping packageId to the list of enabled features.

    If multiple paths to a dependency enable different features, the
    corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? { }
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or { }) features;
        enabledFeatures = enableFeatures (crateConfig.dependencies or [ ]) expandedFeatures;
        depWithResolvedFeatures = dependency:
          let
            inherit (dependency) packageId;
            features = dependencyFeatures enabledFeatures dependency;
          in
          { inherit packageId features; };
        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = enabledFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
          foldOverCache
            (
              cache: { packageId, features }:
                let
                  cacheFeatures = cache.${packageId} or [ ];
                  combinedFeatures = sortedUnique (cacheFeatures ++ features);
                in
                if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                then cache
                else
                  mergePackageFeatures {
                    features = combinedFeatures;
                    featuresByPackageId = cache;
                    inherit crateConfigs packageId target runTests rootPackageId;
                  }
            );
        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [ ];
            combinedFeatures = sortedUnique (cacheFeatures ++ enabledFeatures);
          in
          featuresByPackageId // {
            "${packageId}" = combinedFeatures;
          };
        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep"
            (
              crateConfig.dependencies or [ ]
              ++ lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig.devDependencies or [ ])
            );
        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or [ ]);
      in
      cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
        let
          targetFunc = dep.target or (features: true);
        in
        targetFunc { inherit features target; }
        && (
          !(dep.optional or false)
          || builtins.any (doesFeatureEnableDependency dep) features
        )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = dependency: feature:
    let
      name = dependency.rename or dependency.name;
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
    feature == name || feature == "dep:" + name || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
    rules in featureMap.

    featureMap is an attribute set which maps feature names to lists of further
    feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeaturesNoCycle = oldSeen: inputFeatures:
        if inputFeatures != [ ]
        then
          let
            # The feature we're currently expanding.
            feature = builtins.head inputFeatures;
            # All the features we've seen/expanded so far, including the one
            # we're currently processing.
            seen = oldSeen // { ${feature} = 1; };
            # Expand the feature but be careful to not re-introduce a feature
            # that we've already seen: this can easily cause a cycle, see issue
            # #209.
            enables = builtins.filter (f: !(seen ? "${f}")) (featureMap."${feature}" or [ ]);
          in
          [ feature ] ++ (expandFeaturesNoCycle seen (builtins.tail inputFeatures ++ enables))
        # No more features left, nothing to expand to.
        else [ ];
      outFeatures = expandFeaturesNoCycle { } inputFeatures;
    in
    sortedUnique outFeatures;

  /* This function adds optional dependencies as features if they are enabled
    indirectly by dependency features. This function mimics Cargo's behavior
    described in a note at:
    https://doc.rust-lang.org/nightly/cargo/reference/features.html#dependency-features
  */
  enableFeatures = dependencies: features:
    assert (builtins.isList features);
    assert (builtins.isList dependencies);
    let
      additionalFeatures = lib.concatMap
        (
          dependency:
            assert (builtins.isAttrs dependency);
            let
              enabled = builtins.any (doesFeatureEnableDependency dependency) features;
            in
            if (dependency.optional or false) && enabled
            then [ (dependency.rename or dependency.name) ]
            else [ ]
        )
        dependencies;
    in
    sortedUnique (features ++ additionalFeatures);

  /*
    Returns the actual features for the given dependency.

    features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil =
        if dependency.usesDefaultFeatures or true
        then [ "default" ]
        else [ ];
      explicitFeatures = dependency.features or [ ];
      additionalDependencyFeatures =
        let
          name = dependency.rename or dependency.name;
          stripPrefixMatch = prefix: s:
            if lib.hasPrefix prefix s
            then lib.removePrefix prefix s
            else null;
          extractFeature = feature: lib.findFirst
            (f: f != null)
            null
            (map (prefix: stripPrefixMatch prefix feature) [
              (name + "/")
              (name + "?/")
            ]);
          dependencyFeatures = lib.filter (f: f != null) (map extractFeature features);
        in
        dependencyFeatures;
    in
    defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) { } features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
    builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #
  };
}

