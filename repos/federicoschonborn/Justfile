default_args := "--verbose --print-build-logs --log-format multiline-with-logs --show-trace"

@_default:
    just --list --unsorted

@_to-outputs +NAMES:
    echo {{ NAMES }} | sed -e 's:[^ ]*:".#&":g'

@_build-outputs:
    nix eval -f ./ci.nix buildOutputs --apply 'map (x: x.drvPath + "^*")' --json | jq -r 'join(" ")'

@_cache-outputs:
    nix eval -f ./ci.nix cacheOutputs --apply 'map (x: x.drvPath + "^*")' --json | jq -r 'join(" ")'

_nix-unstable +ARGS:
    nix {{ ARGS }} {{ default_args }}

_nix-stable +ARGS:
    nix {{ ARGS }} {{ default_args }} --inputs-from . --override-input nixpkgs nixpkgs-stable

[group("build")]
build-unstable +PACKAGES:
    just _nix-unstable build $(just _to-outputs {{ PACKAGES }})

[group("build")]
build-stable +PACKAGES:
    just _nix-stable build $(just _to-outputs {{ PACKAGES }})

[group("build")]
build +PACKAGES: (build-unstable PACKAGES) (build-stable PACKAGES)

[group("build-all")]
build-all-unstable:
    just _nix-unstable build $(just _build-outputs)

[group("build-all")]
build-all-stable:
    just _nix-stable build $(just _build-outputs)

[group("build")]
build-all: build-all-unstable build-all-stable

[group("rebuild")]
rebuild-unstable +PACKAGES: (build-unstable PACKAGES)
    just _nix-unstable build --rebuild $(just _to-outputs {{ PACKAGES }})

[group("rebuild")]
rebuild-stable +PACKAGES: (build-stable PACKAGES)
    just _nix-stable build --rebuild $(just _to-outputs {{ PACKAGES }})

[group("rebuild")]
rebuild +PACKAGES: (rebuild-unstable PACKAGES) (rebuild-stable PACKAGES)

[group("rebuild-all")]
rebuild-all-unstable:
    just _nix-unstable build --rebuild $(just _build-outputs)

[group("rebuild-all")]
rebuild-all-stable:
    just _nix-stable build --rebuild $(just _build-outputs)

[group("rebuild-all")]
rebuild-all: rebuild-all-unstable rebuild-all-stable

[group("run")]
run-unstable PACKAGE: (build-unstable PACKAGE)
    just _nix-unstable run ".#{{ PACKAGE }}"

[group("run")]
run-stable PACKAGE: (build-stable PACKAGE)
    just _nix-stable run ".#{{ PACKAGE }}"

[group("path-info")]
path-info-unstable PACKAGE: (build-unstable PACKAGE)
    just _nix-unstable path-info ".#{{ PACKAGE }}"

[group("path-info")]
path-info-stable PACKAGE: (build-stable PACKAGE)
    just _nix-stable path-info ".#{{ PACKAGE }}"

tree PACKAGE: (build-unstable PACKAGE)
    #!/usr/bin/env nix-shell
    #!nix-shell -i bash -p nix-tree
    set -euxo pipefail
    nix-tree ".#{{ PACKAGE }}"

inspect:
    #!/usr/bin/env nix-shell
    #!nix-shell -i bash -p nix-inspect
    set -euxo pipefail
    nix-inspect --path .

lint:
    #!/usr/bin/env nix-shell
    #!nix-shell -i bash -p statix deadnix
    set -euxo pipefail
    statix check
    deadnix

generate-readme:
    just _nix-unstable run ".#generate-readme"
