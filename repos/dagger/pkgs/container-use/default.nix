# This file was generated by GoReleaser. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
system ? builtins.currentSystem
, lib
, fetchurl
, installShellFiles
, stdenvNoCC
}:
let
  shaMap = {
    x86_64-linux = "16s07maikk08zxgzw4f2m2yg9zbi4vs7qvxqwhmysjmf6dc2p99z";
    aarch64-linux = "056arnrsj9x2zxlk2ds59y30jsm308ld0nq6hggp7i8i2706pnwn";
    x86_64-darwin = "06w2fx8rmzcn5rka3hmsdzazghghakc99f7gfmkasg8x9ihyzpvv";
    aarch64-darwin = "1yzginb5xv2fp0czpbbxmywx2lyhsh27f0as1rwdksb4mlzcmqls";
  };

  urlMap = {
    x86_64-linux = "https://github.com/dagger/container-use/releases/download/v0.4.2/container-use_v0.4.2_linux_amd64.tar.gz";
    aarch64-linux = "https://github.com/dagger/container-use/releases/download/v0.4.2/container-use_v0.4.2_linux_arm64.tar.gz";
    x86_64-darwin = "https://github.com/dagger/container-use/releases/download/v0.4.2/container-use_v0.4.2_darwin_amd64.tar.gz";
    aarch64-darwin = "https://github.com/dagger/container-use/releases/download/v0.4.2/container-use_v0.4.2_darwin_arm64.tar.gz";
  };
in
stdenvNoCC.mkDerivation {
  pname = "container-use";
  version = "0.4.2";
  src = fetchurl {
    url = urlMap.${system};
    sha256 = shaMap.${system};
  };

  sourceRoot = ".";

  nativeBuildInputs = [ installShellFiles ];

  installPhase = ''
    mkdir -p $out/bin
    cp -vr ./container-use $out/bin/container-use
  '';
  postInstall = ''
    installShellCompletion --cmd container-use \
    --bash <($out/bin/container-use completion bash) \
    --fish <($out/bin/container-use completion fish) \
    --zsh <($out/bin/container-use completion zsh)
    # Create cu symlink for backward compatibility
    ln -sf $out/bin/container-use $out/bin/cu
    # Install cu completions for backward compatibility
    installShellCompletion --cmd cu \
    --bash <($out/bin/cu completion bash) \
    --fish <($out/bin/cu completion fish) \
    --zsh <($out/bin/cu completion zsh)
  '';

  system = system;

  meta = {
    description = "Containerized environments for coding agents";
    homepage = "https://github.com/dagger/container-use";
    license = lib.licenses.asl20;

    sourceProvenance = [ lib.sourceTypes.binaryNativeCode ];

    platforms = [
      "aarch64-darwin"
      "aarch64-linux"
      "x86_64-darwin"
      "x86_64-linux"
    ];
  };
}
