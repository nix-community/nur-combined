# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: 3

tasks:
  default:
    aliases:
    - build
    desc: Builds all nix packages.
    cmd: nix-build default.nix --no-out-link
  build:*:
    desc: Test building a specific nix package.
    label: build:{{ .NAME }}
    vars:
      NAME: '{{ index .MATCH 0 }}'
    cmd: >-
      nix-build default.nix -A {{ .NAME }} --no-out-link
      --repair
      --option substituters https://cache.nixos.org/
  push:
    desc: Pushes built packages to the cache.
    cmd: nix-build default.nix --no-out-link | cachix push wwmoraes
  lint:
    desc: Lints all nix source files.
    deps:
    - for: sources
      task: lint:{{ .ITEM }}
    sources:
    - '**/*.nix'
  clean:*:
    desc: Removes a derivation from the local store.
    label: clean:{{ .NAME }}
    vars:
      NAME: '{{ index .MATCH 0 }}'
    cmd: nix-store --delete $(nix-build default.nix -A {{ .NAME }} --no-out-link)
  lint:*:
    desc: Lints a nix source file.
    label: lint:{{ .TARGET }}
    silent: true
    vars:
      TARGET: '{{ index .MATCH 0 }}'
    cmd: nil diagnostics {{ .TARGET }}
  eval:
    desc: Evaluates repository as per NUR. It must succeed to update the index.
    deps:
    - task: submodules
    vars:
      TARGET: '{{ joinPath .ROOT_DIR "default.nix" }}'
      NURLIB: '{{ joinPath .ROOT_DIR "NUR" }}'
      NIXPKGS:
        sh: nix-instantiate --eval '<nixpkgs>' -A path
    cmd: >-
      env PAGER=cat
      nix-env
      -f {{ .TARGET | q }}
      -qa '*'
      --meta
      --xml
      --allowed-uris https://static.rust-lang.org
      --option restrict-eval true
      --option allow-import-from-derivation true
      --drv-path
      --show-trace
      -I nixpkgs={{ .NIXPKGS }}
      -I {{ .NURLIB }}/lib/evalRepo.nix
      -I {{ .TARGET | q }}
      -I {{ joinPath .ROOT_DIR "pkgs" | q }}
      -I {{ joinPath .ROOT_DIR "modules" | q }}
  submodules:
    internal: true
    vars:
      GENERATES:
        sh: git submodule foreach -q 'echo $displaypath/**'
    cmd: git submodule update --force --checkout
    sources:
    - .gitmodules
    generates:
    - '{{ .GENERATES }}'
